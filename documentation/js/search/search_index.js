var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.134,1,0.988]],["body/components/AppComponent.html",[0,0.245,1,1.705,2,1.496,3,0.441,4,0.441,5,1.508,6,1.508,7,1.508,8,1.508,9,0.329,10,3.942,11,0.48,12,4.301,13,4.349,14,1.676,15,5.756,16,5.756,17,5.756,18,5.756,19,4.349,20,1.216,21,1.508,22,2.263,23,2.138,24,1.774,25,6.268,26,1.774,27,5.756,28,0.52,29,1.425,30,0.953,31,0.022,32,0.48,33,0.014,34,1.346,35,1.774,36,1.877,37,1.425,38,2.14,39,1.508,40,0.648,41,1.508,42,1.071,43,1.135,44,1.508,45,1.135,46,1.346,47,1.508,48,1.202,49,1.508,50,1.135,51,1.508,52,1.135,53,1.648,54,1.539,55,1.508,56,1.135,57,1.508,58,1.135,59,1.508,60,1.508,61,1.135,62,1.508,63,1.135,64,1.496,65,1.508,66,1.135,67,1.508,68,1.202,69,1.508,70,1.071,71,0.441,72,1.508,73,1.135,74,1.508,75,1.135,76,0.649,77,1.135,78,1.508,79,1.508,80,0.014,81,0.017,82,0.014]],["title/modules/AppModule.html",[83,2.377,84,2.597]],["body/modules/AppModule.html",[1,1.847,3,0.438,4,0.438,9,0.327,13,4.333,28,0.737,30,0.947,31,0.022,34,1.338,42,1.517,45,1.607,48,1.701,50,1.607,52,1.607,56,1.607,58,1.607,61,1.607,63,1.607,66,1.607,68,1.701,70,1.517,73,1.607,75,1.607,80,0.014,81,0.017,82,0.014,83,2.873,84,5.119,85,2.873,86,2.873,87,4.333,88,4.333,89,3.472,90,3.918,91,3.918,92,3.918,93,3.918,94,3.918,95,4.092,96,1.801,97,4.89,98,3.139,99,3.918,100,4.596,101,3.918,102,4.596,103,3.918,104,3.472,105,3.918,106,4.596,107,3.139,108,4.596,109,4.596,110,2.873]],["title/modules/AppRoutingModule.html",[83,2.377,95,2.377]],["body/modules/AppRoutingModule.html",[0,0.254,3,0.414,4,0.414,9,0.309,20,1.074,28,0.819,30,0.895,31,0.023,32,0.451,33,0.013,42,1.282,45,1.358,50,1.358,52,1.358,53,1.63,54,1.662,56,1.358,58,1.358,61,1.358,63,1.358,64,1.667,66,1.358,70,1.411,71,0.58,73,1.358,75,1.358,76,0.61,80,0.013,81,0.017,82,0.013,85,2.714,87,3.28,89,3.28,95,3.459,101,3.702,105,4.717,111,4.342,112,4.342,113,4.342,114,5.533,115,3.702,116,5.533,117,3.513,118,1.5,119,3.459,120,4.342,121,3.28,122,4.342,123,1.916,124,1.589,125,4.342,126,3.28,127,4.342,128,3.28,129,4.342,130,3.28,131,4.342,132,3.28,133,4.342,134,3.28,135,4.342,136,3.28,137,4.342,138,4.342,139,3.28,140,4.342,141,3.28,142,4.342,143,1.685,144,3.28,145,4.342,146,1.904,147,6.168,148,4.342,149,4.342,150,2.714,151,5.533,152,4.342,153,4.342,154,4.342,155,1.79,156,4.342,157,2.505,158,2.714,159,2.714,160,2.714,161,2.714,162,2.714,163,1.128,164,2.965,165,4.342]],["title/classes/ArmCartesian.html",[33,0.011,166,1.777]],["body/classes/ArmCartesian.html",[3,0.402,4,0.402,9,0.3,11,0.564,28,0.475,31,0.023,32,0.438,33,0.012,40,0.676,80,0.013,81,0.016,82,0.013,163,1.834,166,2.965,167,1.376,168,4.483,169,3.596,170,2.539,171,2.069,172,2.539,173,1.02,174,0.564,175,0.475,176,0.763,177,1.277,178,5.232,179,2.713,180,2.382,181,2.382,182,2.713,183,3.466,184,0.798,185,3.395,186,0.831,187,5.431,188,1.988,189,2.075,190,3.709,191,3.709,192,0.763,193,2.382,194,1.259,195,0.879,196,0.873,197,2.909,198,1.264,199,1.581,200,3.66,201,3.965,202,1.959,203,2.259,204,2.107,205,2.107,206,1.971,207,2.713,208,2.107,209,2.259,210,2.107,211,1.096,212,0.678,213,2.259,214,3.187,215,4.218,216,2.382,217,0.965,218,3.187,219,4.218,220,2.713,221,1.166,222,3.218,223,0.723,224,2.107,225,0.991,226,4.218,227,3.66,228,2.433,229,3.965,230,2.636,231,4.539,232,3.187,233,2.909,234,2.909,235,1.035,236,1.544,237,3.187,238,3.187,239,1.544]],["title/classes/ArmJoint.html",[33,0.011,240,2.597]],["body/classes/ArmJoint.html",[3,0.42,4,0.42,9,0.314,11,0.58,28,0.496,31,0.023,32,0.457,33,0.018,40,0.628,80,0.013,81,0.017,82,0.013,163,1.847,167,1.437,168,4.544,170,2.61,171,2.103,173,0.708,175,0.496,176,0.784,177,1.287,179,2.79,180,2.449,181,2.449,182,2.79,184,0.857,186,0.839,188,2.044,189,1.522,192,0.784,195,0.87,196,0.708,198,1.275,199,1.626,202,2,203,2.36,204,3.063,205,3.323,206,2.06,207,2.79,208,2.201,209,2.36,210,2.201,211,1.145,212,0.708,213,2.36,216,2.449,217,0.985,220,2.79,221,1.19,222,3.284,223,0.755,224,2.201,225,0.804,235,1.583,239,1.613,240,3.815,241,3.757,242,4.871,243,4.762,244,4.22,245,7.106,246,6.132,247,5.585,248,5.585,249,4.406,250,4.406,251,4.406,252,4.406,253,4.406,254,6.132,255,4.406]],["title/classes/ArmTrajectory.html",[33,0.011,256,2.597]],["body/classes/ArmTrajectory.html",[3,0.421,4,0.421,9,0.315,11,0.581,28,0.497,31,0.023,32,0.459,33,0.018,40,0.63,80,0.013,81,0.017,82,0.013,163,1.848,167,1.442,168,4.549,170,2.616,171,2.105,173,0.711,175,0.497,176,0.786,177,1.288,179,2.796,180,2.455,181,2.455,182,2.796,184,0.858,186,0.84,188,2.049,189,1.527,192,0.786,195,0.871,196,0.711,198,1.298,199,1.63,202,2.003,203,2.368,204,3.068,205,3.327,206,2.067,207,2.796,208,2.209,209,2.368,210,2.209,211,1.149,212,0.711,213,2.368,216,2.455,217,0.987,220,2.796,221,1.192,222,3.289,223,0.758,224,2.209,225,0.807,235,1.085,239,1.618,242,4.877,243,4.772,244,4.229,256,3.823,257,3.77,258,7.191,259,2.871,260,5.597,261,4.421,262,4.421,263,4.421,264,4.421,265,4.421,266,6.142,267,4.421]],["title/components/AvailableJobsComponent.html",[0,0.134,42,0.881]],["body/components/AvailableJobsComponent.html",[0,0.176,1,0.428,2,0.704,3,0.157,4,0.157,5,0.537,6,0.884,7,0.537,8,0.537,9,0.117,11,0.415,14,1.164,20,0.32,21,0.537,22,1.936,23,1.829,24,0.835,26,0.835,28,0.63,29,1.063,30,0.339,31,0.023,32,0.281,33,0.008,34,0.48,35,0.835,36,0.884,37,1.063,38,1.304,39,0.537,40,0.749,41,0.537,42,0.927,43,1.486,44,0.537,45,0.404,46,0.48,47,0.537,48,0.428,49,0.537,50,0.404,51,0.537,52,0.404,53,1.423,54,0.847,55,0.537,56,0.404,57,0.537,58,0.404,59,0.537,60,0.537,61,0.404,62,0.537,63,0.404,64,0.704,65,0.537,66,0.404,67,0.537,68,0.428,69,0.537,70,0.382,71,0.479,72,0.537,73,0.404,74,0.537,75,0.404,76,0.94,77,0.847,78,0.537,79,0.537,80,0.005,81,0.008,82,0.005,96,1.577,110,1.03,118,0.569,119,4.219,123,0.453,150,1.03,155,2.715,157,1.563,158,1.03,159,1.03,160,1.694,161,1.03,162,1.03,163,0.428,166,0.77,173,0.643,174,0.581,175,0.388,176,0.381,177,1.121,184,0.577,186,0.824,192,0.737,194,1.44,195,0.822,196,0.643,198,0.494,199,1.383,211,1.039,212,1.02,217,0.921,221,0.974,223,1.022,225,0.957,233,0.882,234,0.882,235,1.607,239,0.603,268,5.1,269,1.125,270,1.851,271,2.216,272,4.227,273,2.31,274,2.31,275,1.851,276,4.051,277,3.338,278,3.338,279,1.381,280,3.767,281,3.021,282,3.021,283,1.126,284,1.34,285,2.942,286,2.31,287,2.942,288,2.036,289,1.822,290,2.157,291,3.767,292,3.021,293,1.582,294,2.942,295,2.942,296,3.583,297,3.767,298,2.942,299,2.942,300,1.715,301,3.409,302,1.845,303,1.55,304,3.409,305,1.648,306,3.409,307,3.409,308,2.709,309,1.052,310,1.647,311,2.549,312,2.11,313,2.709,314,2.942,315,1.188,316,1.117,317,1.117,318,2.31,319,3.767,320,1.647,321,2.31,322,1.647,323,1.353,324,1.647,325,1.304,326,1.304,327,0.992,328,1.052,329,0.745,330,1.052,331,3.021,332,1.552,333,1.117,334,1.117,335,1.647,336,0.835,337,1.052,338,0.992,339,1.647,340,2.31,341,1.647,342,2.31,343,1.845,344,1.955,345,2.514,346,1.052,347,1.266,348,1.647,349,2.343,350,1.647,351,2.31,352,1.647,353,2.31,354,2.047,355,1.052,356,1.647,357,1.052,358,0.835,359,0.992,360,1.647,361,2.31,362,2.31,363,1.647,364,1.711,365,1.724,366,1.117,367,1.052,368,2.17,369,1.812,370,2.036,371,1.423,372,1.647,373,2.31,374,2.31,375,0.992,376,2.141,377,1.647,378,1.739,379,1.647,380,1.647,381,1.052,382,2.357,383,1.647,384,2.31,385,3.409,386,1.647,387,1.851,388,3.767,389,2.31,390,1.647,391,2.31,392,1.647,393,1.647,394,1.647,395,1.851,396,1.647,397,3.021,398,1.647,399,1.647,400,1.405,401,1.405,402,1.405,403,1.405,404,2.31,405,1.405,406,2.157,407,1.405,408,0.679,409,0.569,410,0.882,411,2.942,412,2.31,413,1.245,414,2.31,415,1.125,416,1.405,417,2.942,418,1.405,419,1.405,420,1.405,421,2.157,422,1.405,423,2.047,424,1.405,425,2.31,426,1.405,427,1.405,428,1.405,429,1.405,430,1.03,431,2.31,432,1.405,433,1.405,434,1.405,435,1.405,436,1.405,437,1.405,438,4.051,439,2.31,440,1.405,441,1.405,442,1.405,443,2.31,444,1.245,445,1.245,446,1.245,447,1.266,448,1.125,449,1.125,450,1.125,451,2.307,452,1.125,453,1.245,454,1.405,455,2.31,456,1.405,457,1.245,458,1.563,459,2.047,460,1.245,461,1.851,462,1.694,463,1.405,464,1.245,465,1.245,466,1.245,467,1.405,468,2.31,469,1.245,470,1.03,471,2.31,472,2.31,473,2.31,474,1.405,475,1.405,476,1.405,477,1.125,478,1.03,479,0.679,480,3.397,481,1.03,482,1.613,483,3.397,484,1.117,485,3.397,486,0.77,487,1.405,488,1.125,489,1.03,490,0.77,491,0.77,492,1.125,493,1.405,494,1.405,495,1.405,496,2.31,497,2.31,498,1.405,499,1.405,500,1.405,501,2.709,502,2.709,503,2.709,504,2.31,505,2.31,506,1.353,507,1.647,508,1.405,509,1.188,510,0.77,511,1.513,512,1.647,513,0.77,514,0.679,515,2.065,516,2.065,517,1.117,518,1.266,519,1.266,520,0.77,521,0.77,522,1.613,523,2.065,524,0.77,525,4.051,526,4.472,527,1.405,528,1.052,529,2.942,530,4.051,531,1.405,532,1.405,533,1.245,534,2.942,535,1.405,536,3.767,537,2.942,538,1.405,539,2.31,540,1.405,541,1.405,542,1.245,543,1.991,544,2.942,545,1.613,546,1.405,547,1.405,548,1.613,549,2.31,550,2.942,551,3.767,552,1.647,553,1.647,554,1.647,555,2.709,556,1.647,557,2.31,558,2.31,559,2.942,560,1.405,561,1.405,562,1.405,563,1.405,564,1.405,565,2.31,566,1.405,567,1.405,568,1.405,569,1.647,570,3.451,571,1.647,572,1.647,573,3.451,574,2.709,575,2.709,576,1.647,577,1.647,578,1.647,579,1.647,580,1.647,581,1.647,582,1.647,583,1.647,584,1.647,585,1.647,586,1.405,587,1.647,588,1.647,589,1.647,590,1.647,591,1.647,592,1.647,593,1.647,594,0.603,595,1.647]],["title/classes/Base.html",[33,0.011,163,0.988]],["body/classes/Base.html",[3,0.371,4,0.371,9,0.277,11,0.664,31,0.023,32,0.404,33,0.015,40,0.803,80,0.012,81,0.016,82,0.012,143,2.243,163,1.34,167,1.27,170,1.82,172,1.82,173,1.028,175,0.438,176,0.724,177,1.258,179,3.527,180,3.051,181,3.051,182,2.575,184,0.702,186,0.846,189,2.316,192,0.724,193,2.26,195,0.877,196,0.989,198,1.317,204,2.575,205,2.575,206,2.701,207,3.072,208,3.196,210,2.575,211,1.34,212,1.127,216,2.883,217,1.107,220,3.284,221,1.337,222,3.691,223,0.99,225,1.123,235,0.956,236,1.425,239,2.115,344,1.2,596,3.319,597,5.154,598,1.345,599,3.893,600,4.395,601,5.154,602,3.893,603,3.893,604,3.319,605,3.893,606,3.319,607,3.893,608,3.893,609,3.893,610,3.893,611,3.893,612,3.319,613,3.893,614,3.319,615,3.893,616,4.927,617,5.778,618,4.927,619,3.319,620,3.893,621,3.319]],["title/classes/BaseMove.html",[33,0.011,490,1.777]],["body/classes/BaseMove.html",[3,0.402,4,0.402,9,0.3,11,0.564,28,0.475,31,0.023,32,0.438,33,0.012,40,0.676,80,0.013,81,0.016,82,0.013,163,1.834,167,1.376,170,2.539,171,2.069,172,2.539,173,1.02,174,0.564,175,0.475,176,0.763,177,1.277,178,5.232,179,2.713,180,2.382,181,2.382,182,2.713,183,3.466,184,0.798,185,3.395,186,0.831,188,1.988,189,2.075,190,3.709,191,3.709,192,0.763,193,2.382,194,1.259,195,0.879,196,0.873,197,2.909,198,1.264,199,1.581,200,3.66,201,3.965,202,1.959,203,2.259,204,2.107,205,2.107,206,1.971,207,2.713,208,2.107,209,2.259,210,2.107,211,1.096,212,0.678,213,2.259,214,3.187,216,2.382,217,0.965,218,3.187,220,2.713,221,1.166,222,3.218,223,0.723,224,2.107,225,0.991,227,3.66,228,2.433,229,3.965,230,2.636,231,4.539,232,3.187,233,2.909,234,2.909,235,1.035,236,1.544,237,3.187,238,3.187,239,1.544,490,2.965,622,5.597,623,3.596,624,5.431,625,4.218,626,4.218,627,4.218]],["title/components/ExecutionRunComponent.html",[0,0.134,45,0.934]],["body/components/ExecutionRunComponent.html",[0,0.202,1,0.467,2,0.755,3,0.171,4,0.171,5,0.585,6,0.585,7,0.585,8,0.585,9,0.128,11,0.38,14,0.846,20,0.348,21,0.585,22,1.972,23,1.864,24,0.895,26,0.895,28,0.696,29,1.128,30,0.599,31,0.023,32,0.186,33,0.005,34,0.523,35,0.895,36,0.948,37,0.895,38,1.373,39,0.585,40,0.61,41,0.585,42,0.416,43,0.441,44,0.585,45,1.033,46,1.676,47,0.585,48,0.467,49,0.585,50,0.441,51,0.585,52,0.441,53,1.484,54,1.135,55,0.585,56,0.441,57,0.585,58,0.441,59,0.585,60,0.585,61,0.441,62,0.585,63,0.441,64,0.755,65,0.585,66,0.441,67,0.585,68,1.679,69,0.585,70,0.416,71,0.171,72,0.585,73,0.441,74,0.585,75,0.441,76,0.975,77,0.441,78,0.585,79,0.585,80,0.005,81,0.009,82,0.005,96,1.583,98,3.379,107,1.226,118,0.62,123,1.007,124,0.657,139,4.88,155,1.198,164,2.874,171,0.948,173,0.743,174,0.302,175,0.327,176,0.408,177,1.05,184,0.659,186,0.833,188,1.064,189,1.453,192,0.649,194,0.416,195,0.798,196,0.588,198,0.53,199,0.523,202,1.957,211,1.609,212,0.925,217,1.007,221,0.897,223,1.074,225,0.951,235,1.473,259,1.358,271,1.811,279,1.004,283,0.948,284,1.421,288,2.234,289,1.509,293,1.225,300,1.421,302,1.634,303,1.957,305,1.509,309,1.128,311,1.036,312,2.105,315,1.274,316,1.735,317,1.198,325,1.373,326,1.373,327,0.657,328,0.697,329,0.494,330,0.697,332,1.795,333,0.74,334,0.74,336,1.128,337,0.697,338,1.692,343,1.921,344,1.297,345,1.606,346,2.105,349,1.064,355,0.697,357,0.697,358,0.553,359,0.657,364,1.194,365,1.424,366,0.74,367,1.128,368,1.799,369,1.265,370,1.421,371,1.735,375,1.064,376,3.315,378,0.657,381,0.697,387,1.226,397,1.356,408,0.74,409,1.004,410,0.961,461,3.157,462,2.889,470,2.289,479,2.31,480,1.122,505,2.478,509,1.845,510,0.839,511,2.027,513,0.839,514,1.509,515,2.69,516,2.312,517,1.509,518,1.358,519,1.358,520,0.839,521,1.711,522,1.711,523,1.967,524,0.839,525,3.122,526,3.588,527,1.531,528,1.128,529,2.478,530,3.588,531,1.531,532,1.531,533,1.356,534,1.531,535,1.531,536,3.122,537,2.478,538,1.531,539,2.478,540,1.531,541,1.531,542,1.356,543,3.232,544,3.122,545,1.711,546,1.531,547,1.531,548,1.967,549,2.478,550,2.478,551,3.588,557,1.531,558,3.122,559,1.531,560,1.531,561,1.531,562,1.531,563,1.531,564,1.531,565,2.478,566,1.531,567,1.531,568,1.531,594,0.657,598,1.597,628,5.507,629,1.531,630,2.906,631,2.906,632,2.478,633,5.423,634,2.906,635,2.906,636,4.218,637,3.661,638,2.906,639,3.661,640,3.661,641,3.661,642,3.122,643,4.622,644,3.661,645,2.105,646,1.358,647,4.208,648,4.208,649,4.208,650,4.208,651,4.208,652,4.208,653,4.208,654,2.906,655,4.208,656,1.711,657,0.787,658,3.179,659,3.179,660,2.631,661,2.309,662,2.027,663,1.692,664,3.827,665,5.63,666,4.622,667,2.906,668,2.631,669,2.631,670,1.358,671,1.274,672,3.935,673,1.795,674,2.102,675,6.001,676,2.022,677,4.947,678,1.795,679,1.795,680,2.874,681,1.795,682,2.906,683,1.795,684,1.676,685,1.676,686,1.004,687,3.588,688,1.795,689,2.478,690,4.208,691,4.218,692,2.906,693,2.906,694,1.509,695,2.196,696,1.795,697,2.906,698,4.947,699,4.218,700,2.906,701,1.795,702,4.208,703,2.906,704,1.795,705,2.478,706,2.906,707,3.122,708,1.795,709,0.897,710,0.897,711,0.897,712,1.274,713,0.839,714,1.967,715,0.897,716,0.839,717,0.839,718,0.897,719,1.795,720,1.795,721,1.795,722,2.906,723,1.845,724,2.906,725,1.795,726,1.795,727,0.897,728,0.897,729,0.897,730,0.897,731,0.62,732,1.128,733,0.787,734,0.787,735,0.787,736,0.897,737,0.839,738,0.897,739,0.897,740,1.795,741,0.74,742,0.897,743,1.122,744,1.795,745,1.531,746,1.795,747,1.531,748,1.795,749,1.531,750,1.795,751,1.795,752,1.795,753,1.356,754,2.478,755,1.795,756,1.795,757,1.795,758,0.897,759,1.036,760,1.795,761,1.795,762,1.795,763,1.795,764,1.795,765,4.208,766,1.795,767,1.795,768,2.906,769,2.906,770,1.795,771,1.795,772,1.795,773,2.906,774,2.478,775,1.795,776,3.661,777,3.661,778,1.795,779,1.795,780,2.906,781,4.208,782,1.795,783,1.274,784,2.478,785,2.478,786,2.906,787,1.795,788,2.906,789,2.906,790,2.906,791,1.452,792,2.874,793,4.208,794,2.471,795,4.218,796,0.897,797,0.897,798,1.452,799,0.897,800,0.897,801,0.897,802,0.897,803,0.897,804,0.897,805,0.839,806,1.452,807,0.897,808,1.452,809,0.897,810,0.897,811,0.897,812,0.839,813,0.897,814,0.839,815,0.897,816,0.897,817,0.897,818,1.795,819,1.795,820,1.795]],["title/classes/GripperGrip.html",[33,0.011,486,1.777]],["body/classes/GripperGrip.html",[3,0.449,4,0.449,9,0.335,11,0.489,28,0.53,31,0.023,32,0.489,33,0.014,40,0.655,80,0.014,81,0.018,82,0.014,163,1.866,167,1.536,170,2.721,171,2.153,172,2.721,173,1.016,174,0.604,175,0.53,176,0.818,177,1.261,179,2.908,180,2.553,181,2.553,184,0.825,185,3.639,186,0.802,188,2.131,189,2.183,190,3.976,191,3.976,192,0.818,193,2.553,194,1.349,195,0.864,196,0.757,197,3.118,198,1.063,202,2.061,203,2.522,204,2.352,205,2.352,206,2.201,207,2.908,208,2.352,209,2.522,210,2.352,211,1.224,212,0.757,213,2.522,224,2.352,225,0.859,227,3.809,228,2.716,229,4.127,230,2.943,233,3.118,234,3.118,235,1.156,236,1.723,486,3.086,821,4.398,822,4.014,823,4.708,824,4.708]],["title/classes/GripperRelease.html",[33,0.011,491,1.777]],["body/classes/GripperRelease.html",[3,0.449,4,0.449,9,0.335,11,0.489,28,0.53,31,0.023,32,0.489,33,0.014,40,0.655,80,0.014,81,0.018,82,0.014,163,1.866,167,1.536,170,2.721,171,2.153,172,2.721,173,1.016,174,0.604,175,0.53,176,0.818,177,1.261,179,2.908,180,2.553,181,2.553,184,0.825,185,3.639,186,0.802,188,2.131,189,2.183,190,3.976,191,3.976,192,0.818,193,2.553,194,1.349,195,0.864,196,0.757,197,3.118,198,1.063,202,2.061,203,2.522,204,2.352,205,2.352,206,2.201,207,2.908,208,2.352,209,2.522,210,2.352,211,1.224,212,0.757,213,2.522,224,2.352,225,0.859,227,3.809,228,2.716,229,4.127,230,2.943,233,3.118,234,3.118,235,1.156,236,1.723,491,3.086,821,4.398,825,4.014,826,4.708,827,4.708]],["title/components/HeaderComponent.html",[0,0.134,48,0.988]],["body/components/HeaderComponent.html",[0,0.234,1,1.148,2,1.454,3,0.421,4,0.421,5,1.44,6,1.44,7,1.44,8,1.44,9,0.315,11,0.458,20,0.857,21,1.44,22,2.253,23,2.129,24,1.723,26,1.723,28,0.497,29,1.891,30,0.91,31,0.022,32,0.458,33,0.013,34,1.286,35,1.723,36,1.824,37,1.361,38,2.105,39,1.44,40,0.629,41,1.44,42,1.023,43,1.084,44,1.44,45,1.084,46,1.286,47,1.44,48,1.677,49,1.44,50,1.084,51,1.44,52,1.084,53,1.635,54,1.507,55,1.44,56,1.084,57,1.44,58,1.084,59,1.44,60,1.44,61,1.084,62,1.44,63,1.084,64,1.454,65,1.44,66,1.084,67,1.44,68,1.148,69,1.44,70,1.023,71,0.421,72,1.44,73,1.084,74,1.44,75,1.084,76,0.62,77,1.084,78,1.44,79,1.44,80,0.013,81,0.017,82,0.013,174,0.58,175,0.497,184,0.84,186,0.68,192,0.786,217,0.71,223,0.757,283,1.824,303,2.218,325,1.824,326,1.824,336,1.723,376,2.996,828,3.765,829,4.875,830,5.593,831,5.502,832,5.593,833,6.138,834,5.593,835,4.416,836,4.416]],["title/injectables/HttpRequestService.html",[661,1.899,837,1.777]],["body/injectables/HttpRequestService.html",[3,0.258,4,0.258,9,0.193,11,0.58,12,1.691,28,0.681,30,0.557,31,0.023,32,0.281,33,0.008,40,0.658,53,0.627,54,1.287,71,0.38,76,1.043,77,0.98,80,0.008,81,0.012,82,0.008,96,1.745,107,1.847,123,0.744,163,1.362,173,0.94,174,0.414,175,0.304,176,0.561,177,1.104,184,0.577,186,0.826,189,2.331,192,0.561,195,0.83,196,0.94,198,1.134,199,1.162,211,1.886,216,1.751,217,1.084,221,0.775,223,0.958,225,1.134,239,2.046,244,3.017,270,2.727,296,2.727,300,2.17,316,1.646,317,1.646,323,3.103,329,1.61,336,1.23,345,1.186,364,1.709,365,1.615,368,2.09,369,1.81,370,2.035,378,1.918,408,1.646,409,0.934,410,1.449,423,3.017,430,1.691,448,1.847,449,1.847,450,1.847,451,2.303,452,1.847,458,1.56,477,2.727,504,4.468,543,3.584,658,4.224,659,4.224,661,1.994,680,3.996,694,1.646,699,3.404,732,1.615,783,2.566,837,1.866,838,1.691,839,5.837,840,2.306,841,5.296,842,3.404,843,5.241,844,3.993,845,3.404,846,4.766,847,5.16,848,3.993,849,3.993,850,5.241,851,5.241,852,5.241,853,3.404,854,5.241,855,5.241,856,3.993,857,3.404,858,2.306,859,3.993,860,3.993,861,2.704,862,5.645,863,3.993,864,5.5,865,3.993,866,2.704,867,3.404,868,2.704,869,3.96,870,3.404,871,3.404,872,2.704,873,3.96,874,5.851,875,2.704,876,3.993,877,2.704,878,3.993,879,2.704,880,3.993,881,5.241,882,2.704,883,3.993,884,3.993,885,2.704,886,3.404,887,2.704,888,2.704,889,3.495,890,2.704,891,2.139,892,3.58,893,3.404,894,3.586,895,2.704,896,2.306,897,2.306,898,1.847,899,2.704,900,4.746,901,4.746,902,3.883,903,4.766,904,3.404,905,2.704,906,2.704,907,4.746,908,2.704,909,2.704,910,2.704,911,2.306,912,2.306,913,2.704,914,2.704,915,2.704,916,2.704,917,3.993,918,2.704]],["title/injectables/JobsService.html",[311,2.194,837,1.777]],["body/injectables/JobsService.html",[0,0.189,2,1.402,3,0.398,4,0.398,9,0.297,11,0.56,12,2.608,28,0.672,30,0.86,31,0.023,32,0.433,33,0.012,40,0.469,43,1.729,71,0.514,80,0.013,81,0.016,82,0.013,107,2.849,155,2.903,173,0.671,174,0.717,175,0.469,176,0.758,177,1.223,182,2.694,184,0.726,186,0.814,192,0.586,194,1.25,195,0.706,196,0.671,211,1.796,212,1.015,216,2.77,217,1.077,221,0.81,225,0.761,239,2.187,296,4.81,311,3.111,323,3.156,329,1.738,345,2.77,364,2.06,365,1.662,408,1.72,430,2.608,658,4.515,659,4.942,837,2.521,838,2.608,841,4.598,858,3.557,871,4.598,892,3.683,894,4.942,898,2.849,902,2.608,903,3.557,911,3.557,919,3.557,920,5.976,921,5.976,922,6.318,923,6.7,924,5.393,925,4.172,926,4.598,927,4.773,928,4.172,929,5.393,930,5.393,931,4.598,932,4.075,933,5.393,934,4.172,935,4.172,936,4.172,937,4.172,938,4.172,939,5.393,940,4.172,941,4.172,942,4.172]],["title/classes/Move.html",[33,0.011,406,2.377]],["body/classes/Move.html",[3,0.474,4,0.474,9,0.354,11,0.624,14,1.447,31,0.023,32,0.516,33,0.018,40,0.804,76,0.968,80,0.015,81,0.018,82,0.015,167,1.621,173,0.799,174,0.727,175,0.728,176,0.845,184,0.787,186,0.787,189,2.5,194,1.152,195,0.847,196,0.799,198,1.304,212,0.967,225,1.098,227,2.867,272,4.89,279,1.717,281,3.755,282,3.755,406,3.762,453,3.755,594,2.203,723,2.95,943,4.238,944,6.018,945,6.018,946,4.97]],["title/classes/MyErrorStateMatcher.html",[33,0.011,382,2.597]],["body/classes/MyErrorStateMatcher.html",[0,0.18,3,0.246,4,0.246,9,0.184,11,0.268,14,1.123,22,0.796,23,0.752,24,0.796,26,0.796,28,0.718,29,1.189,30,0.532,31,0.023,32,0.4,33,0.011,37,0.796,40,0.69,42,0.599,43,1.346,53,1.187,71,0.488,76,0.931,77,0.634,80,0.008,81,0.012,82,0.008,96,1.583,110,1.614,118,0.892,119,2.412,123,0.71,150,1.614,155,2.733,157,2.226,158,1.614,159,1.614,160,2.412,161,1.614,162,1.614,163,0.671,166,1.207,167,0.842,173,0.415,174,0.532,175,0.434,177,1.05,184,0.623,186,0.469,192,0.363,194,1.42,195,0.338,196,0.415,198,0.471,199,1.345,211,1.003,212,1.007,217,0.62,223,0.792,225,1.119,233,1.383,234,1.383,235,1.134,239,0.945,268,2.915,269,1.764,270,1.764,271,2.182,272,4.143,273,2.202,274,2.202,275,1.764,276,3.938,277,1.951,278,2.915,279,1.333,280,2.202,281,2.915,282,2.915,283,1.506,284,1.498,285,2.202,286,2.202,287,2.202,288,1.989,289,1.591,290,1.614,291,3.29,292,2.915,293,1.596,294,2.202,295,2.202,296,3.5,297,3.29,298,2.202,299,2.202,300,1.498,301,2.202,302,1.498,303,1.258,304,2.202,305,1.065,306,2.202,307,2.202,311,2.665,312,2.129,314,3.29,315,1.133,316,1.065,317,1.065,318,2.202,319,3.938,321,2.202,323,1.29,325,1.258,326,1.258,327,0.945,328,1.003,329,0.71,330,1.003,331,2.915,332,1.498,333,1.065,334,1.065,336,0.796,337,1.003,338,0.945,340,2.202,342,2.202,343,1.793,344,1.966,345,2.405,346,1.003,347,1.207,349,2.293,351,2.202,353,2.202,354,1.951,355,1.003,357,1.003,358,0.796,359,0.945,361,2.202,362,2.202,364,1.671,365,1.69,366,1.065,367,1.003,368,2.164,369,1.77,370,1.989,371,1.904,373,2.202,374,2.202,375,0.945,376,1.383,378,1.691,381,1.003,382,3.155,384,2.202,385,4.675,387,1.764,388,4.905,389,2.202,391,2.202,395,1.764,397,1.951,400,2.202,401,2.202,402,2.202,403,2.202,404,3.29,405,2.202,406,1.614,407,2.202,408,1.065,409,0.892,410,1.383,411,4.675,412,4.369,413,1.951,414,3.938,415,1.764,416,3.29,417,4.675,418,3.29,419,3.29,420,3.29,421,3.428,422,3.29,423,4.346,424,3.29,425,3.29,426,2.202,427,2.202,428,2.202,429,2.202,430,1.614,431,3.29,432,2.202,433,2.202,434,2.202,435,2.202,436,2.202,437,2.202,438,4.905,439,3.29,440,2.202,441,2.202,442,2.202,443,3.29,444,1.951,445,1.951,446,1.951,447,1.803,448,1.764,449,1.764,450,1.764,451,2.956,452,1.764,453,1.951,454,2.202,455,3.29,456,2.202,457,1.951,458,2.226,459,2.915,460,1.951,461,2.635,462,2.412,463,2.202,464,1.951,465,1.951,466,1.951,467,2.202,468,3.29,469,1.951,470,1.614,471,3.29,472,3.29,473,3.29,474,2.202,475,2.202,476,2.202,477,1.764,478,1.614,479,1.065,480,3.917,481,1.614,482,1.207,483,3.917,484,1.591,485,3.917,486,1.207,487,2.202,488,1.764,489,1.614,490,1.207,491,1.207,492,1.764,493,2.202,494,2.202,495,2.202,496,3.29,497,3.29,498,2.202,499,2.202,500,2.202,947,3.858,948,2.583]],["title/classes/NewMethod.html",[33,0.011,484,1.568]],["body/classes/NewMethod.html",[3,0.401,4,0.401,9,0.3,11,0.437,28,0.474,31,0.023,32,0.437,33,0.012,40,0.676,71,0.517,80,0.013,81,0.016,82,0.013,163,1.833,167,1.374,170,2.537,171,1.77,173,1.019,174,0.563,175,0.474,176,0.762,177,1.277,178,5.231,179,2.711,180,2.38,181,2.38,182,2.711,183,3.464,184,0.798,185,3.393,186,0.831,188,1.986,189,1.455,195,0.879,196,0.872,197,2.907,198,1.264,202,1.958,203,2.257,204,2.104,205,2.104,206,1.969,207,2.711,208,2.104,209,2.257,210,2.104,211,1.095,212,0.677,213,2.257,214,3.183,216,2.38,217,0.965,218,3.183,220,2.711,221,1.165,222,2.257,223,0.722,224,2.104,225,0.991,227,3.658,228,2.431,229,3.964,230,2.634,231,4.536,232,3.183,233,2.907,234,2.907,235,1.034,236,1.542,237,3.183,238,3.183,239,1.542,242,5.231,484,2.945,509,2.781,731,2.19,949,5.595,950,3.183,951,4.627,952,5.427,953,5.427,954,4.213,955,4.213,956,4.213]],["title/components/NoPageFoundComponent.html",[0,0.134,50,0.934]],["body/components/NoPageFoundComponent.html",[0,0.233,1,1.13,2,1.439,3,0.414,4,0.414,5,1.418,6,1.418,7,1.418,8,1.418,9,0.31,11,0.451,20,1.42,21,1.418,22,2.249,23,2.126,24,1.706,26,1.706,28,0.489,29,1.877,30,0.896,31,0.022,32,0.451,33,0.013,34,1.265,35,1.706,36,1.806,37,1.339,38,2.092,39,1.418,40,0.623,41,1.418,42,1.007,43,1.067,44,1.418,45,1.067,46,1.265,47,1.418,48,1.13,49,1.418,50,1.575,51,1.418,52,1.067,53,1.63,54,1.496,55,1.418,56,1.067,57,1.418,58,1.067,59,1.418,60,1.418,61,1.067,62,1.418,63,1.067,64,1.439,65,1.418,66,1.067,67,1.418,68,1.13,69,1.418,70,1.007,71,0.414,72,1.418,73,1.067,74,1.418,75,1.067,76,0.611,77,1.067,78,1.418,79,1.418,80,0.013,81,0.017,82,0.013,121,4.603,174,0.575,175,0.489,184,0.837,186,0.673,192,0.778,217,0.699,223,0.745,283,1.806,303,2.209,325,1.806,326,1.806,336,1.706,957,5.195,958,3.706,959,5.537,960,6.773,961,6.093,962,5.537,963,4.346,964,4.346]],["title/classes/SocketDataService.html",[33,0.011,664,2.597]],["body/classes/SocketDataService.html",[3,0.436,4,0.436,9,0.326,11,0.593,19,4.32,28,0.643,31,0.023,32,0.475,33,0.014,40,0.515,46,1.665,71,0.436,80,0.014,81,0.017,82,0.014,167,1.492,173,0.735,174,0.593,175,0.515,176,0.803,177,1.252,184,0.818,186,0.818,192,0.876,194,1.325,195,0.598,196,0.735,211,1.486,212,0.735,217,1.003,221,0.888,223,0.784,225,0.835,239,1.674,270,3.905,329,1.573,408,1.886,642,6.001,645,2.537,664,3.905,672,4.32,687,4.875,691,4.875,695,5.363,707,5.318,927,3.456,931,3.9,965,3.9,966,4.875,967,5.718,968,6.727,969,6.535,970,5.318,971,5.718,972,5.718,973,5.718,974,5.718,975,4.574,976,4.574,977,4.32,978,5.718,979,5.718,980,4.574,981,3.9,982,3.9,983,3.9,984,4.574,985,4.574,986,4.574,987,4.574,988,4.574,989,4.574]],["title/components/WizardArmCartesianComponent.html",[0,0.134,52,0.934]],["body/components/WizardArmCartesianComponent.html",[0,0.231,1,0.537,2,1.185,3,0.197,4,0.197,5,0.674,6,0.674,7,0.674,8,0.674,9,0.147,11,0.417,14,1.978,20,0.401,21,0.674,22,2.028,23,1.917,24,1.002,26,1.002,28,0.62,29,1.239,30,0.426,31,0.023,32,0.215,33,0.006,34,0.602,35,1.002,36,1.061,37,1.002,38,1.487,39,0.674,40,0.558,41,0.674,42,0.479,43,0.507,44,0.674,45,0.507,46,0.602,47,0.674,48,0.537,49,0.674,50,0.507,51,0.674,52,1.119,53,1.622,54,1.772,55,0.674,56,0.507,57,0.674,58,0.507,59,0.674,60,0.674,61,0.507,62,0.674,63,0.507,64,0.845,65,0.674,66,0.507,67,0.674,68,1.724,69,0.674,70,0.479,71,0.197,72,0.674,73,0.507,74,0.674,75,0.507,76,0.825,77,0.507,78,0.674,79,0.674,80,0.006,81,0.01,82,0.006,96,1.653,118,0.714,123,1.811,124,0.757,134,4.974,143,1.263,166,2.864,171,1.061,173,0.523,174,0.338,175,0.366,176,0.457,177,1.005,183,2.861,184,0.694,186,0.845,188,1.191,192,0.861,193,1.426,194,0.932,195,0.846,196,0.523,198,0.905,199,0.947,200,2.861,201,1.292,202,2.032,211,0.537,212,0.846,217,0.917,221,1.209,223,1.006,225,0.832,235,0.798,236,1.191,259,2.131,271,2.487,279,2.347,283,1.061,284,1.561,288,1.77,289,1.658,290,2.514,293,1.862,300,1.561,302,1.77,303,2.032,305,2.421,309,1.263,312,2.139,315,1.426,316,1.88,317,1.341,323,1.033,325,1.487,326,1.487,327,0.757,328,0.803,329,0.569,330,0.803,332,2.139,333,0.852,334,0.852,336,1.239,337,0.803,338,2.016,343,1.263,344,1.758,346,1.77,347,1.52,349,0.757,355,0.803,357,0.803,358,0.637,359,0.757,364,1.312,365,1.239,366,0.852,367,1.263,368,1.819,369,1.389,370,1.561,371,1.88,375,1.815,376,2.442,378,0.757,381,0.803,409,1.123,421,1.292,447,0.966,478,1.292,479,2.271,482,1.52,506,2.278,509,2,510,0.966,511,1.763,513,0.966,514,1.88,515,2.575,516,2.461,517,1.341,518,0.966,519,0.966,520,0.966,521,1.88,522,0.966,523,0.966,524,0.966,528,0.803,543,2.861,545,0.966,548,0.966,594,1.472,598,2.028,645,1.77,646,1.52,656,1.88,657,1.426,660,2.851,661,2.477,662,2.175,663,1.815,668,2.033,669,2.514,670,1.88,671,1.426,676,0.803,684,2.631,685,1.877,686,1.123,694,0.852,709,1.033,710,1.033,711,1.033,712,2,713,1.88,714,2.131,715,1.033,716,0.966,717,0.966,718,1.033,723,1.426,727,1.033,728,1.033,729,1.033,730,1.033,731,0.714,732,0.637,733,0.907,734,0.907,735,0.907,736,1.033,737,0.966,738,1.033,739,1.033,741,0.852,742,1.033,743,1.292,758,1.033,759,1.193,791,1.625,792,2.222,794,1.625,796,1.033,797,1.033,798,1.625,799,1.033,800,1.033,801,1.033,802,1.033,803,1.033,804,1.033,805,0.966,806,1.625,807,1.033,808,1.625,809,1.033,810,1.033,811,1.033,812,0.966,813,3.289,814,0.966,815,1.033,816,1.033,817,1.033,891,1.742,902,1.292,990,2.556,991,1.763,992,1.742,993,1.877,994,2.033,995,2.033,996,2.033,997,4.021,998,3.253,999,2.514,1000,2.514,1001,2.514,1002,2.514,1003,2.514,1004,2.514,1005,2.477,1006,2.514,1007,2.514,1008,3.038,1009,3.253,1010,2.067,1011,2.067,1012,2.067,1013,2.067,1014,1.877,1015,2.067,1016,3.553,1017,3.496,1018,2.067,1019,2.067,1020,2.458,1021,2.067,1022,2.067,1023,2.067,1024,2.067,1025,2.067,1026,1.625,1027,2.067,1028,2.067,1029,2.067,1030,1.763,1031,1.412,1032,2.067,1033,1.292,1034,2.033,1035,3.253,1036,2.458,1037,4.56,1038,2.067,1039,2.067,1040,2.458]],["title/components/WizardArmJoinsComponent.html",[0,0.134,56,0.934]],["body/components/WizardArmJoinsComponent.html",[0,0.215,1,0.664,2,0.995,3,0.243,4,0.243,5,0.833,6,0.833,7,0.833,8,0.833,9,0.182,11,0.265,14,1.975,20,0.496,21,0.833,22,2.104,23,1.988,24,1.179,26,1.179,28,0.614,29,1.414,30,0.527,31,0.023,32,0.265,33,0.008,34,0.744,35,1.179,36,1.248,37,1.179,38,1.662,39,0.833,40,0.614,41,0.833,42,0.592,43,0.627,44,0.833,45,0.627,46,0.744,47,0.833,48,0.664,49,0.833,50,0.627,51,0.833,52,0.627,53,1.632,54,1.769,55,0.833,56,1.251,57,0.833,58,0.627,59,0.833,60,0.833,61,0.627,62,0.833,63,0.627,64,0.995,65,0.833,66,0.627,67,0.833,68,1.763,69,0.833,70,0.592,71,0.243,72,0.833,73,0.627,74,0.833,75,0.627,76,0.834,77,0.627,78,0.833,79,0.833,80,0.008,81,0.012,82,0.008,96,1.681,118,0.883,123,1.777,124,0.935,132,4.88,171,1.248,173,0.615,174,0.397,175,0.431,176,0.538,177,1.046,184,0.465,186,0.85,192,0.894,194,0.592,195,0.874,196,0.615,198,0.996,199,0.744,202,2.134,212,0.921,217,0.877,221,1.284,223,0.936,235,0.94,236,1.401,259,2.382,271,2.483,279,2.343,283,1.248,284,1.782,288,1.979,289,1.892,293,1.905,300,1.782,302,1.979,303,1.662,305,1.892,309,1.486,312,2.119,325,1.248,326,1.248,327,0.935,328,0.992,329,0.703,330,0.992,332,1.782,333,1.053,334,1.053,336,0.787,337,0.992,338,1.68,343,1.486,344,1.57,346,1.486,349,0.935,355,0.992,357,0.992,358,0.787,359,0.935,364,1.497,365,1.414,366,1.053,367,1.486,368,1.979,369,1.585,370,1.782,371,1.578,375,0.935,378,0.935,381,0.992,409,1.322,479,2.362,506,1.912,509,2.235,510,1.194,511,2.013,513,2.382,514,2.101,515,2.777,516,2.678,517,1.578,518,1.194,519,1.194,520,2.382,521,2.145,522,1.194,523,1.194,524,1.194,528,0.992,545,1.194,548,1.194,594,1.68,598,0.883,645,1.979,646,1.789,656,2.145,657,1.679,662,2.235,663,1.865,676,0.992,694,1.053,709,1.276,710,1.276,711,1.276,712,1.679,713,1.194,714,1.789,715,1.276,716,1.194,717,1.194,718,1.276,723,1.679,727,1.276,728,1.276,729,1.276,730,1.276,731,0.883,732,0.787,733,1.121,734,1.121,735,1.121,736,1.276,737,1.194,738,1.276,739,1.276,741,1.053,742,1.276,758,1.276,791,1.912,794,1.912,796,1.276,797,1.276,798,1.912,799,1.276,800,1.276,801,1.276,802,1.276,803,1.276,804,1.276,805,1.194,806,1.912,807,1.276,808,1.912,809,1.276,810,1.276,811,1.276,812,1.194,813,3.41,814,1.194,815,1.276,816,1.276,817,1.276,990,2.508,1005,2.727,1016,3.633,1017,3.633,1026,1.912,1041,2.179,1042,5.097,1043,4.589,1044,3.828,1045,3.913,1046,3.913,1047,3.913,1048,2.648,1049,3.913,1050,3.828,1051,2.555,1052,2.555,1053,2.555,1054,2.555,1055,2.555,1056,2.555,1057,2.555,1058,2.555]],["title/components/WizardArmTrajectoryComponent.html",[0,0.134,58,0.934]],["body/components/WizardArmTrajectoryComponent.html",[0,0.214,1,0.663,2,0.994,3,0.243,4,0.243,5,0.832,6,0.832,7,0.832,8,0.832,9,0.182,11,0.265,14,1.974,20,0.495,21,0.832,22,2.103,23,1.987,24,1.178,26,1.178,28,0.614,29,1.413,30,0.526,31,0.023,32,0.265,33,0.008,34,0.743,35,1.178,36,1.247,37,1.178,38,1.661,39,0.832,40,0.614,41,0.832,42,0.591,43,0.626,44,0.832,45,0.626,46,0.743,47,0.832,48,0.663,49,0.832,50,0.626,51,0.832,52,0.626,53,1.632,54,1.768,55,0.832,56,0.626,57,0.832,58,1.25,59,1.779,60,0.832,61,0.626,62,0.832,63,0.626,64,0.994,65,0.832,66,0.626,67,0.832,68,1.763,69,0.832,70,0.591,71,0.243,72,0.832,73,0.626,74,0.832,75,0.626,76,0.834,77,0.626,78,0.832,79,0.832,80,0.008,81,0.012,82,0.008,96,1.68,118,0.881,123,1.776,124,0.934,130,4.879,171,1.247,173,0.615,174,0.397,175,0.43,176,0.537,177,1.045,184,0.465,186,0.85,192,0.893,194,0.591,195,0.874,196,0.615,198,0.996,199,0.743,202,2.133,212,0.92,217,0.877,221,1.283,223,0.935,235,0.939,236,1.4,259,2.381,271,2.482,279,2.342,283,1.247,284,1.78,288,1.977,289,1.891,293,1.904,300,1.78,302,1.977,303,1.661,305,1.891,309,1.484,312,2.118,325,1.247,326,1.247,327,0.934,328,0.991,329,0.702,330,0.991,332,1.78,333,1.052,334,1.052,336,0.786,337,0.991,338,1.678,343,1.484,344,1.569,346,1.484,349,0.934,355,0.991,357,0.991,358,0.786,359,0.934,364,1.496,365,1.413,366,1.052,367,1.484,368,1.978,369,1.584,370,1.78,371,1.576,375,0.934,378,0.934,381,0.991,409,1.321,479,2.361,506,1.91,509,2.234,510,1.193,511,2.011,513,2.381,514,2.1,515,2.776,516,2.677,517,1.576,518,1.193,519,1.193,520,2.381,521,2.143,522,1.193,523,1.193,524,1.193,528,0.991,545,1.193,548,1.193,594,1.678,598,0.881,645,1.977,646,1.787,656,2.143,657,1.677,662,2.234,663,1.864,676,0.991,694,1.052,709,1.275,710,1.275,711,1.275,712,1.677,713,1.193,714,1.787,715,1.275,716,1.193,717,1.193,718,1.275,723,1.677,727,1.275,728,1.275,729,1.275,730,1.275,731,0.881,732,0.786,733,1.119,734,1.119,735,1.119,736,1.275,737,1.193,738,1.275,739,1.275,741,1.052,742,1.275,758,1.275,791,1.91,794,1.91,796,1.275,797,1.275,798,1.91,799,1.275,800,1.275,801,1.275,802,1.275,803,1.275,804,1.275,805,1.193,806,1.91,807,1.275,808,1.91,809,1.275,810,1.275,811,1.275,812,1.193,813,3.41,814,1.193,815,1.275,816,1.275,817,1.275,990,2.507,1005,2.725,1016,3.633,1017,3.633,1026,1.91,1045,3.91,1046,3.91,1047,3.91,1048,2.646,1049,3.91,1059,2.176,1060,3.26,1061,4.586,1062,3.824,1063,3.824,1064,2.552,1065,2.552,1066,2.552,1067,2.552,1068,2.552,1069,2.552,1070,2.552,1071,2.552]],["title/components/WizardBaseComponent.html",[0,0.134,61,0.934]],["body/components/WizardBaseComponent.html",[0,0.232,1,0.549,2,1.2,3,0.201,4,0.201,5,0.689,6,0.689,7,0.689,8,0.689,9,0.151,11,0.423,14,1.985,20,0.41,21,0.689,22,2.037,23,1.925,24,1.02,26,1.02,28,0.625,29,1.257,30,0.436,31,0.023,32,0.219,33,0.006,34,0.615,35,1.02,36,1.08,37,1.02,38,1.506,39,0.689,40,0.564,41,0.689,42,0.49,43,0.519,44,0.689,45,0.519,46,0.615,47,0.689,48,0.549,49,0.689,50,0.519,51,0.689,52,0.519,53,1.626,54,1.23,55,0.689,56,0.519,57,0.689,58,0.519,59,0.689,60,0.689,61,1.133,62,0.689,63,0.519,64,0.86,65,0.689,66,0.519,67,0.689,68,1.731,69,0.689,70,0.49,71,0.201,72,0.689,73,0.519,74,0.689,75,0.519,76,0.83,77,0.519,78,0.689,79,0.689,80,0.006,81,0.01,82,0.006,96,1.664,118,0.73,123,1.819,124,0.774,136,4.995,143,1.285,163,1.2,171,1.08,173,0.532,174,0.344,175,0.372,176,0.465,177,1.014,183,2.891,184,0.699,186,0.848,188,1.212,192,0.866,193,1.452,194,0.945,195,0.85,196,0.532,198,0.915,199,0.964,200,1.22,201,1.321,202,2.043,211,0.549,212,0.854,217,0.924,221,1.216,223,1.013,225,0.842,235,0.813,236,1.212,259,2.158,271,2.495,279,2.355,283,1.08,284,1.584,288,1.792,289,1.682,290,2.55,293,1.871,300,1.584,302,1.792,303,2.043,305,2.437,309,1.285,312,2.157,315,1.452,316,1.903,317,1.365,323,1.056,325,1.506,326,1.506,327,0.774,328,0.821,329,0.582,330,0.821,332,2.157,333,0.872,334,0.872,336,1.257,337,0.821,338,2.033,343,1.285,344,1.772,346,1.792,347,1.547,349,0.774,355,0.821,357,0.821,358,0.651,359,0.774,364,1.331,365,1.257,366,0.872,367,1.285,368,1.836,369,1.409,370,1.584,371,1.903,375,1.834,376,2.473,378,0.774,381,0.821,409,1.143,421,1.321,447,0.988,478,1.321,479,2.29,482,1.547,490,2.763,506,2.306,509,2.024,510,0.988,511,1.789,513,0.988,514,1.903,515,2.597,516,2.484,517,1.365,518,0.988,519,0.988,520,0.988,521,1.907,522,0.988,523,0.988,524,0.988,528,0.821,543,2.891,545,0.988,548,0.988,594,1.493,598,2.042,645,1.792,646,1.547,656,1.907,657,1.452,660,2.886,661,2.503,662,2.198,663,1.834,668,2.069,669,2.55,670,1.907,671,1.452,676,0.821,684,2.663,685,1.91,686,1.143,694,0.872,709,1.056,710,1.056,711,1.056,712,2.024,713,1.907,714,2.158,715,1.056,716,0.988,717,0.988,718,1.056,723,1.452,727,1.056,728,1.056,729,1.056,730,1.056,731,0.73,732,0.651,733,0.927,734,0.927,735,0.927,736,1.056,737,0.988,738,1.056,739,1.056,741,0.872,742,1.056,743,1.321,758,1.056,759,1.22,791,1.653,792,2.261,794,1.653,796,1.056,797,1.056,798,1.653,799,1.056,800,1.056,801,1.056,802,1.056,803,1.056,804,1.056,805,0.988,806,1.653,807,1.056,808,1.653,809,1.056,810,1.056,811,1.056,812,0.988,813,3.302,814,0.988,815,1.056,816,1.056,817,1.056,891,1.773,902,1.321,990,2.566,992,1.773,993,1.91,994,2.069,995,2.069,996,2.069,999,2.55,1000,2.55,1001,2.55,1002,2.55,1003,2.55,1004,2.55,1005,2.503,1006,2.55,1007,2.55,1008,3.082,1014,1.91,1016,3.567,1017,3.512,1020,2.501,1026,1.653,1031,1.444,1033,1.321,1034,2.069,1036,2.501,1040,2.501,1060,2.822,1072,1.802,1073,3.31,1074,4.08,1075,3.31,1076,3.31,1077,2.114,1078,2.114,1079,2.114,1080,2.114,1081,2.114,1082,2.114,1083,2.114,1084,2.114,1085,2.114,1086,2.114,1087,2.114,1088,2.114,1089,2.114,1090,2.114,1091,2.114,1092,1.802,1093,2.114,1094,3.31,1095,4.616,1096,2.114,1097,2.114]],["title/components/WizardGripperGripComponent.html",[0,0.134,63,0.934]],["body/components/WizardGripperGripComponent.html",[0,0.232,1,0.576,2,1.231,3,0.211,4,0.211,5,0.723,6,0.723,7,0.723,8,0.723,9,0.158,11,0.436,14,1.979,20,0.43,21,0.723,22,2.055,23,1.941,24,1.059,26,1.059,28,0.61,29,1.296,30,0.457,31,0.023,32,0.23,33,0.007,34,0.646,35,1.059,36,1.121,37,1.059,38,1.545,39,0.723,40,0.577,41,0.723,42,0.514,43,0.544,44,0.723,45,0.544,46,0.646,47,0.723,48,0.576,49,0.723,50,0.544,51,0.723,52,0.544,53,1.634,54,1.033,55,0.723,56,0.544,57,0.723,58,0.544,59,0.723,60,0.723,61,0.544,62,0.723,63,1.163,64,1.865,65,0.723,66,0.544,67,0.723,68,1.745,69,0.723,70,0.514,71,0.211,72,0.723,73,0.544,74,0.723,75,0.544,76,0.843,77,0.544,78,0.723,79,0.723,80,0.007,81,0.01,82,0.007,96,1.686,118,0.766,123,1.786,124,0.812,126,4.906,143,1.334,171,1.121,173,0.552,174,0.357,175,0.387,176,0.483,177,0.989,184,0.71,186,0.844,188,1.258,192,0.861,193,1.507,194,0.975,195,0.858,196,0.552,198,0.935,199,0.646,202,2.067,212,0.871,217,0.909,221,1.19,223,1.002,225,0.768,235,0.843,236,1.258,259,2.214,271,2.512,279,2.347,283,1.121,284,1.633,288,1.839,289,1.734,293,1.869,300,1.633,302,1.839,303,2.067,305,2.473,309,1.334,312,2.195,315,1.507,316,1.953,317,1.417,325,1.545,326,1.545,327,0.812,328,0.861,329,0.61,330,0.861,332,2.195,333,0.914,334,0.914,336,1.296,337,0.861,338,2.07,343,1.334,344,1.801,346,1.839,347,1.606,349,0.812,355,0.861,357,0.861,358,0.683,359,0.812,364,1.372,365,1.296,366,0.914,367,1.334,368,1.873,369,1.453,370,1.633,371,1.417,375,1.54,378,0.812,381,0.861,409,1.187,447,1.037,479,2.235,482,1.606,486,2.917,506,1.716,509,2.077,510,1.037,511,1.845,513,1.037,514,1.953,515,2.643,516,2.534,517,1.417,518,1.037,519,1.037,520,1.037,521,1.966,522,1.037,523,1.037,524,1.037,528,0.861,545,1.037,548,1.037,594,1.54,598,2.072,645,1.839,646,1.606,656,1.966,657,1.507,662,2.248,663,1.876,671,1.507,676,0.861,684,2.733,685,1.982,686,1.187,694,0.914,709,1.108,710,1.108,711,1.108,712,2.077,713,1.966,714,2.214,715,1.108,716,1.037,717,1.037,718,1.108,723,1.507,727,1.108,728,1.108,729,1.108,730,1.108,731,0.766,732,0.683,733,0.972,734,0.972,735,0.972,736,1.108,737,1.037,738,1.108,739,1.108,741,0.914,742,1.108,758,1.108,759,1.279,791,1.716,794,1.716,796,1.108,797,1.108,798,1.716,799,1.108,800,1.108,801,1.108,802,1.108,803,1.108,804,1.108,805,1.037,806,1.716,807,1.108,808,1.716,809,1.108,810,1.108,811,1.108,812,1.037,813,3.331,814,1.037,815,1.108,816,1.108,817,1.108,891,1.84,990,2.521,992,1.84,993,1.982,994,2.148,995,2.148,996,2.148,999,2.629,1000,2.629,1001,2.629,1002,2.629,1003,2.629,1004,2.629,1005,2.56,1006,2.629,1007,2.629,1014,1.982,1016,3.544,1017,3.544,1026,1.716,1033,1.386,1034,2.148,1098,1.891,1099,4.039,1100,4.206,1101,3.436,1102,3.436,1103,2.218,1104,2.218,1105,2.218,1106,2.218,1107,2.218,1108,2.218,1109,2.218,1110,2.218,1111,2.218,1112,2.218,1113,2.218,1114,1.891,1115,1.891,1116,2.218,1117,3.436,1118,2.218]],["title/components/WizardGripperReleaseComponent.html",[0,0.134,66,0.934]],["body/components/WizardGripperReleaseComponent.html",[0,0.232,1,0.576,2,1.231,3,0.211,4,0.211,5,0.723,6,0.723,7,0.723,8,0.723,9,0.158,11,0.436,14,1.979,20,0.43,21,0.723,22,2.055,23,1.941,24,1.059,26,1.059,28,0.61,29,1.296,30,0.457,31,0.023,32,0.23,33,0.007,34,0.646,35,1.059,36,1.121,37,1.059,38,1.545,39,0.723,40,0.577,41,0.723,42,0.514,43,0.544,44,0.723,45,0.544,46,0.646,47,0.723,48,0.576,49,0.723,50,0.544,51,0.723,52,0.544,53,1.634,54,1.033,55,0.723,56,0.544,57,0.723,58,0.544,59,0.723,60,0.723,61,0.544,62,0.723,63,0.544,64,1.865,65,0.723,66,1.163,67,0.723,68,1.745,69,0.723,70,0.514,71,0.211,72,0.723,73,0.544,74,0.723,75,0.544,76,0.843,77,0.544,78,0.723,79,0.723,80,0.007,81,0.01,82,0.007,96,1.686,118,0.766,123,1.786,124,0.812,128,4.906,143,1.334,171,1.121,173,0.552,174,0.357,175,0.387,176,0.483,177,0.989,184,0.71,186,0.844,188,1.258,192,0.861,193,1.507,194,0.975,195,0.858,196,0.552,198,0.935,199,0.646,202,2.067,212,0.871,217,0.909,221,1.19,223,1.002,225,0.768,235,0.843,236,1.258,259,2.214,271,2.512,279,2.347,283,1.121,284,1.633,288,1.839,289,1.734,293,1.869,300,1.633,302,1.839,303,2.067,305,2.473,309,1.334,312,2.195,315,1.507,316,1.953,317,1.417,325,1.545,326,1.545,327,0.812,328,0.861,329,0.61,330,0.861,332,2.195,333,0.914,334,0.914,336,1.296,337,0.861,338,2.07,343,1.334,344,1.801,346,1.839,347,1.606,349,0.812,355,0.861,357,0.861,358,0.683,359,0.812,364,1.372,365,1.296,366,0.914,367,1.334,368,1.873,369,1.453,370,1.633,371,1.417,375,1.54,378,0.812,381,0.861,409,1.187,447,1.037,479,2.235,482,1.606,491,2.917,506,1.716,509,2.077,510,1.037,511,1.845,513,1.037,514,1.953,515,2.643,516,2.534,517,1.417,518,1.037,519,1.037,520,1.037,521,1.966,522,1.037,523,1.037,524,1.037,528,0.861,545,1.037,548,1.037,594,1.54,598,2.072,645,1.839,646,1.606,656,1.966,657,1.507,662,2.248,663,1.876,671,1.507,676,0.861,684,2.733,685,1.982,686,1.187,694,0.914,709,1.108,710,1.108,711,1.108,712,2.077,713,1.966,714,2.214,715,1.108,716,1.037,717,1.037,718,1.108,723,1.507,727,1.108,728,1.108,729,1.108,730,1.108,731,0.766,732,0.683,733,0.972,734,0.972,735,0.972,736,1.108,737,1.037,738,1.108,739,1.108,741,0.914,742,1.108,758,1.108,759,1.279,791,1.716,794,1.716,796,1.108,797,1.108,798,1.716,799,1.108,800,1.108,801,1.108,802,1.108,803,1.108,804,1.108,805,1.037,806,1.716,807,1.108,808,1.716,809,1.108,810,1.108,811,1.108,812,1.037,813,3.331,814,1.037,815,1.108,816,1.108,817,1.108,891,1.84,990,2.521,992,1.84,993,1.982,994,2.148,995,2.148,996,2.148,999,2.629,1000,2.629,1001,2.629,1002,2.629,1003,2.629,1004,2.629,1005,2.56,1006,2.629,1007,2.629,1014,1.982,1016,3.544,1017,3.544,1026,1.716,1033,1.386,1034,2.148,1114,1.891,1119,1.891,1120,4.737,1121,4.206,1122,3.436,1123,3.436,1124,2.218,1125,2.218,1126,2.218,1127,2.218,1128,2.218,1129,2.218,1130,2.218,1131,2.218,1132,2.218,1133,2.218,1134,2.218,1135,1.891,1136,2.218,1137,3.436,1138,2.218]],["title/components/WizardJobComponent.html",[0,0.134,68,0.988]],["body/components/WizardJobComponent.html",[0,0.229,1,0.661,2,1.486,3,0.242,4,0.242,5,0.829,6,0.829,7,0.829,8,0.829,9,0.181,11,0.475,14,1.11,20,0.493,21,0.829,22,2.102,23,1.986,24,1.175,26,1.175,28,0.643,29,1.41,30,0.524,31,0.023,32,0.264,33,0.008,34,0.74,35,1.175,36,1.243,37,1.41,38,1.658,39,0.829,40,0.643,41,0.829,42,0.589,43,0.624,44,0.829,45,0.624,46,0.74,47,0.829,48,0.661,49,0.829,50,0.624,51,0.829,52,0.624,53,1.663,54,1.123,55,0.829,56,0.624,57,0.829,58,0.624,59,0.829,60,0.829,61,0.624,62,0.829,63,1.123,64,0.991,65,0.829,66,0.624,67,0.829,68,1.321,69,0.829,70,0.589,71,0.363,72,0.829,73,0.624,74,0.829,75,0.624,76,0.952,77,0.624,78,0.829,79,0.829,80,0.008,81,0.012,82,0.008,96,1.716,118,0.878,123,1.835,124,0.93,155,1.048,157,2.199,158,1.589,159,1.589,160,2.383,161,1.589,162,1.589,163,0.661,166,1.188,172,1.782,173,0.613,174,0.396,175,0.515,176,0.536,177,1.139,184,0.662,186,0.803,192,0.536,194,0.883,195,0.816,196,0.613,197,1.361,198,0.696,199,1.11,212,1.003,217,0.875,221,0.493,223,0.98,225,0.928,235,0.624,271,1.395,279,1.317,283,1.243,284,1.776,288,2.368,289,2.245,293,1.727,300,2.114,302,2.22,303,1.865,305,2.096,309,1.48,312,2.368,315,1.672,316,2.096,317,1.572,325,1.658,326,1.658,327,1.395,328,1.48,329,1.049,330,1.48,332,2.114,333,1.572,334,1.572,336,1.175,337,1.48,338,1.993,343,1.973,344,2.036,346,1.776,349,1.395,355,1.48,357,1.48,358,1.175,359,1.395,364,1.865,365,1.762,366,1.572,367,1.973,368,2.282,369,1.975,370,2.22,375,1.395,378,1.395,381,1.48,408,1.048,409,1.317,410,1.361,444,1.92,445,1.92,446,1.92,447,2.138,448,1.736,449,1.736,450,1.736,451,2.199,452,1.736,457,1.92,458,1.466,459,1.92,462,1.589,464,1.92,465,1.92,470,2.86,480,4.033,481,1.589,482,1.188,483,3.9,484,1.572,485,3.9,486,1.188,488,1.736,489,1.589,490,1.188,491,1.188,492,1.736,528,1.48,598,1.58,645,2.302,646,2.138,656,2.138,657,1.115,662,2.229,663,1.993,671,1.672,676,1.48,694,1.572,712,2.006,713,1.782,714,2.138,716,1.188,717,1.188,731,1.756,732,1.41,733,1.672,734,1.672,735,1.672,737,1.782,741,2.751,753,1.92,754,3.251,784,3.251,785,2.167,990,2.59,992,2.042,1139,1.92,1140,3.812,1141,3.812,1142,3.812,1143,4.575,1144,3.812,1145,3.812,1146,2.542,1147,2.542,1148,2.542,1149,2.542,1150,2.542,1151,2.542,1152,2.542,1153,2.542,1154,2.542,1155,2.542,1156,2.542,1157,2.542,1158,2.542,1159,2.542,1160,3.456,1161,3.812,1162,2.542,1163,2.542,1164,2.542,1165,1.92,1166,3.812]],["title/components/WizardNewMethodComponent.html",[0,0.134,70,0.881]],["body/components/WizardNewMethodComponent.html",[0,0.231,1,0.531,2,1.178,3,0.195,4,0.195,5,0.666,6,0.666,7,0.666,8,0.666,9,0.146,11,0.414,14,1.975,20,0.396,21,0.666,22,2.024,23,1.912,24,0.993,26,0.993,28,0.617,29,1.23,30,0.421,31,0.023,32,0.212,33,0.006,34,0.595,35,0.993,36,1.051,37,0.993,38,1.478,39,0.666,40,0.555,41,0.666,42,0.473,43,0.502,44,0.666,45,0.502,46,0.595,47,0.666,48,0.531,49,0.666,50,0.502,51,0.666,52,0.502,53,1.619,54,1.21,55,0.666,56,0.502,57,0.666,58,0.502,59,0.666,60,0.666,61,0.502,62,0.666,63,0.502,64,0.838,65,0.666,66,0.502,67,0.666,68,1.721,69,0.666,70,1.05,71,0.687,72,0.666,73,0.502,74,0.666,75,0.502,76,0.822,77,0.502,78,0.666,79,0.666,80,0.006,81,0.01,82,0.006,96,1.647,118,0.706,123,1.807,124,0.748,143,2.034,144,4.963,171,1.051,173,0.518,174,0.334,175,0.363,176,0.453,177,1.001,183,2.845,184,0.691,186,0.844,188,1.18,192,0.858,193,1.413,194,0.925,195,0.844,196,0.518,198,0.9,199,0.938,200,1.179,201,1.277,202,2.026,211,0.531,212,0.842,217,0.913,221,1.205,223,1.003,225,0.827,235,0.791,236,1.18,259,2.118,271,2.482,279,2.343,283,1.051,284,1.549,288,1.759,289,1.645,290,2.495,293,1.857,300,1.549,302,1.759,303,2.026,305,2.412,309,1.251,312,2.129,315,1.413,316,1.868,317,1.329,323,1.021,325,1.478,326,1.478,327,0.748,328,0.793,329,0.562,330,0.793,332,2.129,333,0.842,334,0.842,336,1.23,337,0.793,338,2.007,343,1.251,344,1.751,346,1.759,347,1.506,349,0.748,355,0.793,357,0.793,358,0.63,359,0.748,364,1.302,365,1.23,366,0.842,367,1.251,368,1.81,369,1.378,370,1.549,371,1.868,375,1.805,376,2.427,378,0.748,381,0.793,409,1.113,421,1.277,447,0.955,478,1.277,479,2.261,482,1.506,484,2.412,506,2.263,509,1.987,510,0.955,511,1.75,513,0.955,514,1.868,515,2.563,516,2.449,517,1.329,518,0.955,519,0.955,520,0.955,521,1.865,522,0.955,523,0.955,524,0.955,528,0.793,543,2.845,545,0.955,548,0.955,594,1.461,598,2.02,645,1.759,646,1.506,656,1.865,657,1.413,660,2.832,661,2.463,662,2.162,663,1.805,668,2.015,669,2.495,670,1.865,671,1.413,676,0.793,684,2.614,685,1.859,686,1.113,694,0.842,709,1.021,710,1.021,711,1.021,712,1.987,713,1.865,714,2.118,715,1.021,716,0.955,717,0.955,718,1.021,723,1.413,727,1.021,728,1.021,729,1.021,730,1.021,731,2.302,732,0.63,733,0.896,734,0.896,735,0.896,736,1.021,737,0.955,738,1.021,739,1.021,741,0.842,742,1.021,743,1.277,758,1.021,759,1.179,791,1.61,792,2.201,794,1.61,796,1.021,797,1.021,798,1.61,799,1.021,800,1.021,801,1.021,802,1.021,803,1.021,804,1.021,805,0.955,806,1.61,807,1.021,808,1.61,809,1.021,810,1.021,811,1.021,812,0.955,813,3.281,814,0.955,815,1.021,816,1.021,817,1.021,891,1.726,902,1.277,990,2.55,992,1.726,993,1.859,994,2.015,995,2.015,996,2.015,999,2.495,1000,2.495,1001,2.495,1002,2.495,1003,2.495,1004,2.495,1005,2.463,1006,2.495,1007,2.495,1008,3.015,1014,1.859,1016,3.546,1017,3.488,1020,2.435,1026,1.61,1031,1.395,1033,1.277,1034,2.015,1036,2.435,1040,2.435,1167,1.544,1168,2.748,1169,3.403,1170,2.748,1171,3.223,1172,2.043,1173,2.043,1174,2.043,1175,2.043,1176,2.043,1177,2.043,1178,2.043,1179,2.043,1180,2.043,1181,2.043,1182,2.043,1183,2.043,1184,2.043,1185,2.043,1186,2.043,1187,1.742,1188,2.043,1189,3.223,1190,4.531,1191,2.043,1192,2.043]],["title/components/WizardParentComponent.html",[0,0.134,73,0.934]],["body/components/WizardParentComponent.html",[0,0.218,1,0.765,2,1.104,3,0.28,4,0.28,5,0.96,6,0.96,7,0.96,8,0.96,9,0.21,11,0.305,14,1.96,20,0.571,21,0.96,22,2.148,23,2.03,24,1.308,26,1.308,28,0.651,29,1.535,30,0.606,31,0.023,32,0.305,33,0.009,34,0.857,35,1.308,36,1.385,37,1.535,38,1.779,39,0.96,40,0.678,41,0.96,42,0.682,43,0.722,44,0.96,45,0.722,46,0.857,47,0.96,48,0.765,49,0.96,50,0.722,51,0.96,52,0.722,53,1.63,54,1.223,55,0.96,56,0.722,57,0.96,58,0.722,59,0.96,60,0.96,61,0.722,62,0.96,63,0.722,64,1.104,65,0.96,66,0.722,67,0.96,68,0.765,69,0.96,70,0.682,71,0.28,72,0.96,73,1.339,74,0.96,75,0.722,76,0.812,77,0.722,78,0.96,79,0.96,80,0.009,81,0.013,82,0.009,88,3.208,98,2.9,110,1.839,123,1.782,124,2.371,172,1.985,173,0.877,174,0.441,175,0.331,176,0.596,184,0.703,186,0.773,192,0.413,195,0.789,196,0.877,212,0.801,217,0.93,221,0.571,223,0.991,225,0.996,271,1.996,279,2.325,283,1.385,284,1.934,293,1.809,302,2.34,303,1.966,325,1.779,326,1.779,327,1.554,328,1.648,329,1.168,330,2.118,331,4.121,336,1.308,347,2.55,371,2.385,375,1.996,409,1.016,413,2.223,415,2.01,430,1.839,460,2.223,461,3.726,462,1.839,466,2.223,479,1.751,528,1.142,533,2.223,542,2.223,594,1.077,598,1.721,662,2.536,663,2.117,671,3.175,676,1.648,705,3.62,812,1.375,814,1.375,829,2.223,873,3.208,990,2.515,1005,2.889,1014,2.45,1026,2.121,1048,3.147,1193,2.509,1194,4.246,1195,5.837,1196,4.246,1197,4.982,1198,4.246,1199,4.246,1200,4.982,1201,4.246,1202,4.246,1203,4.246,1204,2.942,1205,4.246,1206,5.455,1207,4.246,1208,6.893,1209,2.942,1210,4.246,1211,2.942,1212,4.246,1213,2.942,1214,4.246,1215,4.246,1216,4.246,1217,4.246,1218,2.942,1219,4.246,1220,4.246,1221,4.246,1222,2.942,1223,2.942,1224,4.246,1225,3.62,1226,2.942,1227,2.942,1228,2.942,1229,2.942,1230,2.942,1231,4.246,1232,2.942,1233,2.942,1234,4.246,1235,2.942,1236,4.246,1237,2.942,1238,2.942,1239,2.942,1240,2.942,1241,2.942,1242,2.942,1243,2.942,1244,4.246,1245,2.942,1246,4.246,1247,4.246,1248,2.942,1249,2.01,1250,2.942,1251,2.942,1252,4.246,1253,4.246,1254,4.246,1255,2.942,1256,2.942,1257,2.942]],["title/injectables/WizardParentStepperService.html",[663,1.392,837,1.777]],["body/injectables/WizardParentStepperService.html",[3,0.415,4,0.415,9,0.31,11,0.452,12,2.72,14,1.613,28,0.623,30,0.897,31,0.023,32,0.452,33,0.013,71,0.612,80,0.013,81,0.017,82,0.013,123,1.917,124,2.551,174,0.575,175,0.49,176,0.778,184,0.805,186,0.837,192,0.901,195,0.725,217,0.89,221,1.075,223,0.95,279,1.914,293,1.267,329,1.766,368,2.43,369,1.914,375,2.48,395,3.784,408,1.794,598,2.407,663,2.028,671,2.971,676,2.63,745,5.999,837,2.59,838,2.72,898,2.972,990,2.706,1048,3.702,1195,4.724,1258,3.288,1259,4.724,1260,5.541,1261,5.541,1262,4.724,1263,6.096,1264,6.096,1265,6.096,1266,6.096,1267,6.418,1268,6.418,1269,5.541,1270,4.351,1271,6.418,1272,3.71,1273,4.351,1274,4.351,1275,4.351,1276,4.351,1277,4.351]],["title/injectables/WizardStepperService.html",[96,1.046,837,1.777]],["body/injectables/WizardStepperService.html",[3,0.238,4,0.238,9,0.178,11,0.259,12,1.56,28,0.567,30,0.514,31,0.023,32,0.259,33,0.007,40,0.663,71,0.578,76,1.008,80,0.008,81,0.011,82,0.008,96,1.034,123,1.944,155,2.875,163,1.577,173,0.947,174,0.39,175,0.663,176,0.528,177,1.282,184,0.657,186,0.856,192,0.828,195,0.812,196,0.868,198,1.133,212,1.093,216,2.963,217,1.132,220,3.159,221,1.049,223,1.01,225,1.133,239,2.272,288,2.603,292,4.69,329,1.034,344,1.949,345,2.209,364,2.255,365,2.082,369,1.299,378,2.315,408,1.029,410,1.337,447,2.526,451,2.169,458,1.44,586,3.858,594,0.913,645,2.641,723,2.49,783,1.649,837,1.758,838,1.56,853,4.294,857,3.206,870,4.842,873,4.583,886,3.206,891,3.388,892,3.44,894,4.69,898,1.704,926,3.206,927,5.323,990,2.743,1160,2.841,1249,1.704,1258,1.885,1262,3.206,1272,2.128,1278,3.76,1279,3.206,1280,6.584,1281,5.894,1282,6.207,1283,5.037,1284,5.037,1285,5.037,1286,4.294,1287,5.037,1288,5.037,1289,5.037,1290,5.037,1291,5.037,1292,5.037,1293,3.76,1294,3.76,1295,3.76,1296,3.76,1297,3.76,1298,2.495,1299,3.76,1300,2.495,1301,2.495,1302,2.495,1303,2.495,1304,2.495,1305,2.495,1306,2.495,1307,2.495,1308,3.76,1309,2.495,1310,2.495,1311,3.76,1312,3.76,1313,2.495,1314,3.76,1315,2.495,1316,3.76,1317,2.495,1318,2.495,1319,3.76,1320,2.495,1321,2.495,1322,2.495,1323,3.76,1324,2.495,1325,3.76,1326,2.495,1327,5.037,1328,2.495,1329,2.495,1330,2.495,1331,2.128,1332,2.495,1333,2.495,1334,2.495,1335,3.76,1336,2.495,1337,2.495,1338,3.76,1339,2.495,1340,2.495,1341,3.76,1342,2.495,1343,2.495,1344,2.495]],["title/classes/Workflow.html",[33,0.011,76,0.534]],["body/classes/Workflow.html",[3,0.23,4,0.23,9,0.172,11,0.638,28,0.675,31,0.023,32,0.25,33,0.016,40,0.796,54,1.088,64,0.953,71,0.422,76,1.02,80,0.007,81,0.011,82,0.007,146,1.607,150,1.508,155,2.862,163,1.679,166,1.713,167,0.787,172,1.713,173,0.988,174,0.623,175,0.656,176,0.695,177,1.179,180,2.75,181,2.633,182,1.831,184,0.539,186,0.827,189,1.839,192,0.515,194,1.147,195,0.855,196,0.988,198,1.262,211,1.287,212,1.138,216,2.897,217,1.106,220,2.8,221,1.193,222,2.374,223,0.961,224,1.205,225,1.144,235,0.592,239,2.133,240,3.027,256,3.027,275,3.381,344,2.014,345,2.171,349,1.949,354,2.769,365,1.129,481,2.291,483,4.255,484,2.195,485,4.199,486,1.713,489,2.291,490,1.128,491,1.713,600,3.125,604,2.057,606,2.057,612,2.057,614,2.057,616,3.779,618,3.779,619,2.057,621,2.057,632,3.125,674,2.659,680,2.503,712,1.607,731,1.266,864,3.125,892,4.552,932,2.769,1030,2.057,1092,2.057,1115,2.057,1135,2.057,1165,2.769,1187,2.057,1286,4.221,1345,2.057,1346,1.963,1347,3.125,1348,3.125,1349,3.125,1350,2.291,1351,4.968,1352,6.97,1353,3.125,1354,3.125,1355,3.665,1356,3.665,1357,4.951,1358,3.665,1359,4.432,1360,3.665,1361,2.412,1362,4.022,1363,3.665,1364,2.412,1365,2.412,1366,3.665,1367,2.412,1368,4.951,1369,4.951,1370,4.951,1371,3.665,1372,3.125,1373,3.665,1374,4.951,1375,3.665,1376,2.412,1377,3.665,1378,3.665,1379,3.665,1380,2.412,1381,4.951,1382,6.27,1383,6.003,1384,3.665,1385,2.412,1386,3.665,1387,2.412,1388,3.665,1389,4.951,1390,2.412,1391,4.951,1392,3.665,1393,2.412,1394,2.412,1395,2.412,1396,2.412,1397,2.412,1398,2.412,1399,2.412,1400,2.412,1401,2.412,1402,2.412,1403,2.412,1404,2.412,1405,4.432,1406,2.412,1407,3.665,1408,2.412,1409,6.718,1410,2.412,1411,2.412,1412,2.412,1413,3.665,1414,3.665,1415,2.412,1416,2.412,1417,2.412,1418,2.412,1419,2.412,1420,2.412,1421,2.412,1422,2.412,1423,3.665,1424,2.412,1425,2.412,1426,3.665,1427,2.412,1428,2.412,1429,2.412,1430,2.412]],["title/classes/WorkflowListElement.html",[33,0.011,889,2.377]],["body/classes/WorkflowListElement.html",[0,0.171,3,0.465,4,0.465,9,0.348,11,0.507,31,0.022,32,0.507,33,0.019,40,0.67,76,0.836,77,1.461,80,0.015,81,0.018,82,0.015,167,1.592,172,2.282,174,0.507,175,0.549,176,0.902,180,2.816,181,2.816,184,0.833,186,0.813,189,2.056,192,0.836,195,0.84,198,1.086,212,1.075,345,3.006,395,4.386,674,2.973,889,4.014,893,4.162,966,4.162,970,6.119,1347,4.162,1348,4.162,1349,4.162,1351,5.475,1362,4.497,1431,5.844,1432,4.162,1433,4.882,1434,4.882,1435,7.058,1436,5.952,1437,6.972,1438,4.882,1439,4.882]],["title/components/WorkflowTableComponent.html",[0,0.134,75,0.934]],["body/components/WorkflowTableComponent.html",[0,0.229,1,0.614,2,0.937,3,0.225,4,0.225,5,0.77,6,0.77,7,0.77,8,0.77,9,0.168,11,0.547,20,0.849,21,0.77,22,2.077,23,1.962,24,1.111,26,1.111,28,0.651,29,1.348,30,0.486,31,0.023,32,0.245,33,0.007,34,0.687,35,1.111,36,1.176,37,0.727,38,1.597,39,0.77,40,0.732,41,0.77,42,0.547,43,1.074,44,0.77,45,0.579,46,1.273,47,0.77,48,0.614,49,0.77,50,0.579,51,0.77,52,0.579,53,1.508,54,1.074,55,0.77,56,0.579,57,0.77,58,0.579,59,0.77,60,0.77,61,0.579,62,0.77,63,0.579,64,0.937,65,0.77,66,0.579,67,0.77,68,0.614,69,0.77,70,0.547,71,0.417,72,0.77,73,0.579,74,0.77,75,1.202,76,1.02,77,1.53,78,0.77,79,0.77,80,0.007,81,0.011,82,0.007,96,1.681,118,0.815,123,0.649,141,4.969,146,1.581,150,2.254,155,1.486,158,1.476,159,1.476,160,2.254,161,1.476,162,1.476,163,0.614,164,2.462,166,1.103,173,0.847,174,0.374,175,0.266,176,0.506,177,0.798,184,0.641,186,0.791,189,2.343,192,0.688,194,0.835,195,0.816,196,0.847,197,3.194,198,1.173,199,1.618,211,1.62,212,1.033,217,0.893,221,0.849,223,1.069,225,1.055,228,2.08,271,1.792,283,1.176,293,1.683,303,1.813,309,1.4,312,2.315,315,1.581,316,1.486,317,1.486,323,2.445,325,1.176,326,1.176,332,1.4,336,1.111,337,1.4,338,1.32,343,2.047,344,1.625,345,2.68,346,2.158,349,2.32,355,1.4,357,1.4,358,1.111,359,1.32,364,1.597,365,1.713,367,1.4,368,1.245,381,1.4,387,2.462,408,0.973,409,0.815,410,1.264,451,2.08,458,2.08,469,1.783,470,2.254,477,2.462,480,3.82,481,1.476,483,3.615,485,3.727,486,1.103,488,1.612,489,1.476,490,1.103,491,1.103,492,1.612,511,1.035,514,0.973,517,2.018,528,1.4,645,2.047,657,1.035,660,3.06,661,2.634,676,1.4,689,2.013,694,2.018,731,1.245,732,1.348,733,1.581,734,1.581,735,1.581,743,1.476,753,1.783,774,2.013,783,1.035,795,3.074,842,3.074,845,3.074,846,4.174,847,2.013,862,3.074,867,3.074,869,4.505,889,3.06,896,2.013,897,2.013,904,3.074,912,4.174,993,2.08,1031,1.612,1160,3.304,1165,1.783,1279,3.074,1362,2.724,1372,3.074,1440,5.608,1441,2.013,1442,3.605,1443,3.074,1444,3.605,1445,3.605,1446,3.605,1447,4.374,1448,3.605,1449,4.374,1450,4.374,1451,4.895,1452,3.605,1453,3.605,1454,3.605,1455,3.605,1456,3.605,1457,2.361,1458,2.361,1459,3.605,1460,2.361,1461,3.605,1462,5.559,1463,3.605,1464,2.361,1465,3.605,1466,2.361,1467,2.361,1468,3.699,1469,4.174,1470,3.605,1471,2.361,1472,3.605,1473,2.361,1474,2.361,1475,2.361,1476,2.361,1477,3.605,1478,2.361,1479,2.361,1480,2.361,1481,4.374,1482,4.374,1483,2.361,1484,3.605,1485,3.605,1486,3.605,1487,3.605,1488,3.605,1489,3.605,1490,3.605,1491,3.605,1492,3.605,1493,4.374,1494,3.605,1495,2.361,1496,2.361,1497,2.361,1498,3.605,1499,3.605,1500,3.605,1501,3.605,1502,3.605]],["title/coverage.html",[1503,4.327]],["body/coverage.html",[0,0.253,1,1.075,9,0.295,10,3.526,20,1.041,31,0.022,33,0.021,42,0.958,45,1.015,48,1.075,50,1.015,52,1.015,54,1.641,56,1.015,58,1.015,61,1.015,63,1.015,64,1.637,66,1.015,68,1.075,70,0.958,71,0.567,73,1.015,75,1.015,76,0.581,77,1.015,80,0.012,81,0.016,82,0.012,96,1.138,119,3.352,121,3.125,123,1.948,124,1.963,126,3.125,128,3.125,130,3.125,132,3.125,134,3.125,136,3.125,139,3.125,141,3.125,144,3.125,163,1.075,166,1.933,168,4.065,169,3.526,195,0.541,240,2.825,241,3.526,256,2.825,257,3.526,268,4.052,269,3.663,311,2.386,345,1.814,382,2.825,406,2.585,484,1.705,486,1.933,490,1.933,491,1.933,514,3.041,596,3.526,598,1.429,622,3.526,623,3.526,628,3.526,629,3.526,661,2.066,663,1.514,664,2.825,741,1.705,821,4.052,822,3.526,825,3.526,828,3.526,837,2.943,839,3.526,840,3.526,889,2.585,919,3.526,943,3.526,949,3.526,950,3.125,957,3.526,958,3.526,965,3.526,990,2.749,991,3.526,1041,3.526,1059,3.526,1072,3.526,1098,3.526,1119,3.526,1139,3.125,1167,3.125,1193,3.526,1258,4.052,1345,3.526,1431,3.526,1432,3.526,1440,3.526,1441,3.526,1503,3.526,1504,3.125,1505,4.136,1506,4.136,1507,4.136,1508,6.524,1509,4.136,1510,4.136,1511,5.363,1512,4.136,1513,4.136,1514,6.524,1515,4.136,1516,6.685,1517,4.136,1518,5.951,1519,5.363,1520,5.363,1521,5.363,1522,5.363,1523,4.136,1524,4.136,1525,4.136,1526,4.136]],["title/dependencies.html",[86,2.839,1527,3.234]],["body/dependencies.html",[30,1.092,31,0.023,80,0.016,81,0.019,82,0.016,86,3.313,103,5.331,104,4.724,110,3.313,115,4.518,118,1.83,408,2.185,415,3.619,665,4.518,695,4.004,747,4.518,749,5.331,981,4.518,982,4.518,983,4.518,1528,5.299,1529,7.228,1530,5.299,1531,6.253,1532,5.299,1533,5.299,1534,5.299,1535,5.299,1536,5.299,1537,5.299,1538,5.299,1539,5.299,1540,5.299,1541,5.299,1542,5.299,1543,5.299,1544,5.299,1545,5.299,1546,5.299]],["title/index.html",[175,0.364,668,2.022,1547,3.234]],["body/index.html",[0,0.251,2,1.481,11,0.472,14,1.659,19,4.304,31,0.019,43,1.116,46,1.659,53,1.556,54,1.398,64,1.481,71,0.433,76,0.874,77,1.398,80,0.014,81,0.017,82,0.014,155,2.349,164,3.891,174,0.472,194,1.054,200,3.286,275,3.106,277,3.435,278,3.435,293,2.079,327,1.664,347,2.663,359,1.664,482,2.663,517,1.875,598,2.367,636,4.857,670,3.048,672,3.435,680,3.891,686,2.149,829,3.435,831,3.877,869,3.435,932,3.435,951,3.877,977,3.435,992,3.332,1048,2.623,1099,4.857,1225,3.877,1350,2.842,1504,5.311,1548,5.697,1549,5.697,1550,4.547,1551,4.547,1552,4.547,1553,4.547,1554,4.547,1555,4.547,1556,4.547,1557,4.547,1558,5.697,1559,6.221,1560,4.547,1561,4.547,1562,4.547,1563,4.547,1564,4.547,1565,4.547,1566,4.547,1567,4.547,1568,4.547,1569,4.547,1570,4.547,1571,6.221,1572,4.547,1573,4.547,1574,4.547,1575,4.547,1576,4.547,1577,4.547,1578,5.697,1579,5.697,1580,4.547,1581,4.547,1582,3.877,1583,4.547,1584,4.547,1585,5.697,1586,4.547,1587,4.547,1588,4.547,1589,4.857,1590,4.547,1591,4.547,1592,4.547,1593,4.547,1594,5.697,1595,4.547,1596,4.547,1597,4.547,1598,4.547,1599,4.547,1600,4.547,1601,4.547,1602,4.547,1603,4.547,1604,5.697,1605,4.547,1606,4.547,1607,4.547,1608,5.697,1609,4.547,1610,4.547,1611,4.547,1612,4.547,1613,4.547]],["title/modules.html",[85,3.172]],["body/modules.html",[31,0.02,43,1.405,80,0.017,81,0.02,82,0.017,84,3.91,85,3.579,95,3.579,104,4.326,1614,5.725,1615,5.725,1616,6.54,1617,5.725]],["title/overview.html",[1468,3.834]],["body/overview.html",[1,1.829,2,1.251,13,3.638,31,0.022,34,1.402,42,1.479,45,1.567,48,1.659,50,1.567,52,1.567,56,1.567,58,1.567,61,1.567,63,1.567,66,1.567,68,1.659,70,1.479,73,1.567,75,1.567,80,0.015,81,0.018,82,0.015,83,3.01,84,5.127,85,3.01,86,3.01,87,3.638,88,3.638,89,3.638,90,4.105,91,4.105,92,4.105,93,4.105,94,4.105,95,3.99,96,1.756,97,5.032,98,3.288,99,4.105,117,2.778,167,1.57,838,3.01,1249,3.288,1468,3.638,1618,4.815,1619,4.105,1620,5.902]],["title/routes.html",[117,2.928]],["body/routes.html",[31,0.02,80,0.018,81,0.02,82,0.018,117,3.348]],["title/additional-documentation/introduction.html",[20,0.628,686,1.117,1621,2.757]],["body/additional-documentation/introduction.html",[0,0.214,31,0.018,33,0.015,40,0.572,71,0.671,76,0.714,80,0.015,81,0.018,82,0.015,86,3.812,117,2.932,143,2.732,146,2.866,167,1.657,174,0.633,176,0.714,206,2.375,293,1.48,329,1.398,358,1.566,484,2.095,669,3.177,670,3.24,674,2.538,732,1.566,783,2.229,805,2.851,977,3.84,1048,3.77,1168,5.2,1259,5.2,1346,3.5,1443,4.333,1469,4.333,1504,3.84,1582,4.333,1589,5.909,1621,4.333,1622,5.082,1623,6.099,1624,6.535,1625,5.082,1626,5.082,1627,5.082,1628,5.082,1629,5.082,1630,5.082,1631,5.082,1632,6.099,1633,5.082,1634,5.082,1635,5.082,1636,6.535,1637,5.082,1638,5.082,1639,5.082,1640,5.082,1641,5.082,1642,5.082,1643,5.082,1644,5.082,1645,5.082,1646,5.082]],["title/additional-documentation/steps-adding-new-method.html",[20,0.433,71,0.213,143,0.867,686,0.771,1350,1.396,1647,1.904]],["body/additional-documentation/steps-adding-new-method.html",[0,0.198,14,1.638,31,0.02,71,0.65,76,0.79,80,0.017,81,0.02,82,0.017,117,3.245,143,2.184,146,2.839,174,0.584,338,2.059,358,1.733,670,2.629,674,2.81,732,1.733,783,2.467,1346,3.467,1350,3.516,1647,4.796,1648,5.625]],["title/additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html",[20,0.433,71,0.213,594,0.817,674,1.115,686,0.771,1346,1.196]],["body/additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html",[9,0.401,31,0.02,71,0.65,80,0.017,81,0.02,82,0.017,143,2.187,170,2.633,484,2.322,670,2.633,674,2.814,731,1.946,732,1.736,950,4.256,1346,3.653,1649,3.521,1650,3.521,1651,4.803,1652,4.803,1653,4.803,1654,4.803]],["title/additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html",[20,0.433,76,0.314,146,0.979,686,0.771,1249,1.525,1346,1.196]],["body/additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html",[28,0.638,31,0.02,76,0.796,80,0.017,81,0.02,82,0.017,146,2.998,484,2.893,783,2.485,1346,3.482,1353,4.831,1354,4.831,1649,3.542,1650,3.542,1655,5.666]],["title/additional-documentation/steps-adding-new-method/3.-create-new-component.html",[0,0.078,20,0.433,71,0.213,686,0.771,732,0.688,1331,1.904]],["body/additional-documentation/steps-adding-new-method/3.-create-new-component.html",[0,0.248,9,0.479,31,0.019,35,1.674,53,1.605,71,0.687,80,0.016,81,0.019,82,0.016,143,2.463,508,4.633,670,2.966,671,2.383,674,2.714,731,2.322,732,1.674,1167,4.105,1169,4.633,1170,4.633,1649,3.397,1650,3.397,1651,5.731,1652,4.633,1653,5.731,1654,5.731]],["title/additional-documentation/steps-adding-new-method/4.-add-route.html",[20,0.483,146,1.092,686,0.86,1619,2.123,1656,2.123]],["body/additional-documentation/steps-adding-new-method/4.-add-route.html",[0,0.198,23,1.645,31,0.02,70,1.309,71,0.618,80,0.017,81,0.02,82,0.017,83,4.057,146,2.478,147,4.817,157,3.259,293,1.645,358,2.104,783,2.478,1350,3.532,1649,3.532,1650,3.532,1656,4.817]],["title/additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html",[20,0.433,174,0.232,358,0.688,686,0.771,783,0.979,1657,2.233]],["body/additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html",[0,0.225,2,1.437,31,0.019,43,1.573,53,1.485,80,0.017,81,0.019,82,0.017,119,4.006,146,2.811,155,2.279,157,3.697,174,0.574,269,4.377,309,2.628,344,1.703,741,2.279,783,2.424,1139,4.842,1649,4.006,1650,4.006,1658,5.528,1659,6.409,1660,5.528,1661,5.528]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["0",{"_index":235,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"classes/Workflow.html":{}}}],["0.12",{"_index":579,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["0.14",{"_index":576,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["0.2",{"_index":574,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["0.7em",{"_index":565,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["0.8em",{"_index":564,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["0.9.1",{"_index":1546,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":594,"title":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{}},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/Move.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardStepperService.html":{}}}],["1.8em",{"_index":549,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["1.9.0",{"_index":1544,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1507,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":767,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["100",{"_index":514,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["100px",{"_index":815,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["10px",{"_index":516,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["13",{"_index":1620,"title":{},"body":{"overview.html":{}}}],["13/13",{"_index":1517,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":1522,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":577,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["15",{"_index":1618,"title":{},"body":{"overview.html":{}}}],["16/16",{"_index":1510,"title":{},"body":{"coverage.html":{}}}],["18em",{"_index":535,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["1em",{"_index":557,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["1px",{"_index":537,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["1rem",{"_index":524,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["1st",{"_index":343,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["2",{"_index":1249,"title":{"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}},"body":{"components/WizardParentComponent.html":{},"injectables/WizardStepperService.html":{},"overview.html":{}}}],["2.0.8",{"_index":1538,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1513,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":581,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["21/23",{"_index":1520,"title":{},"body":{"coverage.html":{}}}],["25/26",{"_index":1525,"title":{},"body":{"coverage.html":{}}}],["250ms",{"_index":591,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["26/26",{"_index":1521,"title":{},"body":{"coverage.html":{}}}],["28/28",{"_index":1512,"title":{},"body":{"coverage.html":{}}}],["28/29",{"_index":1518,"title":{},"body":{"coverage.html":{}}}],["29/30",{"_index":1509,"title":{},"body":{"coverage.html":{}}}],["2em",{"_index":531,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["2px",{"_index":578,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["3",{"_index":1331,"title":{"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}},"body":{"injectables/WizardStepperService.html":{}}}],["3.0.1",{"_index":1539,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1511,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":512,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["30px",{"_index":811,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["3em",{"_index":547,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["3px",{"_index":559,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["4",{"_index":1619,"title":{"additional-documentation/steps-adding-new-method/4.-add-route.html":{}},"body":{"overview.html":{}}}],["4/4",{"_index":1515,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":819,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["4px",{"_index":551,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["5",{"_index":1657,"title":{"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}},"body":{}}],["5/5",{"_index":1514,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":236,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["500",{"_index":1496,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["5000",{"_index":779,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["5em",{"_index":546,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["5px",{"_index":534,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["6.4.0",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1516,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":796,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["607d8b",{"_index":555,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["60px",{"_index":810,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["8.0.0",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["8.1.3",{"_index":1529,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":1531,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1523,"title":{},"body":{"coverage.html":{}}}],["8em",{"_index":568,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["8px",{"_index":575,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["9/9",{"_index":1524,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":1519,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":1508,"title":{},"body":{"coverage.html":{}}}],["9999px",{"_index":583,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["_activationtimeout",{"_index":179,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["_created_at",{"_index":1351,"title":{},"body":{"classes/Workflow.html":{},"classes/WorkflowListElement.html":{}}}],["_goalpose",{"_index":178,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{}}}],["_id",{"_index":180,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{}}}],["_jobobjects",{"_index":1389,"title":{},"body":{"classes/Workflow.html":{}}}],["_jobsobjects",{"_index":1352,"title":{},"body":{"classes/Workflow.html":{}}}],["_jointvales",{"_index":248,"title":{},"body":{"classes/ArmJoint.html":{}}}],["_jointvalues",{"_index":245,"title":{},"body":{"classes/ArmJoint.html":{}}}],["_name",{"_index":181,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{}}}],["_response",{"_index":920,"title":{},"body":{"injectables/JobsService.html":{}}}],["_responselistener",{"_index":921,"title":{},"body":{"injectables/JobsService.html":{}}}],["_timeout",{"_index":258,"title":{},"body":{"classes/ArmTrajectory.html":{}}}],["abstract",{"_index":597,"title":{},"body":{"classes/Base.html":{}}}],["accessors",{"_index":182,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"injectables/JobsService.html":{},"classes/NewMethod.html":{},"classes/Workflow.html":{}}}],["according",{"_index":204,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["accordingly",{"_index":677,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["action",{"_index":1470,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["activates",{"_index":690,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["activation",{"_index":791,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["activationtimeout",{"_index":208,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["activationtimeout(value",{"_index":620,"title":{},"body":{"classes/Base.html":{}}}],["activationtimout",{"_index":190,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{}}}],["actual",{"_index":669,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"additional-documentation/introduction.html":{}}}],["actual_component",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["adapted",{"_index":1637,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["add",{"_index":146,"title":{"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["added",{"_index":1168,"title":{},"body":{"components/WizardNewMethodComponent.html":{},"additional-documentation/introduction.html":{}}}],["adding",{"_index":1350,"title":{"additional-documentation/steps-adding-new-method.html":{}},"body":{"classes/Workflow.html":{},"index.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["additional",{"_index":686,"title":{"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"index.html":{}}}],["addjobs",{"_index":1353,"title":{},"body":{"classes/Workflow.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}}}],["addjobs(jobsname",{"_index":1366,"title":{},"body":{"classes/Workflow.html":{}}}],["addjobsformworkflow",{"_index":1354,"title":{},"body":{"classes/Workflow.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}}}],["addjobsformworkflow(job",{"_index":1375,"title":{},"body":{"classes/Workflow.html":{}}}],["addnew",{"_index":1451,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["adds",{"_index":1368,"title":{},"body":{"classes/Workflow.html":{}}}],["adjust",{"_index":1651,"title":{},"body":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["adjusted",{"_index":242,"title":{},"body":{"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/NewMethod.html":{}}}],["affected",{"_index":1588,"title":{},"body":{"index.html":{}}}],["alert('no",{"_index":471,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["align",{"_index":521,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["already",{"_index":702,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["alredy",{"_index":1378,"title":{},"body":{"classes/Workflow.html":{}}}],["always",{"_index":1642,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["angular",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"index.html":{},"additional-documentation/steps-adding-new-method.html":{}}}],["angular/animations",{"_index":1528,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1530,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":405,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/cdk/stepper",{"_index":1230,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["angular/common",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{}}}],["angular/compiler",{"_index":747,"title":{},"body":{"components/ExecutionRunComponent.html":{},"dependencies.html":{}}}],["angular/core",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardParentComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":415,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardParentComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":118,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":585,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["animating",{"_index":588,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["api",{"_index":205,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["app.component.css",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":1559,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1574,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":84,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":95,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arm",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["arm_cartesian",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["arm_joints",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["arm_trajectory",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["armcartesian",{"_index":166,"title":{"classes/ArmCartesian.html":{}},"body":{"classes/ArmCartesian.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardJobComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["armcartesian(job",{"_index":1424,"title":{},"body":{"classes/Workflow.html":{}}}],["armcartesian(jobsname",{"_index":1416,"title":{},"body":{"classes/Workflow.html":{}}}],["armjoint",{"_index":240,"title":{"classes/ArmJoint.html":{}},"body":{"classes/ArmJoint.html":{},"classes/Workflow.html":{},"coverage.html":{}}}],["armtrajectory",{"_index":256,"title":{"classes/ArmTrajectory.html":{}},"body":{"classes/ArmTrajectory.html":{},"classes/Workflow.html":{},"coverage.html":{}}}],["array",{"_index":892,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{}}}],["ask",{"_index":693,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["ausgeführt",{"_index":462,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WizardParentComponent.html":{}}}],["ausgefürht",{"_index":1246,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["ausgführt",{"_index":1240,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["auto",{"_index":817,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["available",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"index.html":{},"modules.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["availablejobscomponent",{"_index":42,"title":{"components/AvailableJobsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["availablejobscomponent's",{"_index":507,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["back",{"_index":676,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"components/WorkflowTableComponent.html":{}}}],["backcreateonclick",{"_index":647,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["backend",{"_index":211,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["background",{"_index":525,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["backrunonclick",{"_index":648,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["backupdateonclick",{"_index":649,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["badge",{"_index":560,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["base",{"_index":163,"title":{"classes/Base.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/WizardBaseComponent.html":{},"components/WizardJobComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["base'},{'name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["base.component",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["base.component.css",{"_index":1074,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.html",{"_index":1075,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts",{"_index":1072,"title":{},"body":{"components/WizardBaseComponent.html":{},"coverage.html":{}}}],["base.component.ts:115",{"_index":1078,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:24",{"_index":1088,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:28",{"_index":1080,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:32",{"_index":1081,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:36",{"_index":1083,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:40",{"_index":1084,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:44",{"_index":1085,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:48",{"_index":1086,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:52",{"_index":1087,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:56",{"_index":1089,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:60",{"_index":1090,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:64",{"_index":1082,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:68",{"_index":1076,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:87",{"_index":1077,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:97",{"_index":1079,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.model",{"_index":224,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"classes/Workflow.html":{}}}],["base/wizard",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WizardBaseComponent.html":{},"coverage.html":{}}}],["base:10",{"_index":209,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["base:14",{"_index":213,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["base:18",{"_index":203,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["based",{"_index":1549,"title":{},"body":{"index.html":{}}}],["basemove",{"_index":490,"title":{"classes/BaseMove.html":{}},"body":{"components/AvailableJobsComponent.html":{},"classes/BaseMove.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardBaseComponent.html":{},"components/WizardJobComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["basemove(job",{"_index":1423,"title":{},"body":{"classes/Workflow.html":{}}}],["basemove(jobsname",{"_index":1414,"title":{},"body":{"classes/Workflow.html":{}}}],["basic",{"_index":1140,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["basically",{"_index":1575,"title":{},"body":{"index.html":{}}}],["bbd8dc",{"_index":553,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["before",{"_index":714,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["belonging",{"_index":878,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["best",{"_index":1626,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["beta.27",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":933,"title":{},"body":{"injectables/JobsService.html":{}}}],["bezier(0",{"_index":593,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["block",{"_index":519,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["boolean",{"_index":424,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["bootstrap",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":536,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["border_color",{"_index":1501,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["both",{"_index":930,"title":{},"body":{"injectables/JobsService.html":{}}}],["bottom:10px",{"_index":804,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["box",{"_index":570,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["break",{"_index":485,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["browse",{"_index":1616,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":376,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["buttons",{"_index":735,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["call_end",{"_index":1253,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["called",{"_index":327,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"index.html":{}}}],["calls",{"_index":188,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["cartesian",{"_index":200,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"index.html":{}}}],["cartesian'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["cartesian.component",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cartesian.component.css",{"_index":997,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.html",{"_index":998,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts",{"_index":991,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"coverage.html":{}}}],["cartesian.component.ts:115",{"_index":1011,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:24",{"_index":1025,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:28",{"_index":1013,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:32",{"_index":1015,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:36",{"_index":1019,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:40",{"_index":1021,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:44",{"_index":1022,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:48",{"_index":1023,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:52",{"_index":1024,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:56",{"_index":1027,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:60",{"_index":1028,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:64",{"_index":1018,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:68",{"_index":1009,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:87",{"_index":1010,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:97",{"_index":1012,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.model",{"_index":1030,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"classes/Workflow.html":{}}}],["cartesian.model.ts",{"_index":169,"title":{},"body":{"classes/ArmCartesian.html":{},"coverage.html":{}}}],["cartesian.model.ts:11",{"_index":187,"title":{},"body":{"classes/ArmCartesian.html":{}}}],["cartesian.model.ts:31",{"_index":219,"title":{},"body":{"classes/ArmCartesian.html":{}}}],["cartesian.model.ts:38",{"_index":215,"title":{},"body":{"classes/ArmCartesian.html":{}}}],["cartesian/wizard",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WizardArmCartesianComponent.html":{},"coverage.html":{}}}],["case",{"_index":483,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["cdk",{"_index":280,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["cdkdragdrop",{"_index":319,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["center",{"_index":808,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["cfd8dc",{"_index":527,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["change",{"_index":977,"title":{},"body":{"classes/SocketDataService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["changed",{"_index":952,"title":{},"body":{"classes/NewMethod.html":{}}}],["changes",{"_index":1259,"title":{},"body":{"injectables/WizardParentStepperService.html":{},"additional-documentation/introduction.html":{}}}],["checks",{"_index":1212,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["child",{"_index":992,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"index.html":{}}}],["children",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["chimera.the",{"_index":1555,"title":{},"body":{"index.html":{}}}],["choose",{"_index":342,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["choosen",{"_index":273,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["class",{"_index":33,"title":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"additional-documentation/introduction.html":{}}}],["class/model",{"_index":170,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{}}}],["classes",{"_index":167,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["cleanup",{"_index":1216,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["clicked",{"_index":675,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["clicking",{"_index":1444,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["client",{"_index":983,"title":{},"body":{"classes/SocketDataService.html":{},"dependencies.html":{}}}],["cluster_appmodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1589,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["color",{"_index":526,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["color:#405061",{"_index":566,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["column",{"_index":1472,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["command",{"_index":1606,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":114,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["communicates",{"_index":633,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["communicating",{"_index":1456,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["communication",{"_index":841,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{}}}],["compodoc",{"_index":1571,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":1597,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["component_template",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/JobsService.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["configurated",{"_index":631,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["configurator",{"_index":347,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"index.html":{}}}],["confirmed",{"_index":1612,"title":{},"body":{"index.html":{}}}],["connection",{"_index":752,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["connnect",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["console.log('back",{"_index":786,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["console.log('destroy",{"_index":1164,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["console.log('forward",{"_index":1251,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["console.log('goback",{"_index":1245,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["console.log('hello",{"_index":778,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["console.log('next",{"_index":777,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["console.log('ondestroy",{"_index":466,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardParentComponent.html":{}}}],["console.log('oninit",{"_index":460,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardParentComponent.html":{}}}],["console.log('workflow",{"_index":761,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["console.log(data",{"_index":1493,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["console.log(job",{"_index":1421,"title":{},"body":{"classes/Workflow.html":{}}}],["console.log(responsedata",{"_index":903,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{}}}],["console.log(this._goalpose",{"_index":237,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{}}}],["console.log(this._jobsobjects[count",{"_index":1427,"title":{},"body":{"classes/Workflow.html":{}}}],["console.log(this.armcartesian.goalpose",{"_index":1039,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["console.log(this.basemove.goalpose",{"_index":1097,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["console.log(this.counter",{"_index":459,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["console.log(this.eventemitterservice.subsnextvar",{"_index":1231,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["console.log(this.jobsupdated",{"_index":474,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(this.jobsupdated.length",{"_index":500,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(this.link",{"_index":492,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["console.log(this.newmethod.goalpose",{"_index":1192,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["console.log(this.status",{"_index":1161,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["console.log(this.stepper",{"_index":1236,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["console.log(this.wizardstepperservice.getcounter",{"_index":1494,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["console.log(this.wizardstepperservice.getstatus",{"_index":1482,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["console.log(this.workflow",{"_index":458,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{}}}],["console.log(this.workflow.getcurrentjob(this.counter",{"_index":1333,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["console.log(this.workflowlist",{"_index":914,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["console.log(workflow",{"_index":1490,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["console.log(workflow._name",{"_index":1489,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["const",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["constructor",{"_index":184,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["constructor(data",{"_index":185,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["constructor(eventemitterservice",{"_index":1204,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["constructor(http",{"_index":858,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{}}}],["constructor(id",{"_index":944,"title":{},"body":{"classes/Move.html":{}}}],["constructor(jobservice",{"_index":310,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["constructor(name",{"_index":600,"title":{},"body":{"classes/Base.html":{},"classes/Workflow.html":{}}}],["constructor(private",{"_index":430,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardParentComponent.html":{}}}],["constructor(protected",{"_index":753,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["constructor(router",{"_index":657,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["container",{"_index":510,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["containing",{"_index":632,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/Workflow.html":{}}}],["contains",{"_index":172,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/WizardJobComponent.html":{},"components/WizardParentComponent.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{}}}],["content",{"_index":807,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["control",{"_index":417,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.dirty",{"_index":428,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.invalid",{"_index":427,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.touched",{"_index":429,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["coordinates",{"_index":201,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["copiedjobs",{"_index":287,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["copy",{"_index":1653,"title":{},"body":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["copyarrayitem",{"_index":404,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["count",{"_index":1383,"title":{},"body":{"classes/Workflow.html":{}}}],["counter",{"_index":288,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{}}}],["counterlistener",{"_index":1280,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["countersub",{"_index":289,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["coverage",{"_index":1503,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":732,"title":{"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}},"body":{"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["created",{"_index":1469,"title":{},"body":{"components/WorkflowTableComponent.html":{},"additional-documentation/introduction.html":{}}}],["created_at",{"_index":1359,"title":{},"body":{"classes/Workflow.html":{}}}],["created_at(value",{"_index":1430,"title":{},"body":{"classes/Workflow.html":{}}}],["createelementcssselector",{"_index":746,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["creates",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["createworkflow",{"_index":848,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["createworkflow(workflow",{"_index":860,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["creating",{"_index":1371,"title":{},"body":{"classes/Workflow.html":{}}}],["creation",{"_index":674,"title":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{}},"body":{"components/ExecutionRunComponent.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["crud",{"_index":842,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["css",{"_index":508,"title":{},"body":{"components/AvailableJobsComponent.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["cubic",{"_index":592,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["current",{"_index":873,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WizardParentComponent.html":{},"injectables/WizardStepperService.html":{}}}],["cursor",{"_index":541,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["custom",{"_index":1215,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["customworkflow",{"_index":488,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["data",{"_index":197,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["data._activationtimeout",{"_index":230,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["data._created_at",{"_index":1487,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["data._goalpose",{"_index":232,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{}}}],["data._id",{"_index":228,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"components/WorkflowTableComponent.html":{}}}],["data._jobsobjects",{"_index":1488,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["datasource",{"_index":1449,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["date",{"_index":1362,"title":{},"body":{"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["date.now",{"_index":1406,"title":{},"body":{"classes/Workflow.html":{}}}],["db",{"_index":864,"title":{},"body":{"injectables/HttpRequestService.html":{},"classes/Workflow.html":{}}}],["ddd",{"_index":556,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["declaration",{"_index":337,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["declarations",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["declares",{"_index":685,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["decorators",{"_index":1223,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["decreasecount",{"_index":1283,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["decreases",{"_index":1299,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["deep",{"_index":1256,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["default",{"_index":192,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["defined",{"_index":186,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["delete",{"_index":504,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{}}}],["delete_forever",{"_index":1502,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["deleted",{"_index":867,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["deletes",{"_index":1461,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["deleteworkflow",{"_index":849,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["deleteworkflow(id",{"_index":865,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["deliverd",{"_index":1634,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["dependencies",{"_index":86,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["dependent",{"_index":1643,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"index.html":{}}}],["design",{"_index":995,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["designed",{"_index":1622,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["destroyed",{"_index":330,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["detail",{"_index":1584,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":1579,"title":{},"body":{"index.html":{}}}],["developer",{"_index":1592,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1635,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["direct",{"_index":1586,"title":{},"body":{"index.html":{}}}],["directive",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["directives",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["dirty",{"_index":418,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["disable",{"_index":374,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["disabled",{"_index":1045,"title":{},"body":{"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{}}}],["disabledacttimeout",{"_index":999,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["display",{"_index":517,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{},"index.html":{}}}],["displaydefaultindicatortype",{"_index":1199,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["displayed",{"_index":723,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/Move.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{}}}],["displayedcolumns",{"_index":1450,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["displays",{"_index":830,"title":{},"body":{"components/HeaderComponent.html":{}}}],["displayspinner",{"_index":639,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["doc",{"_index":1605,"title":{},"body":{"index.html":{}}}],["document",{"_index":1630,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["documentation",{"_index":1504,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["done",{"_index":505,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["drag",{"_index":277,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{}}}],["drag&drop",{"_index":272,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{}}}],["drop",{"_index":278,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{}}}],["drop(event",{"_index":318,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["drop/overview",{"_index":282,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{}}}],["dropped",{"_index":587,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["dummy",{"_index":1632,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["dynamic",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1565,"title":{},"body":{"index.html":{}}}],["e.g",{"_index":731,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/NewMethod.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["each",{"_index":206,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"additional-documentation/introduction.html":{}}}],["eee",{"_index":539,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["element._created_at",{"_index":1500,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["element._id",{"_index":1498,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["element._name",{"_index":1499,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["element.model",{"_index":897,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["element.model.ts",{"_index":1432,"title":{},"body":{"classes/WorkflowListElement.html":{},"coverage.html":{}}}],["element.model.ts:10",{"_index":1438,"title":{},"body":{"classes/WorkflowListElement.html":{}}}],["element.model.ts:14",{"_index":1439,"title":{},"body":{"classes/WorkflowListElement.html":{}}}],["element.model.ts:18",{"_index":1436,"title":{},"body":{"classes/WorkflowListElement.html":{}}}],["enable",{"_index":373,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["end",{"_index":1570,"title":{},"body":{"index.html":{}}}],["enter",{"_index":482,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"index.html":{}}}],["entered",{"_index":276,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["entry",{"_index":1435,"title":{},"body":{"classes/WorkflowListElement.html":{}}}],["error",{"_index":385,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["errorstatematcher",{"_index":414,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["especially",{"_index":1433,"title":{},"body":{"classes/WorkflowListElement.html":{}}}],["etc",{"_index":1644,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["event",{"_index":321,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["event.container.data",{"_index":499,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["event.container.id",{"_index":494,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["event.currentindex",{"_index":497,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["event.previouscontainer.data",{"_index":498,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["event.previouscontainer.id",{"_index":493,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["event.previousindex",{"_index":496,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["eventemitter",{"_index":745,"title":{},"body":{"components/ExecutionRunComponent.html":{},"injectables/WizardParentStepperService.html":{}}}],["eventemitterservice",{"_index":662,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["events",{"_index":1257,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["example",{"_index":509,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/NewMethod.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["execute(run",{"_index":844,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["executed",{"_index":336,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["executing",{"_index":636,"title":{},"body":{"components/ExecutionRunComponent.html":{},"index.html":{}}}],["execution",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"index.html":{}}}],["execution/execution",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["execution/http",{"_index":1031,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["executionruncomponent",{"_index":45,"title":{"components/ExecutionRunComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["explain",{"_index":1628,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["explained",{"_index":1583,"title":{},"body":{"index.html":{}}}],["explains",{"_index":1623,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["exports",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["express.js",{"_index":1566,"title":{},"body":{"index.html":{}}}],["extend",{"_index":951,"title":{},"body":{"classes/NewMethod.html":{},"index.html":{}}}],["extended",{"_index":1577,"title":{},"body":{"index.html":{}}}],["extends",{"_index":171,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["false",{"_index":479,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["find",{"_index":1578,"title":{},"body":{"index.html":{}}}],["finished",{"_index":769,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["first",{"_index":1372,"title":{},"body":{"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["flex",{"_index":806,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["folder",{"_index":1650,"title":{},"body":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["following",{"_index":1609,"title":{},"body":{"index.html":{}}}],["font",{"_index":561,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["form",{"_index":421,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["form.submitted",{"_index":426,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formbuilder",{"_index":1228,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["formcontrol",{"_index":388,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formgroup",{"_index":1229,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["formgroupdirective",{"_index":411,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formsmodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["forum",{"_index":1254,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["forward",{"_index":734,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["found",{"_index":960,"title":{},"body":{"components/NoPageFoundComponent.html":{}}}],["found'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["found.component",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["found.component.css",{"_index":961,"title":{},"body":{"components/NoPageFoundComponent.html":{}}}],["found.component.html",{"_index":962,"title":{},"body":{"components/NoPageFoundComponent.html":{}}}],["found.component.ts",{"_index":958,"title":{},"body":{"components/NoPageFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":963,"title":{},"body":{"components/NoPageFoundComponent.html":{}}}],["found.component.ts:23",{"_index":964,"title":{},"body":{"components/NoPageFoundComponent.html":{}}}],["found/no",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NoPageFoundComponent.html":{},"coverage.html":{}}}],["front",{"_index":1569,"title":{},"body":{"index.html":{}}}],["full",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":1220,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["functionalities",{"_index":1141,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["fxflex",{"_index":816,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["g",{"_index":1596,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1600,"title":{},"body":{"index.html":{}}}],["generates",{"_index":1576,"title":{},"body":{"index.html":{}}}],["getactivationtimeout",{"_index":608,"title":{},"body":{"classes/Base.html":{}}}],["getallworkflows",{"_index":850,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["getarmposition",{"_index":851,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["getavailablejobs",{"_index":301,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["getbaseposition",{"_index":852,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["getcounter",{"_index":1284,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["getcounterlistener",{"_index":1285,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["getcreated_at",{"_index":1398,"title":{},"body":{"classes/Workflow.html":{}}}],["getcurrentjob",{"_index":1355,"title":{},"body":{"classes/Workflow.html":{}}}],["getcurrentjob(count",{"_index":1379,"title":{},"body":{"classes/Workflow.html":{}}}],["getgoalpose",{"_index":214,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{}}}],["getid",{"_index":604,"title":{},"body":{"classes/Base.html":{},"classes/Workflow.html":{}}}],["getjobname",{"_index":1356,"title":{},"body":{"classes/Workflow.html":{}}}],["getjobname(count",{"_index":1384,"title":{},"body":{"classes/Workflow.html":{}}}],["getjobs",{"_index":1286,"title":{},"body":{"injectables/WizardStepperService.html":{},"classes/Workflow.html":{}}}],["getjobsfromserver",{"_index":922,"title":{},"body":{"injectables/JobsService.html":{}}}],["getjobslength",{"_index":1357,"title":{},"body":{"classes/Workflow.html":{}}}],["getjobslistener",{"_index":1287,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["getjointvalues",{"_index":249,"title":{},"body":{"classes/ArmJoint.html":{}}}],["getname",{"_index":612,"title":{},"body":{"classes/Base.html":{},"classes/Workflow.html":{}}}],["getresponse",{"_index":936,"title":{},"body":{"injectables/JobsService.html":{}}}],["getresponselistener",{"_index":934,"title":{},"body":{"injectables/JobsService.html":{}}}],["getstatus",{"_index":1288,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["getstatuslistener",{"_index":1289,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["getter",{"_index":216,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/NewMethod.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{}}}],["gettimeout",{"_index":261,"title":{},"body":{"classes/ArmTrajectory.html":{}}}],["getting",{"_index":668,"title":{"index.html":{}},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["getworkflow",{"_index":853,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/WizardStepperService.html":{}}}],["getworkflow(id",{"_index":876,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["getworkflowitem",{"_index":1290,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["getworkflowlistener",{"_index":1291,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["getworkflowlistupdatelistener",{"_index":854,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["go",{"_index":1271,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["goal",{"_index":792,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["goalpose",{"_index":183,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["goalpose(value",{"_index":238,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{}}}],["goback",{"_index":1202,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["goback(stepper",{"_index":1207,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["goforward",{"_index":1203,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["goforward(stepper",{"_index":1210,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["graph",{"_index":1617,"title":{},"body":{"modules.html":{}}}],["grip",{"_index":1099,"title":{},"body":{"components/WizardGripperGripComponent.html":{},"index.html":{}}}],["grip'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["grip.component",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["grip.component.css",{"_index":1100,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.html",{"_index":1101,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts",{"_index":1098,"title":{},"body":{"components/WizardGripperGripComponent.html":{},"coverage.html":{}}}],["grip.component.ts:23",{"_index":1112,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:27",{"_index":1106,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:31",{"_index":1105,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:35",{"_index":1107,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:39",{"_index":1108,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:43",{"_index":1109,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:47",{"_index":1110,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:51",{"_index":1111,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:55",{"_index":1113,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:59",{"_index":1102,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:76",{"_index":1103,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:85",{"_index":1104,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.model",{"_index":1115,"title":{},"body":{"components/WizardGripperGripComponent.html":{},"classes/Workflow.html":{}}}],["grip.model.ts",{"_index":822,"title":{},"body":{"classes/GripperGrip.html":{},"coverage.html":{}}}],["grip.model.ts:7",{"_index":823,"title":{},"body":{"classes/GripperGrip.html":{}}}],["grip/wizard",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WizardGripperGripComponent.html":{},"coverage.html":{}}}],["gripper",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["gripper_grip",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["gripper_release",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["grippergrip",{"_index":486,"title":{"classes/GripperGrip.html":{}},"body":{"components/AvailableJobsComponent.html":{},"classes/GripperGrip.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardJobComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["grippergrip(job",{"_index":1422,"title":{},"body":{"classes/Workflow.html":{}}}],["grippergrip(jobsname",{"_index":1412,"title":{},"body":{"classes/Workflow.html":{}}}],["grippergripworkflow",{"_index":1411,"title":{},"body":{"classes/Workflow.html":{}}}],["gripperrelease",{"_index":491,"title":{"classes/GripperRelease.html":{}},"body":{"components/AvailableJobsComponent.html":{},"classes/GripperRelease.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["gripperrelease(job",{"_index":1425,"title":{},"body":{"classes/Workflow.html":{}}}],["gripperrelease(jobsname",{"_index":1418,"title":{},"body":{"classes/Workflow.html":{}}}],["gripperreleaseworkflow",{"_index":1417,"title":{},"body":{"classes/Workflow.html":{}}}],["h1",{"_index":797,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["h2",{"_index":798,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["h3",{"_index":799,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["h4",{"_index":800,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["h5",{"_index":801,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["h6",{"_index":802,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["hammerjs",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["handel",{"_index":384,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["handle",{"_index":1347,"title":{},"body":{"classes/Workflow.html":{},"classes/WorkflowListElement.html":{}}}],["header",{"_index":829,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardParentComponent.html":{},"index.html":{}}}],["header'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["header.component.css",{"_index":833,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":834,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":48,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":548,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["help",{"_index":1591,"title":{},"body":{"index.html":{}}}],["here",{"_index":932,"title":{},"body":{"injectables/JobsService.html":{},"classes/Workflow.html":{},"index.html":{}}}],["hides",{"_index":682,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["hidespinner",{"_index":650,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["home",{"_index":831,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["hook",{"_index":326,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["horizontal",{"_index":814,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["host",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["http",{"_index":658,"title":{},"body":{"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{}}}],["http://localhost:3030",{"_index":974,"title":{},"body":{"classes/SocketDataService.html":{}}}],["httpclient",{"_index":659,"title":{},"body":{"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{}}}],["httpclientmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["httprequest",{"_index":660,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["httprequestservice",{"_index":661,"title":{"injectables/HttpRequestService.html":{}},"body":{"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["https://material.angular.io/cdk/drag",{"_index":281,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{}}}],["https://material.angular.io/components/button/overview",{"_index":1020,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["https://material.angular.io/components/categories",{"_index":996,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["https://material.angular.io/components/slider/overview",{"_index":1017,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["https://material.angular.io/components/stepper/overview",{"_index":1195,"title":{},"body":{"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{}}}],["icon",{"_index":832,"title":{},"body":{"components/HeaderComponent.html":{}}}],["icons",{"_index":1445,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["id",{"_index":189,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"classes/Move.html":{},"classes/NewMethod.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["id(value",{"_index":619,"title":{},"body":{"classes/Base.html":{},"classes/Workflow.html":{}}}],["identifier",{"_index":1505,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":433,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["illustrated",{"_index":1610,"title":{},"body":{"index.html":{}}}],["implements",{"_index":283,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["import",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}}}],["important",{"_index":528,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["imported",{"_index":1404,"title":{},"body":{"classes/Workflow.html":{}}}],["imports",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["included",{"_index":1633,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["includes",{"_index":1604,"title":{},"body":{"index.html":{}}}],["including",{"_index":1369,"title":{},"body":{"classes/Workflow.html":{}}}],["increasecount",{"_index":1292,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["increases",{"_index":1311,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["ind",{"_index":1363,"title":{},"body":{"classes/Workflow.html":{}}}],["indent",{"_index":582,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["index",{"_index":175,"title":{"index.html":{}},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["index.html",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["indicates",{"_index":959,"title":{},"body":{"components/NoPageFoundComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["information",{"_index":317,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["inherited",{"_index":202,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["injectable",{"_index":837,"title":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{}},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"coverage.html":{}}}],["injectables",{"_index":838,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"overview.html":{}}}],["inline",{"_index":518,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["inserts",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["install",{"_index":1594,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1014,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["instancing",{"_index":1370,"title":{},"body":{"classes/Workflow.html":{}}}],["instantiate",{"_index":973,"title":{},"body":{"classes/SocketDataService.html":{}}}],["instructions",{"_index":1580,"title":{},"body":{"index.html":{}}}],["integrate",{"_index":1624,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["interface",{"_index":1551,"title":{},"body":{"index.html":{}}}],["interim",{"_index":361,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["internally",{"_index":1349,"title":{},"body":{"classes/Workflow.html":{},"classes/WorkflowListElement.html":{}}}],["introduction",{"_index":1621,"title":{"additional-documentation/introduction.html":{}},"body":{"additional-documentation/introduction.html":{}}}],["invalid",{"_index":416,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["invert",{"_index":1046,"title":{},"body":{"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{}}}],["invertacttimeout",{"_index":1000,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["invokebackfunction",{"_index":1263,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["invokenextfunction",{"_index":1264,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["invokes",{"_index":1219,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["io",{"_index":981,"title":{},"body":{"classes/SocketDataService.html":{},"dependencies.html":{}}}],["io(this.url",{"_index":985,"title":{},"body":{"classes/SocketDataService.html":{}}}],["isalreadysave",{"_index":640,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["isdisablednext",{"_index":290,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["isdisabledrun",{"_index":641,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["iserrorstate",{"_index":947,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate(control",{"_index":422,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["isloading",{"_index":750,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["issubmitted",{"_index":425,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ist",{"_index":722,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["item",{"_index":586,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/WizardStepperService.html":{}}}],["items",{"_index":809,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["i}}{{move",{"_index":502,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["job",{"_index":344,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["job's",{"_index":357,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["job'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["job._name",{"_index":1419,"title":{},"body":{"classes/Workflow.html":{}}}],["job.component",{"_index":742,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["job.component.css",{"_index":1143,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.html",{"_index":1144,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts",{"_index":1139,"title":{},"body":{"components/WizardJobComponent.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["job.component.ts:108",{"_index":1149,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:129",{"_index":1146,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:139",{"_index":1150,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:21",{"_index":1153,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:25",{"_index":1155,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:29",{"_index":1156,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:35",{"_index":1151,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:39",{"_index":1152,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:46",{"_index":1154,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:50",{"_index":1145,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:67",{"_index":1147,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:92",{"_index":1148,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.goalpose",{"_index":793,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["job.name",{"_index":789,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["job/wizard",{"_index":741,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["jobe",{"_index":353,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["jobname",{"_index":354,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Workflow.html":{}}}],["jobs",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"index.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["jobs'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["jobs.component",{"_index":120,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["jobs.component.css",{"_index":285,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["jobs.component.html",{"_index":286,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["jobs.component.ts",{"_index":269,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["jobs.component.ts:105",{"_index":363,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:109",{"_index":313,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:125",{"_index":335,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:165",{"_index":324,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:177",{"_index":352,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:183",{"_index":322,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:189",{"_index":341,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:200",{"_index":339,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:206",{"_index":348,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:214",{"_index":350,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:22",{"_index":948,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["jobs.component.ts:229",{"_index":356,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:277",{"_index":320,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:42",{"_index":390,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:48",{"_index":383,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:52",{"_index":386,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:56",{"_index":372,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:60",{"_index":394,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:65",{"_index":396,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:69",{"_index":360,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:75",{"_index":392,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:79",{"_index":393,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:83",{"_index":398,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:87",{"_index":399,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:91",{"_index":379,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:95",{"_index":377,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:99",{"_index":380,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.service",{"_index":401,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["jobs/available",{"_index":119,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["jobs/jobs.service",{"_index":740,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["jobservice",{"_index":314,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["jobsname",{"_index":1374,"title":{},"body":{"classes/Workflow.html":{}}}],["jobsservice",{"_index":311,"title":{"injectables/JobsService.html":{}},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["jobssub",{"_index":291,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["jobsupdated",{"_index":292,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/WizardStepperService.html":{}}}],["joins",{"_index":1042,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["joins.component",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["joins.component.css",{"_index":1043,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.html",{"_index":1044,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.ts",{"_index":1041,"title":{},"body":{"components/WizardArmJoinsComponent.html":{},"coverage.html":{}}}],["joins.component.ts:16",{"_index":1057,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.ts:20",{"_index":1051,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.ts:24",{"_index":1052,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.ts:28",{"_index":1053,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.ts:32",{"_index":1054,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.ts:36",{"_index":1055,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.ts:40",{"_index":1056,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.ts:44",{"_index":1058,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.ts:48",{"_index":1050,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins/wizard",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WizardArmJoinsComponent.html":{},"coverage.html":{}}}],["joint.model",{"_index":1403,"title":{},"body":{"classes/Workflow.html":{}}}],["joint.model.ts",{"_index":241,"title":{},"body":{"classes/ArmJoint.html":{},"coverage.html":{}}}],["joint.model.ts:11",{"_index":247,"title":{},"body":{"classes/ArmJoint.html":{}}}],["joint.model.ts:25",{"_index":250,"title":{},"body":{"classes/ArmJoint.html":{}}}],["joint.model.ts:32",{"_index":252,"title":{},"body":{"classes/ArmJoint.html":{}}}],["jointvalues",{"_index":246,"title":{},"body":{"classes/ArmJoint.html":{}}}],["jointvalues(value",{"_index":255,"title":{},"body":{"classes/ArmJoint.html":{}}}],["jsondata",{"_index":900,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["keeps",{"_index":1262,"title":{},"body":{"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{}}}],["layout",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["left",{"_index":545,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"overview.html":{}}}],["length",{"_index":1391,"title":{},"body":{"classes/Workflow.html":{}}}],["li",{"_index":540,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["li.selected:hover",{"_index":552,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["li:hover",{"_index":554,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["lifecycle",{"_index":325,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["line",{"_index":567,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["line:no",{"_index":756,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["link",{"_index":293,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"components/WorkflowTableComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["links",{"_index":1587,"title":{},"body":{"index.html":{}}}],["list",{"_index":345,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["listen",{"_index":1325,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["listener",{"_index":1327,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["listens",{"_index":1323,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["local",{"_index":891,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{}}}],["locally",{"_index":364,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{}}}],["m",{"_index":1563,"title":{},"body":{"index.html":{}}}],["made",{"_index":1646,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["main",{"_index":1645,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["manipulators",{"_index":1554,"title":{},"body":{"index.html":{}}}],["manner",{"_index":1581,"title":{},"body":{"index.html":{}}}],["margin",{"_index":515,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["massage",{"_index":724,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["mat",{"_index":812,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["matcher",{"_index":294,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matching",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["material",{"_index":279,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{}}}],["matstepper",{"_index":1208,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["max",{"_index":513,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["maxacttimeout",{"_index":1001,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["mean",{"_index":1560,"title":{},"body":{"index.html":{}}}],["message",{"_index":642,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/SocketDataService.html":{}}}],["messages",{"_index":751,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["method",{"_index":143,"title":{"additional-documentation/steps-adding-new-method.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/Base.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["method'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["method.component",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["method.component.css",{"_index":1169,"title":{},"body":{"components/WizardNewMethodComponent.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["method.component.html",{"_index":1170,"title":{},"body":{"components/WizardNewMethodComponent.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["method.component.ts",{"_index":1167,"title":{},"body":{"components/WizardNewMethodComponent.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["method.component.ts:100",{"_index":1174,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:118",{"_index":1173,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:27",{"_index":1183,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:31",{"_index":1180,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:35",{"_index":1175,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:39",{"_index":1177,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:43",{"_index":1178,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:47",{"_index":1179,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:51",{"_index":1181,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:55",{"_index":1182,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:59",{"_index":1184,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:63",{"_index":1185,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:67",{"_index":1176,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:71",{"_index":1171,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:90",{"_index":1172,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.model",{"_index":1187,"title":{},"body":{"components/WizardNewMethodComponent.html":{},"classes/Workflow.html":{}}}],["method.model.ts",{"_index":950,"title":{},"body":{"classes/NewMethod.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{}}}],["method.model.ts:11",{"_index":953,"title":{},"body":{"classes/NewMethod.html":{}}}],["method.model.ts:31",{"_index":955,"title":{},"body":{"classes/NewMethod.html":{}}}],["method.model.ts:38",{"_index":954,"title":{},"body":{"classes/NewMethod.html":{}}}],["method.the",{"_index":1625,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["method/job",{"_index":207,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["method/wizard",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WizardNewMethodComponent.html":{},"coverage.html":{}}}],["methods",{"_index":174,"title":{"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}},"body":{"classes/ArmCartesian.html":{},"components/AvailableJobsComponent.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["min",{"_index":1047,"title":{},"body":{"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{}}}],["minacttimeout",{"_index":1002,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["mistakes",{"_index":243,"title":{},"body":{"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{}}}],["mobile",{"_index":1553,"title":{},"body":{"index.html":{}}}],["model",{"_index":1346,"title":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}},"body":{"classes/Workflow.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}}}],["model/arm",{"_index":1029,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["model/base",{"_index":1091,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["model/base.model",{"_index":1330,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["model/gripper",{"_index":1114,"title":{},"body":{"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{}}}],["model/new",{"_index":1186,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["model/workflow",{"_index":896,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["model/workflow.model",{"_index":410,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{}}}],["models",{"_index":599,"title":{},"body":{"classes/Base.html":{}}}],["module",{"_index":83,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["modules",{"_index":85,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":1564,"title":{},"body":{"index.html":{}}}],["move",{"_index":406,"title":{"classes/Move.html":{}},"body":{"components/AvailableJobsComponent.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["move.data",{"_index":407,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["move.model",{"_index":1092,"title":{},"body":{"components/WizardBaseComponent.html":{},"classes/Workflow.html":{}}}],["move.model.ts",{"_index":623,"title":{},"body":{"classes/BaseMove.html":{},"coverage.html":{}}}],["move.model.ts:11",{"_index":624,"title":{},"body":{"classes/BaseMove.html":{}}}],["move.model.ts:31",{"_index":626,"title":{},"body":{"classes/BaseMove.html":{}}}],["move.model.ts:38",{"_index":625,"title":{},"body":{"classes/BaseMove.html":{}}}],["movearmcartesianworkflow",{"_index":1415,"title":{},"body":{"classes/Workflow.html":{}}}],["movearmjointsworkflow",{"_index":489,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["movearmontrajectory",{"_index":487,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["movearmontrajectoryworkflow",{"_index":1165,"title":{},"body":{"components/WizardJobComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["movebase",{"_index":1073,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["moveiteminarray",{"_index":402,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["moveiteminarray(event.container.data",{"_index":495,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["movement",{"_index":1060,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{}}}],["movement'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["movetopositionworkflow",{"_index":1413,"title":{},"body":{"classes/Workflow.html":{}}}],["msg",{"_index":707,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/SocketDataService.html":{}}}],["my_location",{"_index":1040,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["myerrorstatematcher",{"_index":382,"title":{"classes/MyErrorStateMatcher.html":{}},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["n",{"_index":1567,"title":{},"body":{"index.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/introduction.html":{}}}],["name(value",{"_index":621,"title":{},"body":{"classes/Base.html":{},"classes/Workflow.html":{}}}],["nameformcontrol",{"_index":295,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["names",{"_index":1279,"title":{},"body":{"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{}}}],["navigate",{"_index":733,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["navigate_before",{"_index":794,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["navigate_next",{"_index":506,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["navigating",{"_index":366,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["necessary",{"_index":338,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/steps-adding-new-method.html":{}}}],["need",{"_index":1636,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["needed",{"_index":966,"title":{},"body":{"classes/SocketDataService.html":{},"classes/WorkflowListElement.html":{}}}],["needs",{"_index":1206,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["new",{"_index":71,"title":{"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["new_method",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["new_method_path",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["newly",{"_index":1638,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["newmethod",{"_index":484,"title":{"classes/NewMethod.html":{}},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"classes/Workflow.html":{},"coverage.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}}}],["newmethod(job",{"_index":1420,"title":{},"body":{"classes/Workflow.html":{}}}],["newmethod(jobsname",{"_index":1410,"title":{},"body":{"classes/Workflow.html":{}}}],["newmethodworkflow",{"_index":1408,"title":{},"body":{"classes/Workflow.html":{}}}],["next",{"_index":375,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{}}}],["ng",{"_index":1255,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["ngform",{"_index":412,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ngmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":302,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["ngoninit",{"_index":303,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["ngx",{"_index":749,"title":{},"body":{"components/ExecutionRunComponent.html":{},"dependencies.html":{}}}],["ngxspinnerservice",{"_index":666,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["node.js",{"_index":1568,"title":{},"body":{"index.html":{}}}],["none",{"_index":533,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardParentComponent.html":{}}}],["nopagefoundcomponent",{"_index":50,"title":{"components/NoPageFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["npm",{"_index":1595,"title":{},"body":{"index.html":{}}}],["null",{"_index":423,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{}}}],["null).subscribe",{"_index":911,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{}}}],["number",{"_index":198,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["oberservable",{"_index":880,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["oberservables",{"_index":716,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["obeservable",{"_index":978,"title":{},"body":{"classes/SocketDataService.html":{}}}],["object",{"_index":1382,"title":{},"body":{"classes/Workflow.html":{}}}],["object's",{"_index":1386,"title":{},"body":{"classes/Workflow.html":{}}}],["objects",{"_index":1388,"title":{},"body":{"classes/Workflow.html":{}}}],["observable",{"_index":927,"title":{},"body":{"injectables/JobsService.html":{},"classes/SocketDataService.html":{},"injectables/WizardStepperService.html":{}}}],["observable((observer",{"_index":987,"title":{},"body":{"classes/SocketDataService.html":{}}}],["observables",{"_index":713,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["observed",{"_index":378,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{}}}],["observer",{"_index":931,"title":{},"body":{"injectables/JobsService.html":{},"classes/SocketDataService.html":{}}}],["observer.next(msg",{"_index":989,"title":{},"body":{"classes/SocketDataService.html":{}}}],["occure",{"_index":1217,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["onclick",{"_index":304,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ondeleteclick",{"_index":1452,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["ondeleteclick(id",{"_index":1459,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["ondestroy",{"_index":284,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["one",{"_index":395,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/WizardParentStepperService.html":{},"classes/WorkflowListElement.html":{}}}],["ongetpostionclick",{"_index":1008,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["oninit",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["onnewmessage",{"_index":969,"title":{},"body":{"classes/SocketDataService.html":{}}}],["onnextclick",{"_index":305,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["onplayclick",{"_index":1453,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["onplayclick(id",{"_index":1463,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["onpreviousclick",{"_index":656,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["onresetclick",{"_index":306,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["onsaveclick",{"_index":307,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["onselect",{"_index":308,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["onselect(job",{"_index":351,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["onstepperbackclick",{"_index":1267,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["onsteppernextclick",{"_index":1268,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["onupdateclick",{"_index":1454,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["onupdateclick(id",{"_index":1465,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["opacity",{"_index":584,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["open",{"_index":1659,"title":{},"body":{"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["operations",{"_index":845,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["optional",{"_index":196,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["order",{"_index":274,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["out",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["output",{"_index":744,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["overrided",{"_index":1142,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["overrides",{"_index":684,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["overview",{"_index":1468,"title":{"overview.html":{}},"body":{"components/WorkflowTableComponent.html":{},"overview.html":{}}}],["p",{"_index":1601,"title":{},"body":{"index.html":{}}}],["package",{"_index":1527,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":523,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["page",{"_index":20,"title":{"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["param",{"_index":225,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["parameter",{"_index":1016,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["parameters",{"_index":173,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["parent",{"_index":598,"title":{},"body":{"classes/Base.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"coverage.html":{},"index.html":{}}}],["parent'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["parent.component",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["parent.component.css",{"_index":1200,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parent.component.html",{"_index":1201,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parent.component.ts",{"_index":1193,"title":{},"body":{"components/WizardParentComponent.html":{},"coverage.html":{}}}],["parent.component.ts:106",{"_index":1222,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parent.component.ts:25",{"_index":1226,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parent.component.ts:29",{"_index":1205,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parent.component.ts:46",{"_index":1218,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parent.component.ts:68",{"_index":1213,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parent.component.ts:80",{"_index":1209,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parent.component.ts:89",{"_index":1211,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parent/wizard",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"coverage.html":{}}}],["parentview",{"_index":1194,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parseint(msg",{"_index":766,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["part",{"_index":1607,"title":{},"body":{"index.html":{}}}],["passages",{"_index":1590,"title":{},"body":{"index.html":{}}}],["passed",{"_index":191,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{}}}],["paste",{"_index":1654,"title":{},"body":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["path",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["pathmatch",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["persistently",{"_index":863,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["physically",{"_index":883,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["pipe",{"_index":328,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["placeholder",{"_index":580,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["play",{"_index":689,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["play_circle_outline",{"_index":795,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["pointer",{"_index":542,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardParentComponent.html":{}}}],["position",{"_index":543,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["possible",{"_index":1446,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["present",{"_index":994,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["presented",{"_index":893,"title":{},"body":{"injectables/HttpRequestService.html":{},"classes/WorkflowListElement.html":{}}}],["presents",{"_index":993,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["preview",{"_index":569,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["previous",{"_index":717,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["private",{"_index":177,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["procedure",{"_index":1557,"title":{},"body":{"index.html":{}}}],["program",{"_index":1558,"title":{},"body":{"index.html":{}}}],["programming",{"_index":1552,"title":{},"body":{"index.html":{}}}],["progress",{"_index":672,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/SocketDataService.html":{},"index.html":{}}}],["project",{"_index":1648,"title":{},"body":{"additional-documentation/steps-adding-new-method.html":{}}}],["properties",{"_index":176,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/introduction.html":{}}}],["property",{"_index":1261,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["protected",{"_index":754,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardJobComponent.html":{}}}],["provide",{"_index":1196,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["provided",{"_index":244,"title":{},"body":{"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"injectables/HttpRequestService.html":{}}}],["providedin",{"_index":898,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{}}}],["providers",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"components/WizardParentComponent.html":{},"overview.html":{}}}],["provides",{"_index":270,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/SocketDataService.html":{}}}],["public",{"_index":970,"title":{},"body":{"classes/SocketDataService.html":{},"classes/WorkflowListElement.html":{}}}],["radius",{"_index":550,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["reactiveformsmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":843,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["ready",{"_index":1613,"title":{},"body":{"index.html":{}}}],["receives",{"_index":700,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["receiving",{"_index":1377,"title":{},"body":{"classes/Workflow.html":{}}}],["redirecting",{"_index":315,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["redirects",{"_index":346,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["redirectto",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refresh",{"_index":501,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["refreshes",{"_index":340,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["relative",{"_index":544,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["release",{"_index":1120,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["release.component",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["release.component.css",{"_index":1121,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.html",{"_index":1122,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts",{"_index":1119,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{},"coverage.html":{}}}],["release.component.ts:23",{"_index":1133,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:27",{"_index":1127,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:31",{"_index":1126,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:35",{"_index":1128,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:39",{"_index":1129,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:43",{"_index":1130,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:47",{"_index":1131,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:51",{"_index":1132,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:55",{"_index":1134,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:59",{"_index":1123,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:76",{"_index":1124,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:85",{"_index":1125,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.model",{"_index":1135,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{},"classes/Workflow.html":{}}}],["release.model.ts",{"_index":825,"title":{},"body":{"classes/GripperRelease.html":{},"coverage.html":{}}}],["release.model.ts:7",{"_index":826,"title":{},"body":{"classes/GripperRelease.html":{}}}],["release/wizard",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WizardGripperReleaseComponent.html":{},"coverage.html":{}}}],["represents",{"_index":1434,"title":{},"body":{"classes/WorkflowListElement.html":{}}}],["request",{"_index":692,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["request.service",{"_index":743,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["request.service.ts",{"_index":840,"title":{},"body":{"injectables/HttpRequestService.html":{},"coverage.html":{}}}],["request.service.ts:109",{"_index":879,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:116",{"_index":866,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:123",{"_index":872,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:130",{"_index":875,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:138",{"_index":877,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:20",{"_index":890,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:24",{"_index":895,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:28",{"_index":888,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:32",{"_index":859,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:50",{"_index":885,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:62",{"_index":861,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:74",{"_index":882,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:84",{"_index":887,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:96",{"_index":868,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["requested",{"_index":874,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["requests",{"_index":323,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["required",{"_index":503,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["reset",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"components/ExecutionRunComponent.html":{},"components/WizardParentComponent.html":{},"overview.html":{}}}],["reset(stepper",{"_index":1221,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["resets",{"_index":331,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardParentComponent.html":{}}}],["resp",{"_index":870,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/WizardStepperService.html":{}}}],["response",{"_index":296,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{}}}],["responsedata",{"_index":902,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["responsedata.workflows",{"_index":940,"title":{},"body":{"injectables/JobsService.html":{}}}],["responselistener",{"_index":923,"title":{},"body":{"injectables/JobsService.html":{}}}],["responsesub",{"_index":297,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["result",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["results",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["return",{"_index":239,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{}}}],["returns",{"_index":217,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["rgba(0",{"_index":573,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["right",{"_index":397,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["robot",{"_index":670,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["robotmethods",{"_index":530,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{}}}],["root'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["route",{"_index":1656,"title":{"additional-documentation/steps-adding-new-method/4.-add-route.html":{}},"body":{"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["router",{"_index":312,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["routermodule",{"_index":116,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":117,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{}}}],["routing",{"_index":358,"title":{"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["routing.module.ts",{"_index":113,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing/app",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing/redirecting",{"_index":381,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["row",{"_index":595,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["run",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ExecutionRunComponent.html":{},"components/WorkflowTableComponent.html":{},"index.html":{}}}],["run'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["run.component",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run.component.css",{"_index":637,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.html",{"_index":638,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts",{"_index":629,"title":{},"body":{"components/ExecutionRunComponent.html":{},"coverage.html":{}}}],["run.component.ts:101",{"_index":704,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:115",{"_index":688,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:132",{"_index":696,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:146",{"_index":701,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:161",{"_index":673,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:172",{"_index":679,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:183",{"_index":678,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:31",{"_index":721,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:35",{"_index":720,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:37",{"_index":726,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:41",{"_index":725,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:45",{"_index":719,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:49",{"_index":667,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:78",{"_index":683,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:88",{"_index":708,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:94",{"_index":681,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run/execution",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ExecutionRunComponent.html":{},"coverage.html":{}}}],["runonclick",{"_index":651,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["runworkflow",{"_index":855,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["rxjs",{"_index":408,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/SocketDataService.html":{},"components/WizardJobComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{},"dependencies.html":{}}}],["s",{"_index":1603,"title":{},"body":{"index.html":{}}}],["save",{"_index":698,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["savecreateonclick",{"_index":652,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["saved",{"_index":699,"title":{},"body":{"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{}}}],["saveupdateonclick",{"_index":653,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["saveworkflow",{"_index":856,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["saveworkflow(workflow",{"_index":884,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["saving",{"_index":634,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["screenshots",{"_index":1585,"title":{},"body":{"index.html":{}}}],["section",{"_index":805,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"additional-documentation/introduction.html":{}}}],["see",{"_index":1443,"title":{},"body":{"components/WorkflowTableComponent.html":{},"additional-documentation/introduction.html":{}}}],["selected",{"_index":349,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["selectedjob",{"_index":298,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["selectedjobs",{"_index":299,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["selection",{"_index":1611,"title":{},"body":{"index.html":{}}}],["selectnextjob",{"_index":309,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["selectnextjob(job",{"_index":355,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["send",{"_index":691,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/SocketDataService.html":{}}}],["sendmessage",{"_index":971,"title":{},"body":{"classes/SocketDataService.html":{}}}],["sendmessage(message",{"_index":979,"title":{},"body":{"classes/SocketDataService.html":{}}}],["sends",{"_index":862,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["sent",{"_index":210,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["service",{"_index":329,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"additional-documentation/introduction.html":{}}}],["set",{"_index":222,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{},"classes/Workflow.html":{}}}],["setactivationtimeout(value",{"_index":610,"title":{},"body":{"classes/Base.html":{}}}],["setcreated_at(value",{"_index":1400,"title":{},"body":{"classes/Workflow.html":{}}}],["setgoalpose(value",{"_index":218,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{}}}],["setid(value",{"_index":606,"title":{},"body":{"classes/Base.html":{},"classes/Workflow.html":{}}}],["setjointvalues(value",{"_index":251,"title":{},"body":{"classes/ArmJoint.html":{}}}],["setname(value",{"_index":614,"title":{},"body":{"classes/Base.html":{},"classes/Workflow.html":{}}}],["sets",{"_index":705,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardParentComponent.html":{}}}],["setter",{"_index":220,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{}}}],["settimeout",{"_index":774,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["settimeout(value",{"_index":263,"title":{},"body":{"classes/ArmTrajectory.html":{}}}],["settings",{"_index":1252,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["setworkflowprogress",{"_index":654,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["setworkflowprogress(msg",{"_index":703,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["shadow",{"_index":572,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["shadowed",{"_index":757,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["share",{"_index":871,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{}}}],["shared",{"_index":370,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["sharing",{"_index":316,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["show",{"_index":790,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["shown",{"_index":1639,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["shows",{"_index":630,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["showspinner",{"_index":655,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["simplechange",{"_index":400,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["simply",{"_index":1629,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["single",{"_index":275,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Workflow.html":{},"index.html":{}}}],["size",{"_index":562,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["sizing",{"_index":571,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["slider",{"_index":813,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["small",{"_index":563,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["snipets",{"_index":1641,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["socket",{"_index":695,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/SocketDataService.html":{},"dependencies.html":{}}}],["socket.io",{"_index":982,"title":{},"body":{"classes/SocketDataService.html":{},"dependencies.html":{}}}],["socketdataservice",{"_index":664,"title":{"classes/SocketDataService.html":{}},"body":{"components/ExecutionRunComponent.html":{},"classes/SocketDataService.html":{},"coverage.html":{}}}],["sockets/websocket.service",{"_index":748,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["solid",{"_index":538,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["specific",{"_index":1381,"title":{},"body":{"classes/Workflow.html":{}}}],["spinner",{"_index":665,"title":{},"body":{"components/ExecutionRunComponent.html":{},"dependencies.html":{}}}],["spinnerstyle",{"_index":818,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["spinnertext",{"_index":643,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["src/app/app",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/execution/execution",{"_index":628,"title":{},"body":{"components/ExecutionRunComponent.html":{},"coverage.html":{}}}],["src/app/execution/http",{"_index":839,"title":{},"body":{"injectables/HttpRequestService.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts",{"_index":828,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:14",{"_index":835,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:25",{"_index":836,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/jobs/available",{"_index":268,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["src/app/jobs/jobs.service.ts",{"_index":919,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/app/jobs/jobs.service.ts:16",{"_index":928,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/app/jobs/jobs.service.ts:21",{"_index":924,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/app/jobs/jobs.service.ts:32",{"_index":925,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/app/jobs/jobs.service.ts:44",{"_index":935,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/app/jobs/jobs.service.ts:51",{"_index":937,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/app/jobs/move.data.ts",{"_index":943,"title":{},"body":{"classes/Move.html":{},"coverage.html":{}}}],["src/app/jobs/move.data.ts:13",{"_index":945,"title":{},"body":{"classes/Move.html":{}}}],["src/app/jobs/move.data.ts:9",{"_index":946,"title":{},"body":{"classes/Move.html":{}}}],["src/app/model/arm",{"_index":168,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"coverage.html":{}}}],["src/app/model/base",{"_index":622,"title":{},"body":{"classes/BaseMove.html":{},"coverage.html":{}}}],["src/app/model/base.model.ts",{"_index":596,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["src/app/model/base.model.ts:10",{"_index":602,"title":{},"body":{"classes/Base.html":{}}}],["src/app/model/base.model.ts:14",{"_index":603,"title":{},"body":{"classes/Base.html":{}}}],["src/app/model/base.model.ts:18",{"_index":601,"title":{},"body":{"classes/Base.html":{}}}],["src/app/model/base.model.ts:33",{"_index":605,"title":{},"body":{"classes/Base.html":{}}}],["src/app/model/base.model.ts:40",{"_index":607,"title":{},"body":{"classes/Base.html":{}}}],["src/app/model/base.model.ts:47",{"_index":609,"title":{},"body":{"classes/Base.html":{}}}],["src/app/model/base.model.ts:54",{"_index":611,"title":{},"body":{"classes/Base.html":{}}}],["src/app/model/base.model.ts:61",{"_index":613,"title":{},"body":{"classes/Base.html":{}}}],["src/app/model/base.model.ts:68",{"_index":615,"title":{},"body":{"classes/Base.html":{}}}],["src/app/model/gripper",{"_index":821,"title":{},"body":{"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"coverage.html":{}}}],["src/app/model/new",{"_index":949,"title":{},"body":{"classes/NewMethod.html":{},"coverage.html":{}}}],["src/app/model/workflow",{"_index":1431,"title":{},"body":{"classes/WorkflowListElement.html":{},"coverage.html":{}}}],["src/app/model/workflow.model.ts",{"_index":1345,"title":{},"body":{"classes/Workflow.html":{},"coverage.html":{}}}],["src/app/model/workflow.model.ts:144",{"_index":1393,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:152",{"_index":1380,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:161",{"_index":1385,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:168",{"_index":1387,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:175",{"_index":1390,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:182",{"_index":1394,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:189",{"_index":1395,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:196",{"_index":1396,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:203",{"_index":1397,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:21",{"_index":1364,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:210",{"_index":1399,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:217",{"_index":1401,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:25",{"_index":1365,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:29",{"_index":1361,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:33",{"_index":1360,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:52",{"_index":1367,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:99",{"_index":1376,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/no",{"_index":957,"title":{},"body":{"components/NoPageFoundComponent.html":{},"coverage.html":{}}}],["src/app/sockets/websocket.service.ts",{"_index":965,"title":{},"body":{"classes/SocketDataService.html":{},"coverage.html":{}}}],["src/app/sockets/websocket.service.ts:10",{"_index":975,"title":{},"body":{"classes/SocketDataService.html":{}}}],["src/app/sockets/websocket.service.ts:14",{"_index":972,"title":{},"body":{"classes/SocketDataService.html":{}}}],["src/app/sockets/websocket.service.ts:25",{"_index":980,"title":{},"body":{"classes/SocketDataService.html":{}}}],["src/app/sockets/websocket.service.ts:32",{"_index":976,"title":{},"body":{"classes/SocketDataService.html":{}}}],["src/app/wizard",{"_index":990,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"coverage.html":{}}}],["src/app/workflow",{"_index":1440,"title":{},"body":{"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["stack",{"_index":1561,"title":{},"body":{"index.html":{}}}],["stands",{"_index":1562,"title":{},"body":{"index.html":{}}}],["started",{"_index":1547,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1506,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1225,"title":{},"body":{"components/WizardParentComponent.html":{},"index.html":{}}}],["status",{"_index":645,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{}}}],["statuslistener",{"_index":1281,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["statussub",{"_index":646,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["step",{"_index":1048,"title":{},"body":{"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["step/wizzard",{"_index":1661,"title":{},"body":{"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["stepacttimeout",{"_index":1003,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["stepper",{"_index":671,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["stepper's",{"_index":1260,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["stepper.next",{"_index":1248,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["stepper.reset",{"_index":1244,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["stepper.selected.completed",{"_index":1250,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["stepper.selectedindex",{"_index":1247,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["stepper.service",{"_index":409,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["stepper.service.ts",{"_index":1258,"title":{},"body":{"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"coverage.html":{}}}],["stepper.service.ts:104",{"_index":1300,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:110",{"_index":1310,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:116",{"_index":1298,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:123",{"_index":1313,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:131",{"_index":1303,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:138",{"_index":1302,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:145",{"_index":1315,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:153",{"_index":1305,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:16",{"_index":1274,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["stepper.service.ts:160",{"_index":1304,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:167",{"_index":1317,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:20",{"_index":1273,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["stepper.service.ts:22",{"_index":1321,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:24",{"_index":1275,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["stepper.service.ts:26",{"_index":1322,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:28",{"_index":1269,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["stepper.service.ts:30",{"_index":1328,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:34",{"_index":1329,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:38",{"_index":1272,"title":{},"body":{"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:42",{"_index":1324,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:44",{"_index":1270,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["stepper.service.ts:46",{"_index":1326,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:50",{"_index":1297,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:59",{"_index":1309,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:66",{"_index":1306,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:72",{"_index":1307,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:80",{"_index":1318,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:89",{"_index":1320,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:97",{"_index":1301,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper/wizard",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["stepper_global_options",{"_index":1197,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["steps",{"_index":1647,"title":{"additional-documentation/steps-adding-new-method.html":{}},"body":{"additional-documentation/steps-adding-new-method.html":{}}}],["storage",{"_index":362,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["store",{"_index":926,"title":{},"body":{"injectables/JobsService.html":{},"injectables/WizardStepperService.html":{}}}],["stored",{"_index":365,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["stores",{"_index":199,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["string",{"_index":212,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["structure",{"_index":1608,"title":{},"body":{"index.html":{}}}],["stussub",{"_index":737,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["style",{"_index":532,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["styleurls",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["subject",{"_index":894,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"injectables/WizardStepperService.html":{}}}],["subjects",{"_index":929,"title":{},"body":{"injectables/JobsService.html":{}}}],["submitted",{"_index":420,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["subsbackvar",{"_index":1265,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["subscribe((name",{"_index":1234,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["subscribe((response",{"_index":436,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["subscribe((workflowlist",{"_index":1479,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["subscribe(counter",{"_index":446,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["subscribe(data",{"_index":1159,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["subscribe(jobsupdated",{"_index":442,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["subscribe(workflow",{"_index":450,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["subscription",{"_index":368,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardParentStepperService.html":{},"components/WorkflowTableComponent.html":{}}}],["subscriptions",{"_index":334,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["subsnextvar",{"_index":1266,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["super('armcartesian",{"_index":226,"title":{},"body":{"classes/ArmCartesian.html":{}}}],["super('armjoint",{"_index":253,"title":{},"body":{"classes/ArmJoint.html":{}}}],["super('armtrajecory",{"_index":265,"title":{},"body":{"classes/ArmTrajectory.html":{}}}],["super('basemove",{"_index":627,"title":{},"body":{"classes/BaseMove.html":{}}}],["super('grippergrip",{"_index":824,"title":{},"body":{"classes/GripperGrip.html":{}}}],["super('gripperrelease",{"_index":827,"title":{},"body":{"classes/GripperRelease.html":{}}}],["super('newmethod",{"_index":956,"title":{},"body":{"classes/NewMethod.html":{}}}],["super(router",{"_index":758,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["super.ngoninit",{"_index":759,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["support",{"_index":1614,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1615,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":481,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["synchronized",{"_index":369,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{}}}],["table",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["table.component",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["table.component.css",{"_index":1447,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.html",{"_index":1448,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts",{"_index":1441,"title":{},"body":{"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:118",{"_index":1460,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:132",{"_index":1464,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:159",{"_index":1467,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:24",{"_index":1476,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:30",{"_index":1473,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:34",{"_index":1475,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:40",{"_index":1474,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:44",{"_index":1471,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:48",{"_index":1455,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:66",{"_index":1458,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:77",{"_index":1457,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:89",{"_index":1466,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table/workflow",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1526,"title":{},"body":{"coverage.html":{}}}],["teach",{"_index":1556,"title":{},"body":{"index.html":{}}}],["teaching",{"_index":1548,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["terminal",{"_index":1598,"title":{},"body":{"index.html":{}}}],["text",{"_index":558,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["therefore",{"_index":1631,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["this._activationtimeout",{"_index":617,"title":{},"body":{"classes/Base.html":{}}}],["this._created_at",{"_index":1405,"title":{},"body":{"classes/Workflow.html":{}}}],["this._goalpose",{"_index":231,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{}}}],["this._id",{"_index":616,"title":{},"body":{"classes/Base.html":{},"classes/Workflow.html":{}}}],["this._jobsobjects",{"_index":1407,"title":{},"body":{"classes/Workflow.html":{}}}],["this._jobsobjects.length",{"_index":1429,"title":{},"body":{"classes/Workflow.html":{}}}],["this._jobsobjects.push(new",{"_index":1409,"title":{},"body":{"classes/Workflow.html":{}}}],["this._jobsobjects[count",{"_index":1426,"title":{},"body":{"classes/Workflow.html":{}}}],["this._jobsobjects[count].name",{"_index":1428,"title":{},"body":{"classes/Workflow.html":{}}}],["this._jointvalues",{"_index":254,"title":{},"body":{"classes/ArmJoint.html":{}}}],["this._name",{"_index":618,"title":{},"body":{"classes/Base.html":{},"classes/Workflow.html":{}}}],["this._response",{"_index":939,"title":{},"body":{"injectables/JobsService.html":{}}}],["this._responselistener",{"_index":942,"title":{},"body":{"injectables/JobsService.html":{}}}],["this._responselistener.next([...this._response",{"_index":941,"title":{},"body":{"injectables/JobsService.html":{}}}],["this._timeout",{"_index":266,"title":{},"body":{"classes/ArmTrajectory.html":{}}}],["this.activationtimeout",{"_index":229,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["this.armcartesian",{"_index":1032,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["this.armcartesian.activationtimeout",{"_index":1035,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["this.armcartesian.goalpose",{"_index":1037,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["this.basemove",{"_index":1093,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["this.basemove.activationtimeout",{"_index":1094,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["this.basemove.goalpose",{"_index":1095,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["this.copiedjobs",{"_index":439,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.counter",{"_index":447,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{}}}],["this.counterlistener.asobservable",{"_index":1337,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.counterlistener.next",{"_index":1338,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.counterlistener.next(this.counter",{"_index":1339,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.countersub",{"_index":444,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["this.countersub.unsubscribe",{"_index":464,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["this.datasource",{"_index":1480,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.eventemitterservice.invokebackfunction",{"_index":1238,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["this.eventemitterservice.invokenextfunction",{"_index":1233,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["this.eventemitterservice.onstepperbackclick",{"_index":784,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardJobComponent.html":{}}}],["this.eventemitterservice.onsteppernextclick",{"_index":776,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.eventemitterservice.subsbackvar",{"_index":1237,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["this.eventemitterservice.subsbackvar.unsubscribe",{"_index":1242,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["this.eventemitterservice.subsnextvar",{"_index":1232,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["this.eventemitterservice.subsnextvar.unsubscribe",{"_index":1241,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["this.getavailablejobs",{"_index":472,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.goalpose",{"_index":1036,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["this.goback(this.stepper",{"_index":1239,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["this.goforward(this.stepper",{"_index":1235,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["this.grippergrip",{"_index":1116,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["this.grippergrip.activationtimeout",{"_index":1117,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["this.gripperrelease",{"_index":1136,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["this.gripperrelease.activationtimeout",{"_index":1137,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["this.hidespinner",{"_index":770,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.http.post('http://localhost:3000/createworkflow",{"_index":905,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.http.post('http://localhost:3000/deleteworkflow/deleteone",{"_index":916,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.http.post('http://localhost:3000/playworkflow",{"_index":906,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.http.post('http://localhost:3000/readworkflow/readall",{"_index":910,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.http.post('http://localhost:3000/readworkflow/readone",{"_index":918,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.http.post('http://localhost:3000/robotdataservice/getavailablejobs",{"_index":938,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.http.post('http://localhost:3000/robotdataservice/getbaseposition",{"_index":917,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.http.post('http://localhost:3000/saveworkflow",{"_index":899,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.http.post('http://localhost:3000/updateworkflow",{"_index":909,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.httprequest.createworkflow(this.workflow",{"_index":782,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.httprequest.deleteworkflow(id).subscribe((data",{"_index":1495,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.httprequest.getallworkflows",{"_index":1477,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.httprequest.getworkflow(id).subscribe((data",{"_index":1484,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.httprequest.getworkflowlistupdatelistener",{"_index":1478,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.httprequest.runworkflow",{"_index":775,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.httprequest.updateworkflow(this.workflow",{"_index":773,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.id",{"_index":227,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/Move.html":{},"classes/NewMethod.html":{}}}],["this.invokebackfunction.emit",{"_index":1277,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["this.invokenextfunction.emit",{"_index":1276,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["this.isalreadysave",{"_index":781,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.isdisablednext",{"_index":478,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["this.isdisabledrun",{"_index":780,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.jobs",{"_index":1341,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.jobservice.getjobsfromserver",{"_index":431,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.jobservice.responselistener",{"_index":435,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.jobssub",{"_index":440,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.jobssub.unsubscribe",{"_index":463,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.jobsupdated",{"_index":443,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.jobsupdated.asobservable",{"_index":1340,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.jobsupdated.length",{"_index":468,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.jobsupdated.next([...this.jobs",{"_index":1342,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.link",{"_index":480,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["this.name",{"_index":453,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.newmethod",{"_index":1188,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["this.newmethod.activationtimeout",{"_index":1189,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["this.newmethod.goalpose",{"_index":1190,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["this.reset(this.stepper",{"_index":1243,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["this.response",{"_index":437,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.responsesub",{"_index":434,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.router.navigate(['jobs",{"_index":1483,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.router.navigate([this.link",{"_index":470,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["this.selectedjob",{"_index":467,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.selectedjobs",{"_index":438,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.selectnextjob(this.workflow.getjobname(0",{"_index":469,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WorkflowTableComponent.html":{}}}],["this.selectnextjob(this.workflow.getjobname(this.counter",{"_index":785,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardJobComponent.html":{}}}],["this.setworkflowprogress(msg",{"_index":762,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.showspinner",{"_index":771,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.socket",{"_index":984,"title":{},"body":{"classes/SocketDataService.html":{}}}],["this.socket.emit('new",{"_index":986,"title":{},"body":{"classes/SocketDataService.html":{}}}],["this.socket.on('message",{"_index":988,"title":{},"body":{"classes/SocketDataService.html":{}}}],["this.socketdataservice.onnewmessage().subscribe(msg",{"_index":760,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.socketdataservice.sendmessage(this.workflow.name",{"_index":772,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.spinner.hide",{"_index":764,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.spinner.show",{"_index":763,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.spinnertext",{"_index":768,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.status",{"_index":1160,"title":{},"body":{"components/WizardJobComponent.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{}}}],["this.statuslistener.asobservable",{"_index":1343,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.statuslistener.next(this.status",{"_index":1344,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.statussub",{"_index":1157,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["this.statussub.unsubscribe",{"_index":1163,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["this.valueacttimeout",{"_index":1034,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["this.wizardstepperservice.getcounter",{"_index":457,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["this.wizardstepperservice.getcounterlistener",{"_index":445,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["this.wizardstepperservice.getjobs",{"_index":455,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.wizardstepperservice.getjobslistener",{"_index":441,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.wizardstepperservice.getstatus",{"_index":1162,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["this.wizardstepperservice.getstatuslistener",{"_index":1158,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["this.wizardstepperservice.getworkflow",{"_index":452,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["this.wizardstepperservice.getworkflowitem",{"_index":1033,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["this.wizardstepperservice.getworkflowlistener",{"_index":449,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["this.wizardstepperservice.updatecount(0",{"_index":1492,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.wizardstepperservice.updatecount(this.counter",{"_index":456,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.wizardstepperservice.updatejob(this.selectedjobs",{"_index":473,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.wizardstepperservice.updatestatus(this.status",{"_index":1481,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.wizardstepperservice.updateworkflow(this.workflow",{"_index":477,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WorkflowTableComponent.html":{}}}],["this.wizardstepperservice.updateworkflowitem(this.armcartesian",{"_index":1038,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["this.wizardstepperservice.updateworkflowitem(this.basemove",{"_index":1096,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["this.wizardstepperservice.updateworkflowitem(this.grippergrip",{"_index":1118,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["this.wizardstepperservice.updateworkflowitem(this.gripperrelease",{"_index":1138,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["this.wizardstepperservice.updateworkflowitem(this.newmethod",{"_index":1191,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["this.workflow",{"_index":451,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{}}}],["this.workflow.addjobs(this.jobsupdated",{"_index":476,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.workflow.addjobsformworkflow(workflow",{"_index":1491,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.workflow.created_at",{"_index":1486,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.workflow.getcurrentjob(this.counter",{"_index":1334,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.workflow.id",{"_index":904,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["this.workflow.id}).subscribe",{"_index":908,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.workflow.name",{"_index":454,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.workflow.updatejobs(item",{"_index":1336,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.workflowlist",{"_index":912,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["this.workflowlistener.asobservable",{"_index":1332,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.workflowlistener.next(this.workflow",{"_index":1335,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.workflowlistsub.asobservable",{"_index":915,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.workflowlistsub.next([...this.workflowlist",{"_index":913,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.workflowprogress",{"_index":765,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.workflowsub",{"_index":448,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["this.workflowsub.unsubscribe",{"_index":465,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["through",{"_index":367,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["thumblabel",{"_index":1049,"title":{},"body":{"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{}}}],["thumblabelacttimeout",{"_index":1004,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["time",{"_index":1373,"title":{},"body":{"classes/Workflow.html":{}}}],["timeout",{"_index":259,"title":{},"body":{"classes/ArmTrajectory.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["timeout(value",{"_index":267,"title":{},"body":{"classes/ArmTrajectory.html":{}}}],["titel",{"_index":1026,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["title",{"_index":1005,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["tool",{"_index":1573,"title":{},"body":{"index.html":{}}}],["top",{"_index":522,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["top:20px",{"_index":803,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["touched",{"_index":419,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["trajectory",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["trajectory.component",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["trajectory.component.css",{"_index":1061,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.html",{"_index":1062,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.ts",{"_index":1059,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{},"coverage.html":{}}}],["trajectory.component.ts:16",{"_index":1070,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.ts:20",{"_index":1064,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.ts:24",{"_index":1065,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.ts:28",{"_index":1066,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.ts:32",{"_index":1067,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.ts:36",{"_index":1068,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.ts:40",{"_index":1069,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.ts:44",{"_index":1071,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.ts:48",{"_index":1063,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.model",{"_index":1402,"title":{},"body":{"classes/Workflow.html":{}}}],["trajectory.model.ts",{"_index":257,"title":{},"body":{"classes/ArmTrajectory.html":{},"coverage.html":{}}}],["trajectory.model.ts:11",{"_index":260,"title":{},"body":{"classes/ArmTrajectory.html":{}}}],["trajectory.model.ts:25",{"_index":262,"title":{},"body":{"classes/ArmTrajectory.html":{}}}],["trajectory.model.ts:32",{"_index":264,"title":{},"body":{"classes/ArmTrajectory.html":{}}}],["trajectory/wizard",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WizardArmTrajectoryComponent.html":{},"coverage.html":{}}}],["transferarrayitem",{"_index":403,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["transform",{"_index":590,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["transition",{"_index":589,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["true",{"_index":371,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["ts",{"_index":432,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["tsconfig.json",{"_index":1602,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":755,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["tutorial",{"_index":1582,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["two",{"_index":1658,"title":{},"body":{"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["type",{"_index":195,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["typeof",{"_index":233,"title":{},"body":{"classes/ArmCartesian.html":{},"components/AvailableJobsComponent.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{}}}],["typysript",{"_index":1652,"title":{},"body":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["und",{"_index":697,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["undefined",{"_index":234,"title":{},"body":{"classes/ArmCartesian.html":{},"components/AvailableJobsComponent.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{}}}],["under",{"_index":359,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{},"index.html":{}}}],["understand",{"_index":1593,"title":{},"body":{"index.html":{}}}],["unsubscribes",{"_index":333,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["update",{"_index":783,"title":{"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}},"body":{"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["updatecount",{"_index":1293,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["updatecount(counter",{"_index":1312,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["updated",{"_index":680,"title":{},"body":{"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/Workflow.html":{},"index.html":{}}}],["updatejob",{"_index":1294,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["updatejob(jobs",{"_index":1314,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["updatejobs",{"_index":1358,"title":{},"body":{"classes/Workflow.html":{}}}],["updatejobs(jobs",{"_index":1392,"title":{},"body":{"classes/Workflow.html":{}}}],["updates",{"_index":712,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"classes/Workflow.html":{}}}],["updatestatus",{"_index":1295,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["updatestatus(status",{"_index":1316,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["updateworkflow",{"_index":857,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/WizardStepperService.html":{}}}],["updateworkflow(workflow",{"_index":886,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/WizardStepperService.html":{}}}],["updateworkflowitem",{"_index":1296,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["updateworkflowitem(item",{"_index":1319,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["updating",{"_index":635,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["url",{"_index":968,"title":{},"body":{"classes/SocketDataService.html":{}}}],["use",{"_index":1214,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["used",{"_index":194,"title":{},"body":{"classes/ArmCartesian.html":{},"components/AvailableJobsComponent.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"index.html":{}}}],["used.compodoc",{"_index":1572,"title":{},"body":{"index.html":{}}}],["user",{"_index":1550,"title":{},"body":{"index.html":{}}}],["users",{"_index":1442,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["usevalue",{"_index":1198,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["using",{"_index":1640,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["validate/check",{"_index":391,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["validators",{"_index":413,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardParentComponent.html":{}}}],["validators.required",{"_index":389,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["value",{"_index":221,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["valueacttimeout",{"_index":1006,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["values",{"_index":193,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["variable",{"_index":387,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WorkflowTableComponent.html":{}}}],["variables",{"_index":332,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["vertical",{"_index":520,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["verticalacttimeout",{"_index":1007,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["via",{"_index":694,"title":{},"body":{"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["view",{"_index":271,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["viewchild",{"_index":1227,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["viewchild('stepper",{"_index":1224,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["viewing",{"_index":967,"title":{},"body":{"classes/SocketDataService.html":{}}}],["void",{"_index":223,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["want",{"_index":1599,"title":{},"body":{"index.html":{}}}],["way",{"_index":1627,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["web",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"classes/SocketDataService.html":{},"index.html":{}}}],["websocket",{"_index":687,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/SocketDataService.html":{}}}],["wf",{"_index":1462,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["wf_id",{"_index":907,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["white",{"_index":529,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["width",{"_index":511,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["within",{"_index":1649,"title":{},"body":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["wizard",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"index.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["wizard/run",{"_index":1497,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["wizardarmcartesiancomponent",{"_index":52,"title":{"components/WizardArmCartesianComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardarmjoinscomponent",{"_index":56,"title":{"components/WizardArmJoinsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardarmtrajectorycomponent",{"_index":58,"title":{"components/WizardArmTrajectoryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardbasecomponent",{"_index":61,"title":{"components/WizardBaseComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardgrippergripcomponent",{"_index":63,"title":{"components/WizardGripperGripComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardgripperreleasecomponent",{"_index":66,"title":{"components/WizardGripperReleaseComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardjobcomponent",{"_index":68,"title":{"components/WizardJobComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardjobcomponent:108",{"_index":715,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:129",{"_index":709,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:139",{"_index":718,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:21",{"_index":729,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:25",{"_index":738,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:29",{"_index":739,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:35",{"_index":727,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:39",{"_index":728,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:46",{"_index":730,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:50",{"_index":736,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:67",{"_index":710,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:92",{"_index":711,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardnewmethodcomponent",{"_index":70,"title":{"components/WizardNewMethodComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["wizardparentcomponent",{"_index":73,"title":{"components/WizardParentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardparentstepperservice",{"_index":663,"title":{"injectables/WizardParentStepperService.html":{}},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"coverage.html":{}}}],["wizardstepperservice",{"_index":96,"title":{"injectables/WizardStepperService.html":{}},"body":{"modules/AppModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizzard",{"_index":1660,"title":{},"body":{"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["worflow",{"_index":1655,"title":{},"body":{"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}}}],["worflowlistsub",{"_index":881,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["worflowprogess",{"_index":706,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["workflow",{"_index":76,"title":{"classes/Workflow.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}}}],["workflow(data._name",{"_index":1485,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["workflow(this.name",{"_index":475,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["workflow.id",{"_index":788,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["workflow.name",{"_index":787,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["workflow.name}}workflow",{"_index":820,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["workflowlist",{"_index":846,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["workflowlistelement",{"_index":889,"title":{"classes/WorkflowListElement.html":{}},"body":{"injectables/HttpRequestService.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["workflowlistener",{"_index":1282,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["workflowlistsub",{"_index":847,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["workflowlsit",{"_index":1308,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["workflowprogress",{"_index":644,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["workflows",{"_index":869,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{},"index.html":{}}}],["workflows_table",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["workflowsub",{"_index":300,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["workflowtablecomponent",{"_index":75,"title":{"components/WorkflowTableComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["workflow}).subscribe",{"_index":901,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["workflwo",{"_index":1278,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["worklow",{"_index":1348,"title":{},"body":{"classes/Workflow.html":{},"classes/WorkflowListElement.html":{}}}],["works",{"_index":1166,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["worktable",{"_index":1437,"title":{},"body":{"classes/WorkflowListElement.html":{}}}],["wurde",{"_index":461,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardParentComponent.html":{}}}],["zone.js",{"_index":1545,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        root component\nbootstrap —the root component that Angular creates and inserts into the index.html host web page\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n/**\n * root component\n * bootstrap —the root component that Angular creates and inserts into the index.html host web page\n */\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n\n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAvailableJobsComponent\n\nAvailableJobsComponent\n\nAppModule -->\n\nAvailableJobsComponent->AppModule\n\n\n\n\n\nExecutionRunComponent\n\nExecutionRunComponent\n\nAppModule -->\n\nExecutionRunComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nNoPageFoundComponent\n\nNoPageFoundComponent\n\nAppModule -->\n\nNoPageFoundComponent->AppModule\n\n\n\n\n\nWizardArmCartesianComponent\n\nWizardArmCartesianComponent\n\nAppModule -->\n\nWizardArmCartesianComponent->AppModule\n\n\n\n\n\nWizardArmJoinsComponent\n\nWizardArmJoinsComponent\n\nAppModule -->\n\nWizardArmJoinsComponent->AppModule\n\n\n\n\n\nWizardArmTrajectoryComponent\n\nWizardArmTrajectoryComponent\n\nAppModule -->\n\nWizardArmTrajectoryComponent->AppModule\n\n\n\n\n\nWizardBaseComponent\n\nWizardBaseComponent\n\nAppModule -->\n\nWizardBaseComponent->AppModule\n\n\n\n\n\nWizardGripperGripComponent\n\nWizardGripperGripComponent\n\nAppModule -->\n\nWizardGripperGripComponent->AppModule\n\n\n\n\n\nWizardGripperReleaseComponent\n\nWizardGripperReleaseComponent\n\nAppModule -->\n\nWizardGripperReleaseComponent->AppModule\n\n\n\n\n\nWizardJobComponent\n\nWizardJobComponent\n\nAppModule -->\n\nWizardJobComponent->AppModule\n\n\n\n\n\nWizardNewMethodComponent\n\nWizardNewMethodComponent\n\nAppModule -->\n\nWizardNewMethodComponent->AppModule\n\n\n\n\n\nWizardParentComponent\n\nWizardParentComponent\n\nAppModule -->\n\nWizardParentComponent->AppModule\n\n\n\n\n\nWorkflowTableComponent\n\nWorkflowTableComponent\n\nAppModule -->\n\nWorkflowTableComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWizardStepperService\n\nWizardStepperService\n\nAppModule -->\n\nWizardStepperService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AvailableJobsComponent\n                        \n                        \n                            ExecutionRunComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NoPageFoundComponent\n                        \n                        \n                            WizardArmCartesianComponent\n                        \n                        \n                            WizardArmJoinsComponent\n                        \n                        \n                            WizardArmTrajectoryComponent\n                        \n                        \n                            WizardBaseComponent\n                        \n                        \n                            WizardGripperGripComponent\n                        \n                        \n                            WizardGripperReleaseComponent\n                        \n                        \n                            WizardJobComponent\n                        \n                        \n                            WizardNewMethodComponent\n                        \n                        \n                            WizardParentComponent\n                        \n                        \n                            WorkflowTableComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            WizardStepperService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'; // \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AvailableJobsComponent } from '../jobs/available-jobs/available-jobs.component';\nimport { NoPageFoundComponent } from '../no-page-found/no-page-found.component';\nimport { WizardParentComponent } from '../wizard-stepper/wizard-parent/wizard-parent.component';\nimport { WizardGripperGripComponent } from '../wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component';\nimport {WizardGripperReleaseComponent} from '../wizard-stepper/wizard-gripper-release/wizard-gripper-release.component';\nimport {WizardArmTrajectoryComponent} from '../wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component';\nimport {WizardArmJoinsComponent} from '../wizard-stepper/wizard-arm-joins/wizard-arm-joins.component';\nimport {WizardArmCartesianComponent} from '../wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component';\nimport {WizardBaseComponent} from '../wizard-stepper/wizard-base/wizard-base.component';\nimport {ExecutionRunComponent} from '../execution/execution-run/execution-run.component';\nimport {WorkflowTableComponent} from '../workflow-table/workflow-table.component';\n/**\n * you must import new method component\n */\nimport {WizardNewMethodComponent} from '../wizard-stepper/wizard-new-method/wizard-new-method.component';\n/**\n * you must add the path \"new_method\" and connnect to component \"WizardNewMethodComponent\"\n */\nconst routes: Routes = [\n  {path: 'workflows_table', component: WorkflowTableComponent},\n  {path: '', redirectTo: '/workflows_table', pathMatch: 'full'},\n  {path: 'jobs', component: AvailableJobsComponent},\n  {path: 'wizard', component: WizardParentComponent,\n    children: [{\n        path: 'new_method_path',\n        component: WizardNewMethodComponent\n      },\n      {\n        path: 'gripper_grip',\n        component: WizardGripperGripComponent\n      },\n      {\n        path: 'gripper_release',\n        component: WizardGripperReleaseComponent\n      },\n      {\n        path: 'arm_trajectory',\n        component: WizardArmTrajectoryComponent\n      },\n      {\n        path: 'arm_joints',\n        component: WizardArmJoinsComponent\n      },\n      {\n        path: 'arm_cartesian',\n        component: WizardArmCartesianComponent\n      },\n      {\n        path: 'base',\n        component: WizardBaseComponent\n      },\n      {\n        path: 'run',\n        component: ExecutionRunComponent\n      }\n    ]\n  },\n  {path: '**', component: NoPageFoundComponent}\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArmCartesian.html":{"url":"classes/ArmCartesian.html","title":"class - ArmCartesian","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArmCartesian\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/arm-cartesian.model.ts\n        \n\n            \n                Description\n            \n            \n                This class/model extends Base\nIt contains all parameters and methods for ArmCartesian\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _goalPose\n                            \n                            \n                                    Private\n                                _activationTimeout\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    goalPose\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/arm-cartesian.model.ts:11\n                            \n                        \n\n                \n                    \n                            constructor calls constructor of Base\nif id and activationTimout is not passed, default values are used.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _goalPose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/arm-cartesian.model.ts:11\n                            \n                        \n\n                \n                    \n                        to stores cartesian coordinates\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activationTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:18\n\n                            \n                        \n\n                \n                    \n                        according to API each method/job has activationTimeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:10\n\n                            \n                        \n\n                \n                    \n                        id will be sent from backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:14\n\n                            \n                        \n\n                \n                    \n                        name of method/job\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        goalPose\n                    \n                \n\n                \n                    \n                        getgoalPose()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/arm-cartesian.model.ts:38\n                                \n                            \n                    \n                        \n                                Getter for _goalPose\n\n\n                                \n                                \n                                \n                                    Returns :     number[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setgoalPose(value: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/arm-cartesian.model.ts:31\n                                \n                            \n                    \n                        \n                                Setter for _goalPose\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Set cartesian coordinates\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Base} from './base.model';\n/**\n * This class/model extends Base\n *\n * It contains all parameters and methods for ArmCartesian\n */\nexport class ArmCartesian extends Base {\n  /**\n   * to stores cartesian coordinates\n   */\n  private _goalPose: number [];\n  /**\n   * constructor calls constructor of Base\n   *\n   * if id and activationTimout is not passed, default values are used.\n   * @param {any} data\n   */\n  constructor(data: any) {\n    super('ArmCartesian');\n    this.id = data._id;\n    this.activationTimeout = data._activationTimeout;\n    this._goalPose = data._goalPose;\n    this.id = (typeof this.id === 'undefined') ? 0 : this.id ;\n    this.activationTimeout = (typeof this.activationTimeout === 'undefined') ? 50 : this.activationTimeout;\n    console.log(this._goalPose);\n  }\n  /**\n   * Setter for _goalPose\n   * @param {number} value Set cartesian coordinates\n   */\n  set goalPose(value: number[]) {\n    this._goalPose = value;\n  }\n  /**\n   * Getter for _goalPose\n   * @returns The _goalPose\n   */\n  get goalPose(): number[] {\n    return this._goalPose;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArmJoint.html":{"url":"classes/ArmJoint.html","title":"class - ArmJoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArmJoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/arm-joint.model.ts\n        \n\n            \n                Description\n            \n            \n                This class/model extends Base\nThis class has to be adjusted - mistakes in provided API\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _jointValues\n                            \n                            \n                                    Private\n                                _activationTimeout\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    jointValues\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/model/arm-joint.model.ts:11\n                            \n                        \n\n                \n                    \n                            constructor calls constructor of Base\ndefault constructor has to be adjusted\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _jointValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/arm-joint.model.ts:11\n                            \n                        \n\n                \n                    \n                        to stores _jointVales according to API\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activationTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:18\n\n                            \n                        \n\n                \n                    \n                        according to API each method/job has activationTimeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:10\n\n                            \n                        \n\n                \n                    \n                        id will be sent from backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:14\n\n                            \n                        \n\n                \n                    \n                        name of method/job\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        jointValues\n                    \n                \n\n                \n                    \n                        getjointValues()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/arm-joint.model.ts:25\n                                \n                            \n                    \n                        \n                                Getter for _jointValues\n\n\n                                \n                                \n                                \n                                    Returns :     number[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setjointValues(value: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/arm-joint.model.ts:32\n                                \n                            \n                    \n                        \n                                Setter for _jointValues\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Set _jointValues\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Base} from './base.model';\n/**\n * This class/model extends Base\n *\n * This class has to be adjusted - mistakes in provided API\n */\nexport class ArmJoint extends Base {\n  /**\n   * to stores _jointVales according to API\n   */\n  private _jointValues: number[];\n  /**\n   * constructor calls constructor of Base\n   *\n   * default constructor has to be adjusted\n   */\n  constructor() {\n    super('ArmJoint');\n    this._jointValues = [0, 0, 0, 0];\n  }\n  /**\n   * Getter for _jointValues\n   * @returns The _jointValues\n   */\n  get jointValues(): number[] {\n    return this._jointValues;\n  }\n  /**\n   * Setter for _jointValues\n   * @param {number} value Set _jointValues\n   */\n  set jointValues(value: number[]) {\n    this._jointValues = value;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArmTrajectory.html":{"url":"classes/ArmTrajectory.html","title":"class - ArmTrajectory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArmTrajectory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/arm-trajectory.model.ts\n        \n\n            \n                Description\n            \n            \n                This class/model extends Base\nThis class has to be adjusted - mistakes in provided API\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _timeout\n                            \n                            \n                                    Private\n                                _activationTimeout\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/model/arm-trajectory.model.ts:11\n                            \n                        \n\n                \n                    \n                            constructor calls constructor of Base\ndefault constructor has to be adjusted\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/arm-trajectory.model.ts:11\n                            \n                        \n\n                \n                    \n                        to stores _timeout according to API\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activationTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:18\n\n                            \n                        \n\n                \n                    \n                        according to API each method/job has activationTimeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:10\n\n                            \n                        \n\n                \n                    \n                        id will be sent from backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:14\n\n                            \n                        \n\n                \n                    \n                        name of method/job\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/arm-trajectory.model.ts:25\n                                \n                            \n                    \n                        \n                                Getter for _timeout\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        settimeout(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/arm-trajectory.model.ts:32\n                                \n                            \n                    \n                        \n                                Setter for _timeout\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Set _timeout\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Base} from './base.model';\n/**\n * This class/model extends Base\n *\n * This class has to be adjusted - mistakes in provided API\n */\nexport class ArmTrajectory extends Base {\n  /**\n   * to stores _timeout according to API\n   */\n  private _timeout: number;\n  /**\n   * constructor calls constructor of Base\n   *\n   * default constructor has to be adjusted\n   */\n  constructor() {\n    super('ArmTrajecory');\n    this._timeout = 0;\n  }\n  /**\n   * Getter for _timeout\n   * @returns The _timeout\n   */\n  get timeout(): number {\n    return this._timeout;\n  }\n  /**\n   * Setter for _timeout\n   * @param {number} value Set _timeout\n   */\n  set timeout(value: number) {\n    this._timeout = value;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AvailableJobsComponent.html":{"url":"components/AvailableJobsComponent.html","title":"component - AvailableJobsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AvailableJobsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/jobs/available-jobs/available-jobs.component.ts\n\n\n    \n        Description\n    \n    \n        This component provides the view for drag&drop the choosen methods (jobs).\nThe order of the single jobs (methods) can be defined and a name for the workflow has to be entered.\nFor drag and drop Angular Material CDK https://material.angular.io/cdk/drag-drop/overview was used.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-available-jobs\n            \n\n            \n                styleUrls\n                ./available-jobs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./available-jobs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                copiedJobs\n                            \n                            \n                                counter\n                            \n                            \n                                counterSub\n                            \n                            \n                                isDisabledNext\n                            \n                            \n                                    Private\n                                jobsSub\n                            \n                            \n                                jobsUpdated\n                            \n                            \n                                link\n                            \n                            \n                                matcher\n                            \n                            \n                                name\n                            \n                            \n                                nameFormControl\n                            \n                            \n                                    Private\n                                response\n                            \n                            \n                                    Private\n                                responseSub\n                            \n                            \n                                selectedJob\n                            \n                            \n                                selectedJobs\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                getAvailableJobs\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onResetClick\n                            \n                            \n                                onSaveClick\n                            \n                            \n                                onSelect\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jobService: JobsService, router: Router, wizardStepperService: WizardStepperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/jobs/available-jobs/available-jobs.component.ts:109\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jobService\n                                                  \n                                                        \n                                                                        JobsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For redirecting\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Workflow Information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drop\n                        \n                        \n                    \n                \n            \n            \n                \ndrop(event: CdkDragDrop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:277\n                \n            \n\n\n            \n                \n                    Drag&Drop from Angular Material https://material.angular.io/cdk/drag-drop/overview\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CdkDragDrop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAvailableJobs\n                        \n                        \n                    \n                \n            \n            \n                \ngetAvailableJobs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:183\n                \n            \n\n\n            \n                \n                    requests available Jobs from backend\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:165\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nresets variables and unsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:125\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:200\n                \n            \n\n\n            \n                \n                    refreshes available Jobs from backend\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:189\n                \n            \n\n\n            \n                \n                    choose 1st job in workflow list and redirects to this job (job configurator)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onResetClick\n                        \n                        \n                    \n                \n            \n            \n                \nonResetClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:206\n                \n            \n\n\n            \n                \n                    resets selected jobs\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSaveClick\n                        \n                        \n                    \n                \n            \n            \n                \nonSaveClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:214\n                \n            \n\n\n            \n                \n                    stores selected list of jobs in wizardStepperService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect(job: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:177\n                \n            \n\n\n            \n                \n                    stores selected jobe name for Drag&Drop\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Jobname of of selected job\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:229\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copiedJobs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:69\n                            \n                        \n\n                \n                    \n                        used for interim storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:105\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:109\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabledNext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:56\n                            \n                        \n\n                \n                    \n                        used in view to enable and disable Next button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            jobsSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:95\n                            \n                        \n\n                \n                    \n                        Subscription for observed jobsSub -> synchronized and shared list of jobs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jobsUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:91\n                            \n                        \n\n                \n                    \n                        locally stored list of jobs -> for drag&drop in view\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:99\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MyErrorStateMatcher()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:48\n                            \n                        \n\n                \n                    \n                        used in view to handel error if name of workflow is not entered\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:52\n                            \n                        \n\n                \n                    \n                        in this variable name of workflow is stored\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl('', [\n    Validators.required,\n  ])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:42\n                            \n                        \n\n                \n                    \n                        used in view to validate/check if name of workflow is entered\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            response\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:75\n                            \n                        \n\n                \n                    \n                        locally stored response\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            responseSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Subscription\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:79\n                            \n                        \n\n                \n                    \n                        Subscription for observed responseSub -> synchronized and shared response\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedJob\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:60\n                            \n                        \n\n                \n                    \n                        used in view for one selected job - Drag&Drop\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedJobs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:65\n                            \n                        \n\n                \n                    \n                        used in view for table on the right - selected jobs list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:83\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:87\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit, OnDestroy, SimpleChange} from '@angular/core';\nimport { JobsService} from '../jobs.service';\nimport {CdkDragDrop, moveItemInArray, transferArrayItem, copyArrayItem} from '@angular/cdk/drag-drop';\nimport {Move} from '../move.data';\nimport {Subscription} from 'rxjs';\nimport {Router} from '@angular/router';\nimport { WizardStepperService} from '../../wizard-stepper/wizard-stepper.service';\nimport {Workflow} from '../../model/workflow.model';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material';\n\n/**\n * Error when invalid control is dirty, touched, or submitted.\n */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  /**\n   * constructor\n   * @param {FormControl} control\n   * @param {FormGroupDirective} form\n   * @returns True if it is an error\n   */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n/**\n * This component provides the view for drag&drop the choosen methods (jobs).\n * The order of the single jobs (methods) can be defined and a name for the workflow has to be entered.\n *\n * For drag and drop Angular Material CDK {@link https://material.angular.io/cdk/drag-drop/overview} was used.\n */\n@Component({\n  selector: 'app-available-jobs',\n  templateUrl: './available-jobs.component.html',\n  styleUrls: ['./available-jobs.component.css']\n})\nexport class AvailableJobsComponent implements OnInit, OnDestroy {\n  /**\n   * used in view to validate/check if name of workflow is entered\n   */\n  nameFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  /**\n   * used in view to handel error if name of workflow is not entered\n   */\n  matcher = new MyErrorStateMatcher();\n  /**\n   * in this variable name of workflow is stored\n   */\n  name = '';\n  /**\n   * used in view to enable and disable Next button\n   */\n  isDisabledNext = true;\n  /**\n   * used in view for one selected job - Drag&Drop\n   */\n  selectedJob: any;\n\n  /**\n   * used in view for table on the right - selected jobs list\n   */\n  selectedJobs: string[];\n  /**\n   * used for interim storage\n   */\n  copiedJobs: string[];\n\n  // jobs: string[] = [];\n  /**\n   * locally stored response\n   */\n  private response: string[];\n  /**\n   * Subscription for observed responseSub -> synchronized and shared response\n   */\n  private responseSub = Subscription;\n  /**\n   * locally stored workflow\n   */\n  workflow: Workflow;\n  /**\n   * Subscription for observed workflowSub -> synchronized and shared workflow\n   */\n  private workflowSub: Subscription;\n  /**\n   * locally stored list of jobs -> for drag&drop in view\n   */\n  jobsUpdated: string[] = [];\n  /**\n   * Subscription for observed jobsSub -> synchronized and shared list of jobs\n   */\n  private jobsSub: Subscription;\n  /**\n   * string used for routing/redirecting\n   */\n  link = 'wizard/';\n  /**\n   * locally stored counter\n   *\n   * index for navigating through wizard\n   */\n  counter: number;\n  /**\n   * Subscription for counterSub -> synchronized and shared counter\n   */\n  counterSub: Subscription;\n  /**\n   * constructor\n   * @param {JobsService} jobService\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   */\n  constructor(private jobService: JobsService,\n              private router: Router,\n              private wizardStepperService: WizardStepperService) { }\n  /**\n   * ngOnInit is a lifecycle hook\n   * - executed after constructor\n   *\n   * declaration of all necessary variables for this component\n   */\n  ngOnInit() {\n    this.jobService.getJobsFromServer();\n    // @ts-ignore\n    this.responseSub = this.jobService.responseListener\n      .subscribe((response: string[]) => {\n      this.response = response;\n    });\n    this.selectedJobs = [];\n    this.copiedJobs = [...this.selectedJobs];\n\n    this.jobsSub = this.wizardStepperService.getJobsListener()\n      .subscribe(jobsUpdated => {\n        this.jobsUpdated = jobsUpdated;\n      });\n\n    this.counterSub = this.wizardStepperService.getCounterListener()\n      .subscribe(counter => {\n        this.counter = counter;\n      });\n    this.workflowSub = this.wizardStepperService.getWorkflowListener()\n      .subscribe(workflow => {\n        this.workflow = workflow;\n      });\n\n    this.workflow = this.wizardStepperService.getWorkflow();\n    this.name = typeof this.workflow === 'undefined' ? '' : this.workflow.name;\n    this.jobsUpdated = this.wizardStepperService.getJobs();\n    this.selectedJobs = this.wizardStepperService.getJobs();\n    this.wizardStepperService.updateCount(this.counter = 0);\n    this.counter = this.wizardStepperService.getCounter();\n\n    console.log(this.workflow);\n    console.log(this.counter);\n    console.log('OnInit wurde ausgeführt');\n  }\n  /**\n   * ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\n   *\n   * resets variables and unsubscribes Subscriptions\n   */\n  ngOnDestroy() {\n    this.selectedJobs = [];\n    this.copiedJobs = [...this.selectedJobs];\n    this.jobsSub.unsubscribe();\n    this.counterSub.unsubscribe();\n    this.workflowSub.unsubscribe();\n    console.log('OnDestroy wurde ausgeführt');\n  }\n  /**\n   * stores selected jobe name for Drag&Drop\n   * @param {any} job Jobname of of selected job\n   */\n  onSelect(job: any): void {\n    this.selectedJob = job;\n  }\n  /**\n   * requests available Jobs from backend\n   */\n  getAvailableJobs(): void {\n    this.jobService.getJobsFromServer();\n  }\n  /**\n   * choose 1st job in workflow list and redirects to this job (job configurator)\n   */\n  onNextClick(): void {\n    if (this.jobsUpdated.length > 0) {\n      this.selectNextJob(this.workflow.getJobName(0));\n      this.router.navigate([this.link]);\n    } else {\n      alert('no jobs selected');\n    }\n  }\n  /**\n   * refreshes available Jobs from backend\n   */\n  onClick() {\n    this.getAvailableJobs();\n  }\n  /**\n   * resets selected jobs\n   */\n  onResetClick() {\n    this.selectedJobs = [];\n    this.wizardStepperService.updateJob(this.selectedJobs);\n    console.log(this.jobsUpdated);\n  }\n  /**\n   * stores selected list of jobs in wizardStepperService\n   */\n  onSaveClick() {\n    if (this.jobsUpdated.length > 0) {\n      this.workflow = new Workflow(this.name);\n      this.workflow.addJobs(this.jobsUpdated);\n      this.wizardStepperService.updateWorkflow(this.workflow);\n      this.isDisabledNext = false;\n      console.log(this.workflow);\n    } else {\n      alert('no jobs selected');\n    }\n  }\n  /**\n   * stores 1st job's routing-link under link\n   * @param {string} job Name of 1st job in selected workflow\n   */\n  selectNextJob(job: string) {\n    this.link = 'wizard/';\n    switch (job) {\n        /**\n         * enter new case for 'NewMethod' with 'new_method_path\n         */\n        case 'NewMethod': {\n          this.link += 'new_method_path';\n          break;\n        }\n        case 'GripperGrip': {\n          this.link += 'gripper_grip';\n          break;\n        }\n        case 'MoveArmOnTrajectory': {\n          this.link += 'arm_trajectory';\n          break;\n        }\n        case 'CustomWorkflow': {\n          this.link += 'arm_trajectory';\n          break;\n        }\n        case 'MoveArmJointsWorkflow': {\n          this.link += 'arm_joints';\n          break;\n        }\n        case 'BaseMove': {\n          this.link += 'base';\n          break;\n        }\n        case 'ArmCartesian': {\n          this.link += 'arm_cartesian';\n          break;\n        }\n        case 'GripperRelease': {\n          this.link += 'gripper_release';\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    console.log(this.link);\n  }\n  /**\n   * Drag&Drop from Angular Material {@link https://material.angular.io/cdk/drag-drop/overview}\n   * @param {CdkDragDrop} event\n   */\n  drop(event: CdkDragDrop) {\n    if (event.previousContainer.id === event.container.id) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      copyArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex);\n      this.getAvailableJobs();\n    }\n    this.wizardStepperService.updateJob(this.selectedJobs);\n    console.log(this.jobsUpdated.length);\n    console.log(this.counter);\n  }\n}\n\n    \n\n    \n        \n\n\n  Available Methods\n    \n      refresh\n    \n  \n\n\n\n\n  \n\n    \n\n      {{i}}{{move}}\n    \n\n  \n\n\n\n\n  \n    Selected Methods\n  \n\n  \n    \n      \n        \n        Enter Name\n        \n          Name is required\n        \n      \n    \n\n    \n    \n\n      \n        {{i}} {{move}}\n      \n    \n\n  \n  \n    \n      \n        delete\n      \n      \n        done\n      \n      \n      \n        navigate_next\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./available-jobs.component.css\n                \n                /* AvailableJobsComponent's private CSS styles */\n.example-container {\n  width: 300px;\n  max-width: 100%;\n  margin: 10px 10px 10px 10px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 1rem;\n}\n\n\n.selected {\n  background-color: #CFD8DC !important;\n  color: white;\n}\n.robotmethods {\n  margin: 0 0 2em 0;\n  list-style-type: none;\n  padding: 5px;\n  width: 18em;\n  border: 1px solid #EEE;\n}\n.robotmethods li {\n  cursor: pointer;\n  position: relative;\n  left: 0;\n  background-color: #EEE;\n  margin: .5em;\n  padding: .3em 0;\n  height: 1.8em;\n  border-radius: 4px;\n}\n.robotmethods li.selected:hover {\n  background-color: #BBD8DC !important;\n  color: white;\n}\n.robotmethods li:hover {\n  color: #607D8B;\n  background-color: #DDD;\n  left: .1em;\n}\n.robotmethods .text {\n  position: relative;\n  top: -3px;\n}\n.robotmethods .badge {\n  display: inline-block;\n  font-size: small;\n  color: white;\n  padding: 0.8em 0.7em 0 0.7em;\n  background-color:#405061;\n  line-height: 1em;\n  position: relative;\n  left: -1px;\n  top: -4px;\n  height: 1.8em;\n  margin-right: .8em;\n  border-radius: 4px 0 0 4px;\n}\n\n.cdk-drag-preview {\n  box-sizing: border-box;\n  border-radius: 4px;\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),\n  0 8px 10px 1px rgba(0, 0, 0, 0.14),\n  0 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.cdk-drag-placeholder {\n  background: #607D8B;\n  padding: 20px;\n  text-indent: -9999px;\n  opacity: 0;\n}\n\n/* Animate an item that has been dropped. */\n.cdk-drag-animating {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n.example-button-row button {\n  margin-right: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Available Methods          refresh                  {{i}}{{move}}            Selected Methods                              Enter Name                  Name is required                                        {{i}} {{move}}                                delete                    done                          navigate_next            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AvailableJobsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/base.model.ts\n        \n\n            \n                Description\n            \n            \n                This class/model is the abstract parent class of all Job models\nIt contains the parameters each method has a least\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _activationTimeout\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    activationTimeout\n                                \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/base.model.ts:18\n                            \n                        \n\n                \n                    \n                            constructor with default values for _id and _activationTimeout\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The name of the method\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activationTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/base.model.ts:18\n                            \n                        \n\n                \n                    \n                        according to API each method/job has activationTimeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/base.model.ts:10\n                            \n                        \n\n                \n                    \n                        id will be sent from backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/base.model.ts:14\n                            \n                        \n\n                \n                    \n                        name of method/job\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/base.model.ts:33\n                                \n                            \n                    \n                        \n                                Getter for _id\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setid(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/base.model.ts:40\n                                \n                            \n                    \n                        \n                                Setter for _id\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Set ID\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        activationTimeout\n                    \n                \n\n                \n                    \n                        getactivationTimeout()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/base.model.ts:47\n                                \n                            \n                    \n                        \n                                Getter for _activationTimeout\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setactivationTimeout(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/base.model.ts:54\n                                \n                            \n                    \n                        \n                                Setter for _activationTimeout\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Set _activationTimeout\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/base.model.ts:61\n                                \n                            \n                    \n                        \n                                Getter for _name\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/base.model.ts:68\n                                \n                            \n                    \n                        \n                                Setter for _name\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Set _name\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        export abstract class Base {\n  /**\n   * id will be sent from backend\n   */\n  private _id: number;\n  /**\n   * name of method/job\n   */\n  private _name: string;\n  /**\n   * according to API each method/job has activationTimeout\n   */\n  private _activationTimeout: number;\n\n  /**\n   * constructor with default values for _id and _activationTimeout\n   * @param {string} name The name of the method\n   */\n  constructor(name: string) {\n    this._id = 0;\n    this._activationTimeout = 50;\n    this._name = name;\n  }\n  /**\n   * Getter for _id\n   * @returns The _id\n   */\n  get id(): number {\n    return this._id;\n  }\n  /**\n   * Setter for _id\n   * @param {number} value Set ID\n   */\n  set id(value: number) {\n    this._id = value;\n  }\n  /**\n   * Getter for _activationTimeout\n   * @returns The _activationTimeout\n   */\n  get activationTimeout(): number {\n    return this._activationTimeout;\n  }\n  /**\n   * Setter for _activationTimeout\n   * @param {number} value Set _activationTimeout\n   */\n  set activationTimeout(value: number) {\n    this._activationTimeout = value;\n  }\n  /**\n   * Getter for _name\n   * @returns The _name\n   */\n  get name(): string {\n    return this._name;\n  }\n  /**\n   * Setter for _name\n   * @param {number} value Set _name\n   */\n  set name(value: string) {\n    this._name = value;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMove.html":{"url":"classes/BaseMove.html","title":"class - BaseMove","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMove\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/base-move.model.ts\n        \n\n            \n                Description\n            \n            \n                This class/model extends Base\nIt contains all parameters and methods for BaseMove\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _goalPose\n                            \n                            \n                                    Private\n                                _activationTimeout\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    goalPose\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/base-move.model.ts:11\n                            \n                        \n\n                \n                    \n                            constructor calls constructor of Base\nif id and activationTimout is not passed, default values are used.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _goalPose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/base-move.model.ts:11\n                            \n                        \n\n                \n                    \n                        to stores cartesian coordinates\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activationTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:18\n\n                            \n                        \n\n                \n                    \n                        according to API each method/job has activationTimeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:10\n\n                            \n                        \n\n                \n                    \n                        id will be sent from backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:14\n\n                            \n                        \n\n                \n                    \n                        name of method/job\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        goalPose\n                    \n                \n\n                \n                    \n                        getgoalPose()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/base-move.model.ts:38\n                                \n                            \n                    \n                        \n                                Getter for _goalPose\n\n\n                                \n                                \n                                \n                                    Returns :     number[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setgoalPose(value: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/base-move.model.ts:31\n                                \n                            \n                    \n                        \n                                Setter for _goalPose\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Set cartesian coordinates\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Base} from './base.model';\n/**\n * This class/model extends Base\n *\n * It contains all parameters and methods for BaseMove\n */\nexport class BaseMove extends Base {\n  /**\n   * to stores cartesian coordinates\n   */\n  private _goalPose: number [];\n  /**\n   * constructor calls constructor of Base\n   *\n   * if id and activationTimout is not passed, default values are used.\n   * @param {any} data\n   */\n  constructor(data: any) {\n    super('BaseMove');\n    this.id = data._id;\n    this.activationTimeout = data._activationTimeout;\n    this._goalPose = data._goalPose;\n    this.id = (typeof this.id === 'undefined') ? 0 : this.id ;\n    this.activationTimeout = (typeof this.activationTimeout === 'undefined') ? 50 : this.activationTimeout;\n    console.log(this._goalPose);\n  }\n  /**\n   * Setter for _goalPose\n   * @param {number} value Set cartesian coordinates\n   */\n  set goalPose(value: number[]) {\n    this._goalPose = value;\n  }\n  /**\n   * Getter for _goalPose\n   * @returns The _goalPose\n   */\n  get goalPose(): number[] {\n    return this._goalPose;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExecutionRunComponent.html":{"url":"components/ExecutionRunComponent.html","title":"component - ExecutionRunComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ExecutionRunComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/execution/execution-run/execution-run.component.ts\n\n\n    \n        Description\n    \n    \n        This component shows the configurated workflow and list all containing jobs.\nIt communicates with backend for saving, updating, and executing the workflow\n\n    \n\n    \n        Extends\n    \n    \n                WizardJobComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-execution-run\n            \n\n            \n                styleUrls\n                ./execution-run.component.css\n            \n\n\n\n            \n                templateUrl\n                ./execution-run.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displaySpinner\n                            \n                            \n                                isAlreadySave\n                            \n                            \n                                isDisabledRun\n                            \n                            \n                                message\n                            \n                            \n                                spinnerText\n                            \n                            \n                                workflowProgress\n                            \n                            \n                                counter\n                            \n                            \n                                    Private\n                                counterSub\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                    Private\n                                statusSub\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backCreateOnClick\n                            \n                            \n                                backRunOnClick\n                            \n                            \n                                backUpdateOnClick\n                            \n                            \n                                hideSpinner\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                runOnClick\n                            \n                            \n                                saveCreateOnClick\n                            \n                            \n                                saveUpdateOnClick\n                            \n                            \n                                setWorkflowProgress\n                            \n                            \n                                showSpinner\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onPreviousClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, http: HttpClient, httpRequest: HttpRequestService, eventEmitterService: WizardParentStepperService, SocketDataService: SocketDataService, spinner: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/execution/execution-run/execution-run.component.ts:49\n                            \n                        \n\n                \n                    \n                            constructor - calls constructor of parent WizardJobComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For redirecting\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Workflow Information\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        httpRequest\n                                                  \n                                                        \n                                                                        HttpRequestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For getting actual position from robot arm\n\n                                                        \n                                                \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Angular Material Stepper View\n\n                                                        \n                                                \n                                                \n                                                        SocketDataService\n                                                  \n                                                        \n                                                                        SocketDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For getting actual progress from backend\n\n                                                        \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Progress Spinner\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            backCreateOnClick\n                        \n                        \n                    \n                \n            \n            \n                \nbackCreateOnClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:161\n                \n            \n\n\n            \n                \n                    When 1st creation and clicked on Back button.\nredirects accordingly and reset counter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            backRunOnClick\n                        \n                        \n                    \n                \n            \n            \n                \nbackRunOnClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:183\n                \n            \n\n\n            \n                \n                    When executing Workflow and clicked on Back button.\nredirects accordingly and reset counter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            backUpdateOnClick\n                        \n                        \n                    \n                \n            \n            \n                \nbackUpdateOnClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:172\n                \n            \n\n\n            \n                \n                    When updated Workflow and clicked on Back button.\nredirects accordingly and reset counter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideSpinner\n                        \n                        \n                    \n                \n            \n            \n                \nhideSpinner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:94\n                \n            \n\n\n            \n                \n                    hides spinner in view\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:78\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook - executed after constructor\noverrides parent ngOninit() declares additional necessary variables for this component (WebSocket for Spinner)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runOnClick\n                        \n                        \n                    \n                \n            \n            \n                \nrunOnClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:115\n                \n            \n\n\n            \n                \n                    When clicked on Play button.\nActivates spinner,\ncommunicates with backend -> send execution request and\nask for progress via socket\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveCreateOnClick\n                        \n                        \n                    \n                \n            \n            \n                \nsaveCreateOnClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:132\n                \n            \n\n\n            \n                \n                    When 1st creation und clicked on Save button.\nCommunicates with backend -> send workflow to be saved and\nreceives workflow ID from backend\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveUpdateOnClick\n                        \n                        \n                    \n                \n            \n            \n                \nsaveUpdateOnClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:146\n                \n            \n\n\n            \n                \n                    When already stored Workflow and clicked on Save button.\nCommunicates with backend -> send workflow to be updated and\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setWorkflowProgress\n                        \n                        \n                    \n                \n            \n            \n                \nsetWorkflowProgress(msg)\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:101\n                \n            \n\n\n            \n                \n                    Sets worflowProgess for spinner\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSpinner\n                        \n                        \n                    \n                \n            \n            \n                \nshowSpinner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:88\n                \n            \n\n\n            \n                \n                    activates spinner in view\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:129\n\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nunsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:67\n\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:92\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:108\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Oberservables\nbefore redirects to \"previous\" wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:139\n\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displaySpinner\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/execution-run/execution-run.component.ts:45\n                            \n                        \n\n                \n                    \n                        status for spinner\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAlreadySave\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/execution-run/execution-run.component.ts:35\n                            \n                        \n\n                \n                    \n                        status if already saved in backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabledRun\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/execution-run/execution-run.component.ts:31\n                            \n                        \n\n                \n                    \n                        before workflow ist not saved run button not displayed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/execution-run/execution-run.component.ts:49\n                            \n                        \n\n                \n                    \n                        massage for websocket\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spinnerText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/execution-run/execution-run.component.ts:41\n                            \n                        \n\n                \n                    \n                        displayed text of spinner\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflowProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/execution-run/execution-run.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:35\n\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:39\n\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:21\n\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:46\n\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:50\n\n                            \n                        \n\n                \n                    \n                        Subscription for stusSub -> synchronized and shared status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:25\n\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:29\n\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\n// import {JobsService} from '../../jobs/jobs.service';\nimport {Router} from '@angular/router';\nimport {WizardStepperService} from '../../wizard-stepper/wizard-stepper.service';\nimport {WizardJobComponent} from '../../wizard-stepper/wizard-job/wizard-job.component';\n// import {Workflow} from '../../model/workflow.model';\n// import {Subscription} from 'rxjs';\nimport {HttpRequestService} from '../http-request.service';\nimport {HttpClient} from '@angular/common/http';\n// import {Output, EventEmitter} from '@angular/core';\nimport {WizardParentStepperService} from '../../wizard-stepper/wizard-parent/wizard-parent-stepper.service';\n// import {createElementCssSelector} from '@angular/compiler';\nimport {SocketDataService} from '../../sockets/websocket.service';\nimport {NgxSpinnerService} from 'ngx-spinner';\n\n/**\n * This component shows the configurated workflow and list all containing jobs.\n *\n * It communicates with backend for saving, updating, and executing the workflow\n */\n@Component({\n  selector: 'app-execution-run',\n  templateUrl: './execution-run.component.html',\n  styleUrls: ['./execution-run.component.css']\n})\nexport class ExecutionRunComponent extends WizardJobComponent implements OnInit, OnDestroy {\n\n  /**\n   * before workflow ist not saved run button not displayed\n   */\n  isDisabledRun = true;\n  /**\n   * status if already saved in backend\n   */\n  isAlreadySave = false;\n  // isLoading = false;\n  workflowProgress = 0;\n  /**\n   * displayed text of spinner\n   */\n  spinnerText: string;\n  /**\n   * status for spinner\n   */\n  displaySpinner = false;\n  /**\n   * massage for websocket\n   */\n  message: string;\n  // messages: string[] = [];\n  // connection;\n\n  /**\n   * constructor - calls constructor of parent WizardJobComponent\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   * @param {HttpRequestService} httpRequest For getting actual position from robot arm\n   * @param {WizardParentStepperService} eventEmitterService For Sharing Angular Material Stepper View\n   * @param {SocketDataService} SocketDataService For getting actual progress from backend\n   * @param {NgxSpinnerService} spinner For Progress Spinner\n   */\n  constructor(protected router: Router,\n              protected wizardStepperService: WizardStepperService,\n              private http: HttpClient,\n              private httpRequest: HttpRequestService,\n              protected eventEmitterService: WizardParentStepperService,\n              // tslint:disable-next-line:no-shadowed-variable\n              private SocketDataService: SocketDataService,\n              private spinner: NgxSpinnerService\n  ) {\n    super(router, wizardStepperService, eventEmitterService);\n  }\n  /**\n   * ngOnInit is a lifecycle hook - executed after constructor\n   *\n   * overrides parent ngOninit() declares additional necessary variables for this component (WebSocket for Spinner)\n   */\n  ngOnInit() {\n    super.ngOnInit();\n    this.SocketDataService.onNewMessage().subscribe(msg => {\n      console.log('Workflow Progress: ' + msg);\n      this.setWorkflowProgress(msg);\n    });\n  }\n  /**\n   * activates spinner in view\n   */\n  showSpinner() {\n    this.spinner.show();\n  }\n  /**\n   * hides spinner in view\n   */\n  hideSpinner(){\n    this.spinner.hide();\n  }\n  /**\n   * Sets worflowProgess for spinner\n   * @param {any} msg\n   */\n  setWorkflowProgress(msg) {\n    this.workflowProgress = parseInt(msg, 10);\n    this.spinnerText = 'Executing Workflow! Finished: ' + this.workflowProgress +' %';\n    if (this.workflowProgress === 100) {\n      this.hideSpinner();\n      this.workflowProgress = 0;\n    }\n  }\n  /**\n   * When clicked on Play button.\n   * Activates spinner,\n   * communicates with backend -> send execution request and\n   * ask for progress via socket\n   */\n  runOnClick() {\n    this.showSpinner();\n    this.spinnerText = 'Executing Workflow! Finished: 0%';\n    this.SocketDataService.sendMessage(this.workflow.name);\n    this.httpRequest.updateWorkflow(this.workflow);\n    setTimeout(() => {\n      this.httpRequest.runWorkflow();\n      this.eventEmitterService.onStepperNextClick();\n      console.log('Next wurde ausgeführt');\n      console.log('Hello from setTimeout');\n    }, 5000);\n  }\n  /**\n   * When 1st creation und clicked on Save button.\n   * Communicates with backend -> send workflow to be saved and\n   * receives workflow ID from backend\n   */\n  saveCreateOnClick() {\n    this.eventEmitterService.onStepperNextClick();\n    this.isDisabledRun = false;\n    if (this.isAlreadySave === false) {\n      this.httpRequest.createWorkflow(this.workflow);\n      this.isAlreadySave = true;\n    } else {\n    }\n    console.log('Next Create wurde ausgeführt');\n  }\n  /**\n   * When already stored Workflow and clicked on Save button.\n   * Communicates with backend -> send workflow to be updated and\n   */\n  saveUpdateOnClick() {\n    this.eventEmitterService.onStepperNextClick();\n    this.isDisabledRun = false;\n    if (this.isAlreadySave === false) {\n      this.httpRequest.updateWorkflow(this.workflow);\n      this.isAlreadySave = true;\n    } else {\n    }\n    console.log('Next Update wurde ausgeführt');\n  }\n  /**\n   * When 1st creation and clicked on Back button.\n   *\n   * redirects accordingly and reset counter\n   */\n  backCreateOnClick() {\n    this.eventEmitterService.onStepperBackClick();\n    this.selectNextJob(this.workflow.getJobName(this.counter));\n    this.router.navigate([this.link]);\n    console.log('Back Create wurde ausgeführt');\n  }\n  /**\n   * When updated Workflow and clicked on Back button.\n   *\n   * redirects accordingly and reset counter\n   */\n  backUpdateOnClick() {\n    this.eventEmitterService.onStepperBackClick();\n    this.selectNextJob(this.workflow.getJobName(this.counter));\n    this.router.navigate([this.link]);\n    console.log('Back Update wurde ausgeführt');\n  }\n  /**\n   * When executing Workflow and clicked on Back button.\n   *\n   * redirects accordingly and reset counter\n   */\n  backRunOnClick() {\n    this.link = '';\n    this.router.navigate([this.link]);\n  }\n}\n\n    \n\n    \n        Workflow Name: {{workflow.name}}\nWorkflow ID: {{workflow.id}}\n\n  \n\n    \n      \n        {{job.name}}\n      \n      \n        Show Parameters\n      \n    \n    \n      Activation Timeout:\n      \n    \n     Goal Position:\n      \n      {{job.goalPose}}\n     Goal Position:\n      \n      {{job.goalPose}}\n\n  \n\n\n\n\n  \n    \n      navigate_before\n    \n    \n    \n      done\n    \n    \n      play_circle_outline\n    \n  \n\n  \n    \n      navigate_before\n    \n    \n    \n      save\n    \n    \n      play_circle_outline\n    \n  \n\n  \n    \n      navigate_before\n    \n    \n    \n      play_circle_outline\n    \n  \n\n\n\n   {{spinnerText}}\n\n\n\n\n    \n\n    \n                \n                    ./execution-run.component.css\n                \n                .example-container {\n  width: 600px;\n  max-width: 100%;\n  margin: 10px 10px 10px 10px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 1rem;\n}\n\nh1, h2, h3, h4, h5, h6{\n  margin-top:20px;\n  margin-bottom:10px;\n  margin-left: 10px;\n}\n\n.selected {\n  background-color: #CFD8DC !important;\n  color: white;\n}\n.robotmethods {\n  margin: 0 0 2em 0;\n  list-style-type: none;\n  padding: 5px;\n  width: 18em;\n  /*border: 1px solid #EEE;*/\n}\n.robotmethods li {\n  cursor: pointer;\n  position: relative;\n  left: 0;\n  background-color: #EEE;\n  margin: .5em;\n  padding: .3em 0;\n  height: 1.8em;\n  border-radius: 4px;\n}\n\n.robotmethods .text {\n  position: relative;\n  top: -3px;\n}\n.robotmethods .badge {\n  display: inline-block;\n  font-size: small;\n  color: white;\n  padding: 0.8em 0.7em 0 0.7em;\n  background-color:#405061;\n  line-height: 1em;\n  position: relative;\n  left: -1px;\n  top: -4px;\n  height: 1.8em;\n  margin-right: .8em;\n  border-radius: 4px 0 0 4px;\n}\n\n.example-h2 {\n  margin: 10px;\n}\n\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n\n.example-margin {\n  margin: 30px;\n}\n\n.mat-slider-horizontal {\n  width: 100px;\n}\n\n.fxFlex{\n  flex: 100 1 auto;\n}\n\n.spinnerStyle{\n\n  width: 40%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Workflow Name: {{workflow.name}}Workflow ID: {{workflow.id}}                    {{job.name}}                    Show Parameters                    Activation Timeout:               Goal Position:            {{job.goalPose}}     Goal Position:            {{job.goalPose}}              navigate_before                  done              play_circle_outline                  navigate_before                  save              play_circle_outline                  navigate_before                  play_circle_outline         {{spinnerText}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExecutionRunComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GripperGrip.html":{"url":"classes/GripperGrip.html","title":"class - GripperGrip","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GripperGrip\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/gripper-grip.model.ts\n        \n\n            \n                Description\n            \n            \n                This class/model extends Base\nIt contains all parameters and methods for GripperGrip\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _activationTimeout\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/gripper-grip.model.ts:7\n                            \n                        \n\n                \n                    \n                            constructor calls constructor of Base\nif id and activationTimout is not passed, default values are used.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activationTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:18\n\n                            \n                        \n\n                \n                    \n                        according to API each method/job has activationTimeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:10\n\n                            \n                        \n\n                \n                    \n                        id will be sent from backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:14\n\n                            \n                        \n\n                \n                    \n                        name of method/job\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Base} from './base.model';\n/**\n * This class/model extends Base\n *\n * It contains all parameters and methods for GripperGrip\n */\nexport class GripperGrip extends Base {\n  /**\n   * constructor calls constructor of Base\n   *\n   * if id and activationTimout is not passed, default values are used.\n   * @param {any} data\n   */\n  constructor(data: any) {\n    super('GripperGrip');\n    this.id = data._id;\n    this.activationTimeout = data._activationTimeout;\n    this.id = (typeof this.id === 'undefined') ? 0 : this.id ;\n    this.activationTimeout = (typeof this.activationTimeout === 'undefined') ? 50 : this.activationTimeout;\n  }\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GripperRelease.html":{"url":"classes/GripperRelease.html","title":"class - GripperRelease","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GripperRelease\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/gripper-release.model.ts\n        \n\n            \n                Description\n            \n            \n                This class/model extends Base\nIt contains all parameters and methods for GripperRelease\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _activationTimeout\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/gripper-release.model.ts:7\n                            \n                        \n\n                \n                    \n                            constructor calls constructor of Base\nif id and activationTimout is not passed, default values are used.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activationTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:18\n\n                            \n                        \n\n                \n                    \n                        according to API each method/job has activationTimeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:10\n\n                            \n                        \n\n                \n                    \n                        id will be sent from backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:14\n\n                            \n                        \n\n                \n                    \n                        name of method/job\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Base} from './base.model';\n/**\n * This class/model extends Base\n *\n * It contains all parameters and methods for GripperRelease\n */\nexport class GripperRelease extends Base {\n  /**\n   * constructor calls constructor of Base\n   *\n   * if id and activationTimout is not passed, default values are used.\n   * @param {any} data\n   */\n  constructor(data: any) {\n    super('GripperRelease');\n    this.id = data._id;\n    this.activationTimeout = data._activationTimeout;\n    this.id = (typeof this.id === 'undefined') ? 0 : this.id ;\n    this.activationTimeout = (typeof this.activationTimeout === 'undefined') ? 50 : this.activationTimeout;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Header component\ndisplays \"home\" icon button\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:14\n                            \n                        \n\n                \n                    \n                            default constructor\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:25\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\nexecuted after constructor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Header component\n * displays \"home\" icon button\n */\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\n\nexport class HeaderComponent implements OnInit {\n\n  /**\n   * default constructor\n   */\n  constructor() { }\n\n  /**\n   * ngOnInit is a lifecycle hook\n   * executed after constructor\n   */\n  ngOnInit() { }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n         home \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     home             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpRequestService.html":{"url":"injectables/HttpRequestService.html","title":"injectable - HttpRequestService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpRequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/execution/http-request.service.ts\n        \n\n            \n                Description\n            \n            \n                this service provides the communication with backend.\nThe communication for all CRUD (CREATE, READ, UPDATE, DELETE) + Execute(Run) operations are provided.\nThe communication with backend is via HTTP\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                workflow\n                            \n                            \n                                workflowList\n                            \n                            \n                                    Private\n                                workflowListSub\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createWorkflow\n                            \n                            \n                                deleteWorkflow\n                            \n                            \n                                getAllWorkflows\n                            \n                            \n                                getArmPosition\n                            \n                            \n                                getBasePosition\n                            \n                            \n                                getWorkflow\n                            \n                            \n                                getWorkflowListUpdateListener\n                            \n                            \n                                runWorkflow\n                            \n                            \n                                saveWorkflow\n                            \n                            \n                                updateWorkflow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, wizardStepperService: WizardStepperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/execution/http-request.service.ts:32\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for for communication with backend\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for sharing workflow information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createWorkflow\n                        \n                        \n                    \n                \n            \n            \n                \ncreateWorkflow(workflow: Workflow)\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:62\n                \n            \n\n\n            \n                \n                    Sends workflow to backend to be stored persistently – (Backend - CREATE workflow in DB)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workflow\n                                    \n                                                Workflow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteWorkflow\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteWorkflow(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:116\n                \n            \n\n\n            \n                \n                    Sends workflow id to backend to be deleted – (Backend - DELETE workflow in DB)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID of workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllWorkflows\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllWorkflows()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:96\n                \n            \n\n\n            \n                \n                    Requests all workflow saved in backend – (Backend - READ all workflow in DB)\nStores response (all workflows) in workflowList locally resp. workflowListSub to share\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getArmPosition\n                        \n                        \n                    \n                \n            \n            \n                \ngetArmPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:123\n                \n            \n\n\n            \n                \n                    Requests current arm position from backend\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The requested arm position\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBasePosition\n                        \n                        \n                    \n                \n            \n            \n                \ngetBasePosition()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:130\n                \n            \n\n\n            \n                \n                    Requests current base position from backend\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The requested base position\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWorkflow\n                        \n                        \n                    \n                \n            \n            \n                \ngetWorkflow(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:138\n                \n            \n\n\n            \n                \n                    Requests the workflow belonging to id from backend\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID from workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The requested workflow\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWorkflowListUpdateListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetWorkflowListUpdateListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:109\n                \n            \n\n\n            \n                \n                    Getter for oberservable worflowListSub\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The worflowListSub\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runWorkflow\n                        \n                        \n                    \n                \n            \n            \n                \nrunWorkflow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:74\n                \n            \n\n\n            \n                \n                    Sends workflow to backend to be executed physically\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveWorkflow\n                        \n                        \n                    \n                \n            \n            \n                \nsaveWorkflow(workflow: Workflow)\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:50\n                \n            \n\n\n            \n                \n                    Sends workflow to backend to be updated – (Backend - UPDATE workflow in DB)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workflow\n                                    \n                                                Workflow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateWorkflow\n                        \n                        \n                    \n                \n            \n            \n                \nupdateWorkflow(workflow: Workflow)\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:84\n                \n            \n\n\n            \n                \n                    Sends workflow to backend to be updated – (Backend - UPDATE workflow in DB)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workflow\n                                    \n                                                Workflow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Sends workflow to backend to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/http-request.service.ts:28\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflowList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WorkflowListElement[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/http-request.service.ts:20\n                            \n                        \n\n                \n                    \n                        local array of all Workflows presented in Workflow table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowListSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/http-request.service.ts:24\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowListSub -> synchronized and shared WorkflowListElement Array\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/http-request.service.ts:32\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Workflow} from '../model/workflow.model';\nimport {WizardStepperService} from '../wizard-stepper/wizard-stepper.service';\nimport {Subscription} from 'rxjs';\nimport {Subject} from 'rxjs';\nimport {WorkflowListElement} from '../model/workflow-list-element.model';\n/**\n * this service provides the communication with backend.\n * The communication for all CRUD (CREATE, READ, UPDATE, DELETE) + Execute(Run) operations are provided.\n * The communication with backend is via HTTP\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpRequestService {\n  /**\n   * local array of all Workflows presented in Workflow table\n   */\n  workflowList: WorkflowListElement[] = [];\n  /**\n   * Subscription for observed workflowListSub -> synchronized and shared WorkflowListElement Array\n   */\n  private workflowListSub = new Subject();\n  /**\n   * locally stored workflow\n   */\n  workflow: Workflow;\n  /**\n   * Subscription for observed workflowSub -> synchronized and shared workflow\n   */\n  private workflowSub: Subscription;\n  /**\n   * constructor\n   * @param {HttpClient} http Service for for communication with backend\n   * @param {WizardStepperService} wizardStepperService Service for sharing workflow information\n   */\n  constructor(private http: HttpClient,\n              private wizardStepperService: WizardStepperService) {\n    this.workflowSub = this.wizardStepperService.getWorkflowListener()\n      .subscribe(workflow => {\n        this.workflow = workflow;\n      });\n    this.workflow = this.wizardStepperService.getWorkflow();\n  }\n  /**\n   * Sends workflow to backend to be updated – (Backend - UPDATE workflow in DB)\n   * @param {Workflow} workflow\n   */\n  saveWorkflow(workflow: Workflow) {\n    this.http.post('http://localhost:3000/saveWorkflow', {jsondata: workflow}).subscribe(\n      (responseData) => {\n        console.log(responseData);\n        this.workflow.id = responseData + '';\n        this.wizardStepperService.updateWorkflow(this.workflow);\n      });\n  }\n  /**\n   * Sends workflow to backend to be stored persistently – (Backend - CREATE workflow in DB)\n   * @param {Workflow} workflow\n   */\n  createWorkflow(workflow: Workflow) {\n    this.http.post('http://localhost:3000/createWorkflow', {jsondata: workflow}).subscribe(\n      (responseData) => {\n        console.log(responseData);\n        this.workflow.id = responseData + '';\n        this.wizardStepperService.updateWorkflow(this.workflow);\n      });\n  }\n  /**\n   * Sends workflow to backend to be executed physically\n   * @param {Workflow} workflow\n   */\n  runWorkflow() {\n    this.http.post('http://localhost:3000/playWorkflow', {wf_id: this.workflow.id}).subscribe(\n      (responseData) => {\n        console.log(responseData);\n      });\n  }\n  /**\n   * Sends workflow to backend to be updated – (Backend - UPDATE workflow in DB)\n   * @param {Workflow} workflow Sends workflow to backend to be updated\n   */\n  updateWorkflow(workflow: Workflow) {\n    console.log(this.workflow);\n    this.http.post('http://localhost:3000/updateWorkflow', {jsondata: workflow}).subscribe(\n      (responseData) => {\n        console.log(responseData);\n      });\n  }\n  /**\n   * Requests all workflow saved in backend – (Backend - READ all workflow in DB)\n   *\n   * Stores response (all workflows) in workflowList locally resp. workflowListSub to share\n   */\n  getAllWorkflows() {\n    this.http.post('http://localhost:3000/readWorkflow/readAll', null).subscribe(\n      (responseData) => {\n        this.workflowList = responseData;\n        this.workflowListSub.next([...this.workflowList]);\n        console.log(responseData);\n        console.log(this.workflowList);\n      });\n  }\n  /**\n   * Getter for oberservable worflowListSub\n   * @returns The worflowListSub\n   */\n  getWorkflowListUpdateListener() {\n    return this.workflowListSub.asObservable();\n  }\n  /**\n   * Sends workflow id to backend to be deleted – (Backend - DELETE workflow in DB)\n   * @param {number} id ID of workflow\n   */\n  deleteWorkflow(id: number) {\n    return this.http.post('http://localhost:3000/deleteWorkflow/deleteOne', {wf_id: id});\n  }\n  /**\n   * Requests current arm position from backend\n   * @returns The requested arm position\n   */\n  getArmPosition() {\n    return this.http.post('http://localhost:3000/RobotDataService/getBasePosition', null);\n  }\n  /**\n   * Requests current base position from backend\n   * @returns The requested base position\n   */\n  getBasePosition() {\n    return this.http.post('http://localhost:3000/RobotDataService/getBasePosition', null);\n  }\n  /**\n   * Requests the workflow belonging to id from backend\n   * @param {number} id ID from workflow\n   * @returns The requested workflow\n   */\n  getWorkflow(id: number) {\n    return this.http.post('http://localhost:3000/readWorkflow/readOne', {wf_id: id});\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/jobs/jobs.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is only used in available-jobs component.\nRequests available jobs (methods) from backend and\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _response\n                            \n                            \n                                    Private\n                                _responseListener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getJobsFromServer\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    responseListener\n                                \n                                \n                                    response\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/jobs/jobs.service.ts:21\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for for communication with backend\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getJobsFromServer\n                        \n                        \n                    \n                \n            \n            \n                \ngetJobsFromServer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/jobs.service.ts:32\n                \n            \n\n\n            \n                \n                    requests available jobs (methods) from backend and store them locally and observable\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The list of available jobs (methods)\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _response\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/jobs.service.ts:16\n                            \n                        \n\n                \n                    \n                        locally stored response from backend in array\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _responseListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/jobs.service.ts:21\n                            \n                        \n\n                \n                    \n                        Subjects are both observer and observable.\nhere to share the response between components\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        responseListener\n                    \n                \n\n                \n                    \n                        getresponseListener()\n                    \n                \n                            \n                                \n                                    Defined in src/app/jobs/jobs.service.ts:44\n                                \n                            \n                    \n                        \n                                Getter for responseListener\n\n\n                                \n                                \n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        response\n                    \n                \n\n                \n                    \n                        getresponse()\n                    \n                \n                            \n                                \n                                    Defined in src/app/jobs/jobs.service.ts:51\n                                \n                            \n                    \n                        \n                                Getter for response\n\n\n                                \n                                \n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Subject} from 'rxjs';\n/**\n * This service is only used in available-jobs component.\n *\n * Requests available jobs (methods) from backend and\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobsService {\n  /**\n   * locally stored response from backend in array\n   */\n  private _response: string[];\n  /**\n   * Subjects are both observer and observable.\n   * here to share the response between components\n   */\n  private _responseListener = new Subject();\n  /**\n   * constructor\n   * @param {HttpClient} http Service for for communication with backend\n   */\n  constructor(private http: HttpClient) {\n  }\n  /**\n   * requests available jobs (methods) from backend and store them locally and observable\n   * @returns The list of available jobs (methods)\n   */\n  getJobsFromServer() {\n    return this.http.post('http://localhost:3000/RobotDataService/getAvailableJobs', null).subscribe(\n      (responseData) => {\n        this._response = responseData.workflows;\n        this._responseListener.next([...this._response]);\n        console.log(responseData);\n      });\n  }\n  /**\n   * Getter for responseListener\n   * @returns The responseListener - list of available jobs\n   */\n  get responseListener(): Subject {\n    return this._responseListener;\n  }\n  /**\n   * Getter for response\n   * @returns The response - list of available jobs\n   */\n  get response(): string[] {\n    return this._response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Move.html":{"url":"classes/Move.html","title":"class - Move","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Move\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/jobs/move.data.ts\n        \n\n            \n                Description\n            \n            \n                This class is only used for\nDrag&Drop from Angular Material https://material.angular.io/cdk/drag-drop/overview\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, workflow: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/jobs/move.data.ts:13\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID\n\n                                                        \n                                                \n                                                \n                                                        workflow\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The displayed name of Methods\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/move.data.ts:9\n                            \n                        \n\n                \n                    \n                        id -> index 1 to number of methods\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/move.data.ts:13\n                            \n                        \n\n                \n                    \n                        name of displayed methods for Drag&Drop\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Move {\n  /**\n   * id -> index 1 to number of methods\n   */\n  id: number;\n  /**\n   * name of displayed methods for Drag&Drop\n   */\n  name: string;\n  /**\n   * constructor\n   * @param {number} id ID\n   * @param {any} workflow The displayed name of Methods\n   */\n  constructor(id: number, workflow: any) {\n    this.id = id;\n    this.name = workflow;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyErrorStateMatcher.html":{"url":"classes/MyErrorStateMatcher.html","title":"class - MyErrorStateMatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyErrorStateMatcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/jobs/available-jobs/available-jobs.component.ts\n        \n\n            \n                Description\n            \n            \n                Error when invalid control is dirty, touched, or submitted.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ErrorStateMatcher\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isErrorState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isErrorState\n                        \n                        \n                    \n                \n            \n            \n                \nisErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:22\n                \n            \n\n\n            \n                \n                    constructor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                            FormGroupDirective | NgForm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if it is an error\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Component, OnInit, OnDestroy, SimpleChange} from '@angular/core';\nimport { JobsService} from '../jobs.service';\nimport {CdkDragDrop, moveItemInArray, transferArrayItem, copyArrayItem} from '@angular/cdk/drag-drop';\nimport {Move} from '../move.data';\nimport {Subscription} from 'rxjs';\nimport {Router} from '@angular/router';\nimport { WizardStepperService} from '../../wizard-stepper/wizard-stepper.service';\nimport {Workflow} from '../../model/workflow.model';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material';\n\n/**\n * Error when invalid control is dirty, touched, or submitted.\n */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  /**\n   * constructor\n   * @param {FormControl} control\n   * @param {FormGroupDirective} form\n   * @returns True if it is an error\n   */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n/**\n * This component provides the view for drag&drop the choosen methods (jobs).\n * The order of the single jobs (methods) can be defined and a name for the workflow has to be entered.\n *\n * For drag and drop Angular Material CDK {@link https://material.angular.io/cdk/drag-drop/overview} was used.\n */\n@Component({\n  selector: 'app-available-jobs',\n  templateUrl: './available-jobs.component.html',\n  styleUrls: ['./available-jobs.component.css']\n})\nexport class AvailableJobsComponent implements OnInit, OnDestroy {\n  /**\n   * used in view to validate/check if name of workflow is entered\n   */\n  nameFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  /**\n   * used in view to handel error if name of workflow is not entered\n   */\n  matcher = new MyErrorStateMatcher();\n  /**\n   * in this variable name of workflow is stored\n   */\n  name = '';\n  /**\n   * used in view to enable and disable Next button\n   */\n  isDisabledNext = true;\n  /**\n   * used in view for one selected job - Drag&Drop\n   */\n  selectedJob: any;\n\n  /**\n   * used in view for table on the right - selected jobs list\n   */\n  selectedJobs: string[];\n  /**\n   * used for interim storage\n   */\n  copiedJobs: string[];\n\n  // jobs: string[] = [];\n  /**\n   * locally stored response\n   */\n  private response: string[];\n  /**\n   * Subscription for observed responseSub -> synchronized and shared response\n   */\n  private responseSub = Subscription;\n  /**\n   * locally stored workflow\n   */\n  workflow: Workflow;\n  /**\n   * Subscription for observed workflowSub -> synchronized and shared workflow\n   */\n  private workflowSub: Subscription;\n  /**\n   * locally stored list of jobs -> for drag&drop in view\n   */\n  jobsUpdated: string[] = [];\n  /**\n   * Subscription for observed jobsSub -> synchronized and shared list of jobs\n   */\n  private jobsSub: Subscription;\n  /**\n   * string used for routing/redirecting\n   */\n  link = 'wizard/';\n  /**\n   * locally stored counter\n   *\n   * index for navigating through wizard\n   */\n  counter: number;\n  /**\n   * Subscription for counterSub -> synchronized and shared counter\n   */\n  counterSub: Subscription;\n  /**\n   * constructor\n   * @param {JobsService} jobService\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   */\n  constructor(private jobService: JobsService,\n              private router: Router,\n              private wizardStepperService: WizardStepperService) { }\n  /**\n   * ngOnInit is a lifecycle hook\n   * - executed after constructor\n   *\n   * declaration of all necessary variables for this component\n   */\n  ngOnInit() {\n    this.jobService.getJobsFromServer();\n    // @ts-ignore\n    this.responseSub = this.jobService.responseListener\n      .subscribe((response: string[]) => {\n      this.response = response;\n    });\n    this.selectedJobs = [];\n    this.copiedJobs = [...this.selectedJobs];\n\n    this.jobsSub = this.wizardStepperService.getJobsListener()\n      .subscribe(jobsUpdated => {\n        this.jobsUpdated = jobsUpdated;\n      });\n\n    this.counterSub = this.wizardStepperService.getCounterListener()\n      .subscribe(counter => {\n        this.counter = counter;\n      });\n    this.workflowSub = this.wizardStepperService.getWorkflowListener()\n      .subscribe(workflow => {\n        this.workflow = workflow;\n      });\n\n    this.workflow = this.wizardStepperService.getWorkflow();\n    this.name = typeof this.workflow === 'undefined' ? '' : this.workflow.name;\n    this.jobsUpdated = this.wizardStepperService.getJobs();\n    this.selectedJobs = this.wizardStepperService.getJobs();\n    this.wizardStepperService.updateCount(this.counter = 0);\n    this.counter = this.wizardStepperService.getCounter();\n\n    console.log(this.workflow);\n    console.log(this.counter);\n    console.log('OnInit wurde ausgeführt');\n  }\n  /**\n   * ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\n   *\n   * resets variables and unsubscribes Subscriptions\n   */\n  ngOnDestroy() {\n    this.selectedJobs = [];\n    this.copiedJobs = [...this.selectedJobs];\n    this.jobsSub.unsubscribe();\n    this.counterSub.unsubscribe();\n    this.workflowSub.unsubscribe();\n    console.log('OnDestroy wurde ausgeführt');\n  }\n  /**\n   * stores selected jobe name for Drag&Drop\n   * @param {any} job Jobname of of selected job\n   */\n  onSelect(job: any): void {\n    this.selectedJob = job;\n  }\n  /**\n   * requests available Jobs from backend\n   */\n  getAvailableJobs(): void {\n    this.jobService.getJobsFromServer();\n  }\n  /**\n   * choose 1st job in workflow list and redirects to this job (job configurator)\n   */\n  onNextClick(): void {\n    if (this.jobsUpdated.length > 0) {\n      this.selectNextJob(this.workflow.getJobName(0));\n      this.router.navigate([this.link]);\n    } else {\n      alert('no jobs selected');\n    }\n  }\n  /**\n   * refreshes available Jobs from backend\n   */\n  onClick() {\n    this.getAvailableJobs();\n  }\n  /**\n   * resets selected jobs\n   */\n  onResetClick() {\n    this.selectedJobs = [];\n    this.wizardStepperService.updateJob(this.selectedJobs);\n    console.log(this.jobsUpdated);\n  }\n  /**\n   * stores selected list of jobs in wizardStepperService\n   */\n  onSaveClick() {\n    if (this.jobsUpdated.length > 0) {\n      this.workflow = new Workflow(this.name);\n      this.workflow.addJobs(this.jobsUpdated);\n      this.wizardStepperService.updateWorkflow(this.workflow);\n      this.isDisabledNext = false;\n      console.log(this.workflow);\n    } else {\n      alert('no jobs selected');\n    }\n  }\n  /**\n   * stores 1st job's routing-link under link\n   * @param {string} job Name of 1st job in selected workflow\n   */\n  selectNextJob(job: string) {\n    this.link = 'wizard/';\n    switch (job) {\n        /**\n         * enter new case for 'NewMethod' with 'new_method_path\n         */\n        case 'NewMethod': {\n          this.link += 'new_method_path';\n          break;\n        }\n        case 'GripperGrip': {\n          this.link += 'gripper_grip';\n          break;\n        }\n        case 'MoveArmOnTrajectory': {\n          this.link += 'arm_trajectory';\n          break;\n        }\n        case 'CustomWorkflow': {\n          this.link += 'arm_trajectory';\n          break;\n        }\n        case 'MoveArmJointsWorkflow': {\n          this.link += 'arm_joints';\n          break;\n        }\n        case 'BaseMove': {\n          this.link += 'base';\n          break;\n        }\n        case 'ArmCartesian': {\n          this.link += 'arm_cartesian';\n          break;\n        }\n        case 'GripperRelease': {\n          this.link += 'gripper_release';\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    console.log(this.link);\n  }\n  /**\n   * Drag&Drop from Angular Material {@link https://material.angular.io/cdk/drag-drop/overview}\n   * @param {CdkDragDrop} event\n   */\n  drop(event: CdkDragDrop) {\n    if (event.previousContainer.id === event.container.id) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      copyArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex);\n      this.getAvailableJobs();\n    }\n    this.wizardStepperService.updateJob(this.selectedJobs);\n    console.log(this.jobsUpdated.length);\n    console.log(this.counter);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewMethod.html":{"url":"classes/NewMethod.html","title":"class - NewMethod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewMethod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/new-method.model.ts\n        \n\n            \n                Description\n            \n            \n                The new class/model must extend Base!\nAll other parameters and methods can be changed for NewMethod\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _goalPose\n                            \n                            \n                                    Private\n                                _activationTimeout\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    goalPose\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/new-method.model.ts:11\n                            \n                        \n\n                \n                    \n                            constructor calls constructor of Base\nonly example - has to be adjusted to NewMethod\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _goalPose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/new-method.model.ts:11\n                            \n                        \n\n                \n                    \n                        only example - has be adjusted to NewMethod\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activationTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:18\n\n                            \n                        \n\n                \n                    \n                        according to API each method/job has activationTimeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:10\n\n                            \n                        \n\n                \n                    \n                        id will be sent from backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:14\n\n                            \n                        \n\n                \n                    \n                        name of method/job\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        goalPose\n                    \n                \n\n                \n                    \n                        getgoalPose()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/new-method.model.ts:38\n                                \n                            \n                    \n                        \n                                Getter for e.g. _goalPose - has be adjusted to NewMethod\n\n\n                                \n                                \n                                \n                                    Returns :     number[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setgoalPose(value: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/new-method.model.ts:31\n                                \n                            \n                    \n                        \n                                Setter for e.g. _goalPose - has be adjusted to NewMethod\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Base} from './base.model';\n/**\n * The new class/model must extend Base!\n *\n * All other parameters and methods can be changed for NewMethod\n */\nexport class NewMethod extends Base {\n  /**\n   * only example - has be adjusted to NewMethod\n   */\n  private _goalPose: number [];\n  /**\n   * constructor calls constructor of Base\n   *\n   * only example - has to be adjusted to NewMethod\n   * @param {any} data\n   */\n  constructor(data: any) {\n    super('NewMethod');\n    this.id = data._id;\n    this.activationTimeout = data._activationTimeout;\n    this._goalPose = data._goalPose;\n    this.id = (typeof this.id === 'undefined') ? 0 : this.id ;\n    this.activationTimeout = (typeof this.activationTimeout === 'undefined') ? 50 : this.activationTimeout;\n    console.log(this._goalPose);\n  }\n  /**\n   * Setter for e.g. _goalPose - has be adjusted to NewMethod\n   * @param {number} value\n   */\n  set goalPose(value: number[]) {\n    this._goalPose = value;\n  }\n  /**\n   * Getter for e.g. _goalPose - has be adjusted to NewMethod\n   * @returns The _goalPose\n   */\n  get goalPose(): number[] {\n    return this._goalPose;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoPageFoundComponent.html":{"url":"components/NoPageFoundComponent.html","title":"component - NoPageFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoPageFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/no-page-found/no-page-found.component.ts\n\n\n    \n        Description\n    \n    \n        This component indicates that page was not found\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-no-page-found\n            \n\n            \n                styleUrls\n                ./no-page-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./no-page-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/no-page-found/no-page-found.component.ts:12\n                            \n                        \n\n                \n                    \n                            The default \"constructor\"\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/no-page-found/no-page-found.component.ts:23\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\nexecuted after constructor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * This component indicates that page was not found\n */\n\n@Component({\n  selector: 'app-no-page-found',\n  templateUrl: './no-page-found.component.html',\n  styleUrls: ['./no-page-found.component.css']\n})\nexport class NoPageFoundComponent implements OnInit {\n\n  /**\n   * The default \"constructor\"\n   */\n  constructor() { }\n\n  /**\n   * ngOnInit is a lifecycle hook\n   * executed after constructor\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        This page could not be found!\n\n    \n\n    \n                \n                    ./no-page-found.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'This page could not be found!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NoPageFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SocketDataService.html":{"url":"classes/SocketDataService.html","title":"class - SocketDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SocketDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/sockets/websocket.service.ts\n        \n\n            \n                Description\n            \n            \n                This service provides a websocket needed for viewing progress of backend\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                socket\n                            \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNewMessage\n                            \n                            \n                                    Public\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/sockets/websocket.service.ts:14\n                            \n                        \n\n                \n                    \n                            default constructor - instantiate socket\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            socket\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/sockets/websocket.service.ts:14\n                            \n                        \n\n                \n                    \n                        web socket\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:3030'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sockets/websocket.service.ts:10\n                            \n                        \n\n                \n                    \n                        url\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNewMessage\n                        \n                        \n                    \n                \n            \n            \n                \nonNewMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/sockets/websocket.service.ts:32\n                \n            \n\n\n            \n                \n                    if status change of obeservable\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The Execution Status Msg\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/sockets/websocket.service.ts:25\n                \n            \n\n\n            \n                \n                    not used, but you can send a message to the socket\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as io from 'socket.io-client';\nimport {Observable, Observer} from 'rxjs';\n/**\n * This service provides a websocket needed for viewing progress of backend\n */\nexport class SocketDataService {\n  /**\n   * url\n   */\n  private url = 'http://localhost:3030';\n  /**\n   * web socket\n   */\n  private socket;\n  /**\n   * default constructor - instantiate socket\n   */\n  constructor() {\n    this.socket = io(this.url);\n  }\n  /**\n   * not used, but you can send a message to the socket\n   * @param {any} message The message\n   */\n  public sendMessage(message) {\n    this.socket.emit('new-message', message);\n  }\n  /**\n   * if status change of obeservable\n   * @returns The Execution Status Msg\n   */\n  onNewMessage() {\n    return new Observable((observer) => {\n      this.socket.on('message', msg => {\n        observer.next(msg);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardArmCartesianComponent.html":{"url":"components/WizardArmCartesianComponent.html","title":"component - WizardArmCartesianComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardArmCartesianComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts\n\n\n    \n        Description\n    \n    \n        This component is a Child Component of \"Wizard-Job\".\nIt presents the view of method ArmCartesian in the configurator (\"Wizard-Parent\").\nTo present and enter values Angular Material Design Components where used in the view\nhttps://material.angular.io/components/categories\n\n    \n\n    \n        Extends\n    \n    \n                WizardJobComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wizard-arm-cartesian\n            \n\n            \n                styleUrls\n                ./wizard-arm-cartesian.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wizard-arm-cartesian.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                armCartesian\n                            \n                            \n                                disabledActTimeout\n                            \n                            \n                                goalPose\n                            \n                            \n                                invertActTimeout\n                            \n                            \n                                isDisabledNext\n                            \n                            \n                                maxActTimeout\n                            \n                            \n                                minActTimeout\n                            \n                            \n                                stepActTimeout\n                            \n                            \n                                thumbLabelActTimeout\n                            \n                            \n                                title\n                            \n                            \n                                valueActTimeout\n                            \n                            \n                                verticalActTimeout\n                            \n                            \n                                counter\n                            \n                            \n                                    Private\n                                counterSub\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                    Private\n                                statusSub\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onGetPostionClick\n                            \n                            \n                                onNextClick\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onPreviousClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, eventEmitterService: WizardParentStepperService, httpRequest: HttpRequestService)\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:68\n                            \n                        \n\n                \n                    \n                            constructor - calls constructor of parent WizardJobComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For redirecting\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Workflow Information\n\n                                                        \n                                                \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Angular Material Stepper View\n\n                                                        \n                                                \n                                                \n                                                        httpRequest\n                                                  \n                                                        \n                                                                        HttpRequestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For getting actual position from robot arm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:87\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook - executed after constructor\noverrides parent ngOninit() declares additional necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onGetPostionClick\n                        \n                        \n                    \n                \n            \n            \n                \nonGetPostionClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:115\n                \n            \n\n\n            \n                \n                    requests actual position form backend and stores the value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:97\n                \n            \n\n\n            \n                \n                    overrides parent onNextClick() - updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:129\n\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nunsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:67\n\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:92\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:108\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Oberservables\nbefore redirects to \"previous\" wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:139\n\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            armCartesian\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ArmCartesian\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:28\n                            \n                        \n\n                \n                    \n                        local instance of ArmCartesian\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabledActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:32\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goalPose\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invertActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:36\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabledNext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:68\n                            \n                        \n\n                \n                    \n                        next button - parameter for Angular Material Button  https://material.angular.io/components/button/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:40\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:44\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:48\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbLabelActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:52\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Arm Cartesian'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:24\n                            \n                        \n\n                \n                    \n                        displayed titel of the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:56\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verticalActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:60\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:35\n\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:39\n\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:21\n\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:46\n\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:50\n\n                            \n                        \n\n                \n                    \n                        Subscription for stusSub -> synchronized and shared status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:25\n\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:29\n\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WizardStepperService} from '../wizard-stepper.service';\nimport {WizardJobComponent} from '../wizard-job/wizard-job.component';\nimport {ArmCartesian} from '../../model/arm-cartesian.model';\nimport {WizardParentStepperService} from '../wizard-parent/wizard-parent-stepper.service';\nimport {HttpRequestService} from '../../execution/http-request.service';\n/**\n * This component is a Child Component of \"Wizard-Job\".\n *\n * It presents the view of method ArmCartesian in the configurator (\"Wizard-Parent\").\n * To present and enter values Angular Material Design Components where used in the view\n * {@link https://material.angular.io/components/categories}\n */\n@Component({\n  selector: 'app-wizard-arm-cartesian',\n  templateUrl: './wizard-arm-cartesian.component.html',\n  styleUrls: ['./wizard-arm-cartesian.component.css']\n})\nexport class WizardArmCartesianComponent extends WizardJobComponent implements OnInit,  OnDestroy {\n  /**\n   * displayed titel of the component\n   */\n  title = 'Arm Cartesian';\n  /**\n   * local instance of ArmCartesian\n   */\n  armCartesian: ArmCartesian;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  disabledActTimeout = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  invertActTimeout = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  maxActTimeout = 100;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  minActTimeout = 0;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  stepActTimeout = 1;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  thumbLabelActTimeout = true;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  valueActTimeout = 50;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  verticalActTimeout = false;\n  /*\n   * cartesian coordinates of robot component\n   */\n  goalPose;\n  /**\n   * next button - parameter for Angular Material Button  {@link https://material.angular.io/components/button/overview}\n   */\n  isDisabledNext = true;\n  /**\n   * constructor - calls constructor of parent WizardJobComponent\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   * @param {WizardParentStepperService} eventEmitterService For Sharing Angular Material Stepper View\n   * @param {HttpRequestService} httpRequest For getting actual position from robot arm\n   */\n  constructor(router: Router,\n              wizardStepperService: WizardStepperService,\n              eventEmitterService: WizardParentStepperService,\n              private httpRequest: HttpRequestService) {\n    super(router, wizardStepperService, eventEmitterService);\n  }\n  /**\n   * ngOnInit is a lifecycle hook - executed after constructor\n   *\n   * overrides parent ngOninit() declares additional necessary variables for this component\n   */\n  ngOnInit() {\n    super.ngOnInit();\n    this.armCartesian = this.wizardStepperService.getWorkflowItem() as ArmCartesian;\n    this.valueActTimeout = this.armCartesian.activationTimeout;\n    this.goalPose = this.armCartesian.goalPose;\n  }\n  /**\n   * overrides parent onNextClick() - updates all necessary variables and Observables\n   * before redirects to next wizard job component\n   */\n  onNextClick(): void {\n    this.armCartesian.activationTimeout = this.valueActTimeout;\n    this.wizardStepperService.updateWorkflowItem(this.armCartesian);\n    if (this.counter   {\n        this.armCartesian.goalPose = [];\n        this.armCartesian.goalPose = responseData;\n        this.goalPose = this.armCartesian.goalPose;\n        this.isDisabledNext = false;\n        console.log(this.armCartesian.goalPose);\n      });\n  }\n}\n\n    \n\n    \n        {{title}}\n\n  Activation Timeout\n  \n    \n      \n      \n      \n        \n        Timeout\n      \n    \n  \n\n\n\n  Goal Position\n  \n\n  \n  \n    \n      my_location\n    \n    {{goalPose}}\n  \n\n\n\n  \n    \n      navigate_before\n    \n    \n    \n      navigate_next\n    \n    \n      navigate_next\n    \n  \n\n\n    \n\n    \n                \n                    ./wizard-arm-cartesian.component.css\n                \n                .example-container {\n  width: 600px;\n  max-width: 100%;\n  margin: 10px 10px 10px 10px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 1rem;\n}\nh1, h2, h3, h4, h5, h6{\n  margin-top:20px;\n  margin-bottom:10px;\n  margin-left: 10px;\n}\n.example-h2 {\n  margin: 10px;\n}\n\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n\n.example-margin {\n  margin: 30px;\n}\n\n.mat-slider-horizontal {\n  width: 100px;\n}\n\n.fxFlex{\n  flex: 100 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}  Activation Timeout                                        Timeout              Goal Position                my_location        {{goalPose}}              navigate_before                  navigate_next              navigate_next      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardArmCartesianComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardArmJoinsComponent.html":{"url":"components/WizardArmJoinsComponent.html","title":"component - WizardArmJoinsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardArmJoinsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts\n\n\n\n    \n        Extends\n    \n    \n                WizardJobComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wizard-arm-joins\n            \n\n            \n                styleUrls\n                ./wizard-arm-joins.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wizard-arm-joins.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                invert\n                            \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                step\n                            \n                            \n                                thumbLabel\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                            \n                                vertical\n                            \n                            \n                                counter\n                            \n                            \n                                    Private\n                                counterSub\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                    Private\n                                statusSub\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onPreviousClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, eventEmitterService: WizardParentStepperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:129\n\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nunsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:67\n\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:92\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:108\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Oberservables\nbefore redirects to \"previous\" wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:139\n\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:20\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invert\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:24\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:28\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            min\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:32\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            step\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:36\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:40\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Arm Joins'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:16\n                            \n                        \n\n                \n                    \n                        displayed titel of the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:44\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vertical\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:48\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:35\n\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:39\n\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:21\n\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:46\n\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:50\n\n                            \n                        \n\n                \n                    \n                        Subscription for stusSub -> synchronized and shared status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:25\n\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:29\n\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WizardStepperService} from '../wizard-stepper.service';\nimport {WizardJobComponent} from '../wizard-job/wizard-job.component';\nimport {WizardParentStepperService} from '../wizard-parent/wizard-parent-stepper.service';\n\n@Component({\n  selector: 'app-wizard-arm-joins',\n  templateUrl: './wizard-arm-joins.component.html',\n  styleUrls: ['./wizard-arm-joins.component.css']\n})\nexport class WizardArmJoinsComponent extends WizardJobComponent implements OnInit, OnDestroy {\n  /**\n   * displayed titel of the component\n   */\n  title = 'Arm Joins';\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  disabled = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  invert = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  max = 100;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  min = 0;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  step = 1;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  thumbLabel = true;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  value = 50;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  vertical = false;\n\n  constructor(router: Router,\n              wizardStepperService: WizardStepperService,\n              eventEmitterService: WizardParentStepperService) {\n    super(router, wizardStepperService, eventEmitterService);\n  }\n}\n\n    \n\n    \n        {{title}}\n\n  Activation Timeout\n  \n    \n      \n      \n\n      \n        \n        Timeout\n      \n    \n  \n\n\n\n  \n    \n      navigate_before\n    \n    \n    \n      navigate_next\n    \n  \n\n\n    \n\n    \n                \n                    ./wizard-arm-joins.component.css\n                \n                .example-container {\n  width: 600px;\n  max-width: 100%;\n  margin: 10px 10px 10px 10px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 1rem;\n}\nh1, h2, h3, h4, h5, h6{\n  margin-top:20px;\n  margin-bottom:10px;\n  margin-left: 10px;\n}\n.example-h2 {\n  margin: 10px;\n}\n\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n\n.example-margin {\n  margin: 30px;\n}\n\n.mat-slider-horizontal {\n  width: 100px;\n}\n\n.fxFlex{\n  flex: 100 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}  Activation Timeout                                        Timeout                        navigate_before                  navigate_next      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardArmJoinsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardArmTrajectoryComponent.html":{"url":"components/WizardArmTrajectoryComponent.html","title":"component - WizardArmTrajectoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardArmTrajectoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts\n\n\n\n    \n        Extends\n    \n    \n                WizardJobComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wizard-arm-trajectory-movement\n            \n\n            \n                styleUrls\n                ./wizard-arm-trajectory.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wizard-arm-trajectory.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                invert\n                            \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                step\n                            \n                            \n                                thumbLabel\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                            \n                                vertical\n                            \n                            \n                                counter\n                            \n                            \n                                    Private\n                                counterSub\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                    Private\n                                statusSub\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onPreviousClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, eventEmitterService: WizardParentStepperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:129\n\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nunsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:67\n\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:92\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:108\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Oberservables\nbefore redirects to \"previous\" wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:139\n\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:20\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invert\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:24\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:28\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            min\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:32\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            step\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:36\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:40\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Arm Trajectory'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:16\n                            \n                        \n\n                \n                    \n                        displayed titel of the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:44\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vertical\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:48\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:35\n\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:39\n\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:21\n\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:46\n\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:50\n\n                            \n                        \n\n                \n                    \n                        Subscription for stusSub -> synchronized and shared status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:25\n\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:29\n\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WizardStepperService} from '../wizard-stepper.service';\nimport {WizardJobComponent} from '../wizard-job/wizard-job.component';\nimport {WizardParentStepperService} from '../wizard-parent/wizard-parent-stepper.service';\n\n@Component({\n  selector: 'app-wizard-arm-trajectory-movement',\n  templateUrl: './wizard-arm-trajectory.component.html',\n  styleUrls: ['./wizard-arm-trajectory.component.css']\n})\nexport class WizardArmTrajectoryComponent extends WizardJobComponent implements OnInit, OnDestroy {\n  /**\n   * displayed titel of the component\n   */\n  title = 'Arm Trajectory';\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  disabled = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  invert = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  max = 100;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  min = 0;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  step = 1;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  thumbLabel = true;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  value = 50;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  vertical = false;\n\n  constructor(router: Router,\n              wizardStepperService: WizardStepperService,\n              eventEmitterService: WizardParentStepperService) {\n    super(router, wizardStepperService, eventEmitterService);\n  }\n}\n\n    \n\n    \n        {{title}}\n\n  Activation Timeout\n  \n\n    \n      \n      \n\n      \n        \n        Timeout\n      \n    \n  \n\n\n\n  \n    \n      navigate_before\n    \n    \n    \n      navigate_next\n    \n  \n\n\n    \n\n    \n                \n                    ./wizard-arm-trajectory.component.css\n                \n                .example-container {\n  width: 600px;\n  max-width: 100%;\n  margin: 10px 10px 10px 10px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 1rem;\n}\nh1, h2, h3, h4, h5, h6{\n  margin-top:20px;\n  margin-bottom:10px;\n  margin-left: 10px;\n}\n.example-h2 {\n  margin: 10px;\n}\n\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n\n.example-margin {\n  margin: 30px;\n}\n\n.mat-slider-horizontal {\n  width: 100px;\n}\n\n.fxFlex{\n  flex: 100 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}  Activation Timeout                                        Timeout                        navigate_before                  navigate_next      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardArmTrajectoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardBaseComponent.html":{"url":"components/WizardBaseComponent.html","title":"component - WizardBaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardBaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wizard-stepper/wizard-base/wizard-base.component.ts\n\n\n    \n        Description\n    \n    \n        This component is a Child Component of \"Wizard-Job\".\nIt presents the view of method MoveBase in the configurator (\"Wizard-Parent\").\nTo present and enter values Angular Material Design Components where used in the view\nhttps://material.angular.io/components/categories\n\n    \n\n    \n        Extends\n    \n    \n                WizardJobComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wizard-base\n            \n\n            \n                styleUrls\n                ./wizard-base.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wizard-base.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseMove\n                            \n                            \n                                disabledActTimeout\n                            \n                            \n                                goalPose\n                            \n                            \n                                invertActTimeout\n                            \n                            \n                                isDisabledNext\n                            \n                            \n                                maxActTimeout\n                            \n                            \n                                minActTimeout\n                            \n                            \n                                stepActTimeout\n                            \n                            \n                                thumbLabelActTimeout\n                            \n                            \n                                title\n                            \n                            \n                                valueActTimeout\n                            \n                            \n                                verticalActTimeout\n                            \n                            \n                                counter\n                            \n                            \n                                    Private\n                                counterSub\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                    Private\n                                statusSub\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onGetPostionClick\n                            \n                            \n                                onNextClick\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onPreviousClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, eventEmitterService: WizardParentStepperService, httpRequest: HttpRequestService)\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:68\n                            \n                        \n\n                \n                    \n                            constructor - calls constructor of parent WizardJobComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For redirecting\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Workflow Information\n\n                                                        \n                                                \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Angular Material Stepper View\n\n                                                        \n                                                \n                                                \n                                                        httpRequest\n                                                  \n                                                        \n                                                                        HttpRequestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For getting actual position from robot arm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:87\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook - executed after constructor\noverrides parent ngOninit() declares additional necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onGetPostionClick\n                        \n                        \n                    \n                \n            \n            \n                \nonGetPostionClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:115\n                \n            \n\n\n            \n                \n                    requests actual position form backend and stores the value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:97\n                \n            \n\n\n            \n                \n                    overrides parent onNextClick() - updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:129\n\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nunsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:67\n\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:92\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:108\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Oberservables\nbefore redirects to \"previous\" wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:139\n\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseMove\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseMove\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:28\n                            \n                        \n\n                \n                    \n                        local instance of BaseMove\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabledActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:32\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goalPose\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invertActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:36\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabledNext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:68\n                            \n                        \n\n                \n                    \n                        next button - parameter for Angular Material Button  https://material.angular.io/components/button/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:40\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:44\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:48\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbLabelActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:52\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Base Movement'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:24\n                            \n                        \n\n                \n                    \n                        displayed titel of the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:56\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verticalActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:60\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:35\n\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:39\n\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:21\n\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:46\n\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:50\n\n                            \n                        \n\n                \n                    \n                        Subscription for stusSub -> synchronized and shared status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:25\n\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:29\n\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WizardStepperService} from '../wizard-stepper.service';\nimport {WizardJobComponent} from '../wizard-job/wizard-job.component';\nimport {BaseMove} from '../../model/base-move.model';\nimport {WizardParentStepperService} from '../wizard-parent/wizard-parent-stepper.service';\nimport {HttpRequestService} from '../../execution/http-request.service';\n/**\n * This component is a Child Component of \"Wizard-Job\".\n *\n * It presents the view of method MoveBase in the configurator (\"Wizard-Parent\").\n * To present and enter values Angular Material Design Components where used in the view\n * {@link https://material.angular.io/components/categories}\n */\n@Component({\n  selector: 'app-wizard-base',\n  templateUrl: './wizard-base.component.html',\n  styleUrls: ['./wizard-base.component.css']\n})\nexport class WizardBaseComponent extends WizardJobComponent implements OnInit, OnDestroy {\n  /**\n   * displayed titel of the component\n   */\n  title = 'Base Movement';\n  /**\n   * local instance of BaseMove\n   */\n  baseMove: BaseMove;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  disabledActTimeout = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  invertActTimeout = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  maxActTimeout = 100;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  minActTimeout = 0;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  stepActTimeout = 1;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  thumbLabelActTimeout = true;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  valueActTimeout = 50;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  verticalActTimeout = false;\n  /*\n   * cartesian coordinates of robot component\n   */\n  goalPose;\n  /**\n   * next button - parameter for Angular Material Button  {@link https://material.angular.io/components/button/overview}\n   */\n  isDisabledNext = true;\n  /**\n   * constructor - calls constructor of parent WizardJobComponent\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   * @param {WizardParentStepperService} eventEmitterService For Sharing Angular Material Stepper View\n   * @param {HttpRequestService} httpRequest For getting actual position from robot arm\n   */\n  constructor(router: Router,\n              wizardStepperService: WizardStepperService,\n              eventEmitterService: WizardParentStepperService,\n              private httpRequest: HttpRequestService) {\n    super(router, wizardStepperService, eventEmitterService);\n  }\n  /**\n   * ngOnInit is a lifecycle hook - executed after constructor\n   *\n   * overrides parent ngOninit() declares additional necessary variables for this component\n   */\n  ngOnInit() {\n    super.ngOnInit();\n    this.baseMove = this.wizardStepperService.getWorkflowItem() as BaseMove;\n    this.valueActTimeout = this.baseMove.activationTimeout;\n    this.goalPose = this.baseMove.goalPose;\n  }\n  /**\n   * overrides parent onNextClick() - updates all necessary variables and Observables\n   * before redirects to next wizard job component\n   */\n  onNextClick(): void {\n    this.baseMove.activationTimeout = this.valueActTimeout;\n    this.wizardStepperService.updateWorkflowItem(this.baseMove);\n    if (this.counter   {\n        this.baseMove.goalPose = [];\n        this.baseMove.goalPose = responseData;\n        this.goalPose = this.baseMove.goalPose;\n        this.isDisabledNext = false;\n        console.log(this.baseMove.goalPose);\n      });\n  }\n  }\n\n    \n\n    \n        {{title}}\n\n  Activation Timeout\n  \n    \n      \n      \n      \n        \n        Timeout\n      \n    \n  \n\n\n\n  Goal Position\n  \n\n  \n  \n    \n      my_location\n    \n    {{goalPose}}\n  \n\n\n\n  \n    \n      navigate_before\n    \n    \n\n    \n      navigate_next\n    \n    \n      navigate_next\n    \n  \n\n\n    \n\n    \n                \n                    ./wizard-base.component.css\n                \n                .example-container {\n  width: 600px;\n  max-width: 100%;\n  margin: 10px 10px 10px 10px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 1rem;\n}\nh1, h2, h3, h4, h5, h6{\n  margin-top:20px;\n  margin-bottom:10px;\n  margin-left: 10px;\n}\n.example-h2 {\n  margin: 10px;\n}\n\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n\n.example-margin {\n  margin: 30px;\n}\n\n.mat-slider-horizontal {\n  width: 100px;\n}\n\n.fxFlex{\n  flex: 100 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}  Activation Timeout                                        Timeout              Goal Position                my_location        {{goalPose}}              navigate_before                  navigate_next              navigate_next      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardBaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardGripperGripComponent.html":{"url":"components/WizardGripperGripComponent.html","title":"component - WizardGripperGripComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardGripperGripComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts\n\n\n    \n        Description\n    \n    \n        This component is a Child Component of \"Wizard-Job\".\nIt presents the view of method GripperGrip in the configurator (\"Wizard-Parent\").\nTo present and enter values Angular Material Design Components where used in the view\nhttps://material.angular.io/components/categories\n\n    \n\n    \n        Extends\n    \n    \n                WizardJobComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wizard-gripper-grip\n            \n\n            \n                styleUrls\n                ./wizard-gripper-grip.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wizard-gripper-grip.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabledActTimeout\n                            \n                            \n                                gripperGrip\n                            \n                            \n                                invertActTimeout\n                            \n                            \n                                maxActTimeout\n                            \n                            \n                                minActTimeout\n                            \n                            \n                                stepActTimeout\n                            \n                            \n                                thumbLabelActTimeout\n                            \n                            \n                                title\n                            \n                            \n                                valueActTimeout\n                            \n                            \n                                verticalActTimeout\n                            \n                            \n                                counter\n                            \n                            \n                                    Private\n                                counterSub\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                    Private\n                                statusSub\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onPreviousClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, eventEmitterService: WizardParentStepperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:59\n                            \n                        \n\n                \n                    \n                            constructor - calls constructor of parent WizardJobComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For redirecting\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Workflow Information\n\n                                                        \n                                                \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Angular Material Stepper View\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:76\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook - executed after constructor\noverrides parent ngOninit() declares additional necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:85\n                \n            \n\n\n            \n                \n                    overrides parent onNextClick() - updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:129\n\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nunsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:67\n\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:92\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:108\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Oberservables\nbefore redirects to \"previous\" wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:139\n\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabledActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:31\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gripperGrip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GripperGrip\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:27\n                            \n                        \n\n                \n                    \n                        local instance of GripperGrip\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invertActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:35\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:39\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:43\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:47\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbLabelActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:51\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Gripper Grip'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:23\n                            \n                        \n\n                \n                    \n                        displayed titel of the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:55\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verticalActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:59\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:35\n\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:39\n\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:21\n\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:46\n\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:50\n\n                            \n                        \n\n                \n                    \n                        Subscription for stusSub -> synchronized and shared status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:25\n\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:29\n\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WizardStepperService} from '../wizard-stepper.service';\nimport {WizardJobComponent} from '../wizard-job/wizard-job.component';\nimport {GripperGrip} from '../../model/gripper-grip.model';\nimport {WizardParentStepperService} from '../wizard-parent/wizard-parent-stepper.service';\n/**\n * This component is a Child Component of \"Wizard-Job\".\n *\n * It presents the view of method GripperGrip in the configurator (\"Wizard-Parent\").\n * To present and enter values Angular Material Design Components where used in the view\n * {@link https://material.angular.io/components/categories}\n */\n@Component({\n  selector: 'app-wizard-gripper-grip',\n  templateUrl: './wizard-gripper-grip.component.html',\n  styleUrls: ['./wizard-gripper-grip.component.css']\n})\nexport class WizardGripperGripComponent extends WizardJobComponent implements OnInit, OnDestroy {\n  /**\n   * displayed titel of the component\n   */\n  title = 'Gripper Grip';\n  /**\n   * local instance of GripperGrip\n   */\n  gripperGrip: GripperGrip;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  disabledActTimeout = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  invertActTimeout = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  maxActTimeout = 100;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  minActTimeout = 0;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  stepActTimeout = 1;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  thumbLabelActTimeout = true;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  valueActTimeout = 50;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  verticalActTimeout = false;\n  /**\n   * constructor - calls constructor of parent WizardJobComponent\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   * @param {WizardParentStepperService} eventEmitterService For Sharing Angular Material Stepper View\n   */\n  constructor(router: Router,\n              wizardStepperService: WizardStepperService,\n              eventEmitterService: WizardParentStepperService) {\n    super(router, wizardStepperService, eventEmitterService);\n  }\n  /**\n   * ngOnInit is a lifecycle hook - executed after constructor\n   *\n   * overrides parent ngOninit() declares additional necessary variables for this component\n   */\n  ngOnInit() {\n    super.ngOnInit();\n    this.gripperGrip = this.wizardStepperService.getWorkflowItem() as GripperGrip;\n    this.valueActTimeout = this.gripperGrip.activationTimeout;\n  }\n  /**\n   * overrides parent onNextClick() - updates all necessary variables and Observables\n   * before redirects to next wizard job component\n   */\n  onNextClick(): void {\n    this.gripperGrip.activationTimeout = this.valueActTimeout;\n    this.wizardStepperService.updateWorkflowItem(this.gripperGrip);\n    if (this.counter \n    \n\n    \n        {{title}}\n\n  Activation Timeout\n  \n\n    \n      \n      \n\n      \n        \n        Timeout\n      \n    \n  \n\n\n\n  \n\n    \n      navigate_before\n    \n    \n    \n      navigate_next\n    \n  \n\n\n    \n\n    \n                \n                    ./wizard-gripper-grip.component.css\n                \n                .example-container {\n  width: 600px;\n  max-width: 100%;\n  margin: 10px 10px 10px 10px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 1rem;\n}\nh1, h2, h3, h4, h5, h6{\n  margin-top:20px;\n  margin-bottom:10px;\n  margin-left: 10px;\n}\n.example-h2 {\n  margin: 10px;\n}\n\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n\n.example-margin {\n  margin: 30px;\n}\n\n.mat-slider-horizontal {\n  width: 100px;\n}\n\n.fxFlex{\n  flex: 100 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}  Activation Timeout                                        Timeout                        navigate_before                  navigate_next      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardGripperGripComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardGripperReleaseComponent.html":{"url":"components/WizardGripperReleaseComponent.html","title":"component - WizardGripperReleaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardGripperReleaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts\n\n\n    \n        Description\n    \n    \n        This component is a Child Component of \"Wizard-Job\".\nIt presents the view of method GripperRelease in the configurator (\"Wizard-Parent\").\nTo present and enter values Angular Material Design Components where used in the view\nhttps://material.angular.io/components/categories\n\n    \n\n    \n        Extends\n    \n    \n                WizardJobComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wizard-gripper-release\n            \n\n            \n                styleUrls\n                ./wizard-gripper-release.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wizard-gripper-release.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabledActTimeout\n                            \n                            \n                                gripperRelease\n                            \n                            \n                                invertActTimeout\n                            \n                            \n                                maxActTimeout\n                            \n                            \n                                minActTimeout\n                            \n                            \n                                stepActTimeout\n                            \n                            \n                                thumbLabelActTimeout\n                            \n                            \n                                title\n                            \n                            \n                                valueActTimeout\n                            \n                            \n                                verticalActTimeout\n                            \n                            \n                                counter\n                            \n                            \n                                    Private\n                                counterSub\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                    Private\n                                statusSub\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onPreviousClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, eventEmitterService: WizardParentStepperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:59\n                            \n                        \n\n                \n                    \n                            constructor - calls constructor of parent WizardJobComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For redirecting\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Workflow Information\n\n                                                        \n                                                \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Angular Material Stepper View\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:76\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook - executed after constructor\noverrides parent ngOninit() declares additional necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:85\n                \n            \n\n\n            \n                \n                    overrides parent onNextClick() - updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:129\n\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nunsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:67\n\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:92\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:108\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Oberservables\nbefore redirects to \"previous\" wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:139\n\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabledActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:31\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gripperRelease\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GripperRelease\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:27\n                            \n                        \n\n                \n                    \n                        local instance of GripperRelease\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invertActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:35\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:39\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:43\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:47\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbLabelActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:51\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Gripper Release'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:23\n                            \n                        \n\n                \n                    \n                        displayed titel of the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:55\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verticalActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:59\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:35\n\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:39\n\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:21\n\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:46\n\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:50\n\n                            \n                        \n\n                \n                    \n                        Subscription for stusSub -> synchronized and shared status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:25\n\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:29\n\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WizardStepperService} from '../wizard-stepper.service';\nimport {WizardJobComponent} from '../wizard-job/wizard-job.component';\nimport {GripperRelease} from '../../model/gripper-release.model';\nimport {WizardParentStepperService} from '../wizard-parent/wizard-parent-stepper.service';\n/**\n * This component is a Child Component of \"Wizard-Job\".\n *\n * It presents the view of method GripperRelease in the configurator (\"Wizard-Parent\").\n * To present and enter values Angular Material Design Components where used in the view\n * {@link https://material.angular.io/components/categories}\n */\n@Component({\n  selector: 'app-wizard-gripper-release',\n  templateUrl: './wizard-gripper-release.component.html',\n  styleUrls: ['./wizard-gripper-release.component.css']\n})\nexport class WizardGripperReleaseComponent extends WizardJobComponent implements OnInit, OnDestroy {\n  /**\n   * displayed titel of the component\n   */\n  title = 'Gripper Release';\n  /**\n   * local instance of GripperRelease\n   */\n  gripperRelease: GripperRelease;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  disabledActTimeout = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  invertActTimeout = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  maxActTimeout = 100;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  minActTimeout = 0;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  stepActTimeout = 1;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  thumbLabelActTimeout = true;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  valueActTimeout = 50;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  verticalActTimeout = false;\n  /**\n   * constructor - calls constructor of parent WizardJobComponent\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   * @param {WizardParentStepperService} eventEmitterService For Sharing Angular Material Stepper View\n   */\n  constructor(router: Router,\n              wizardStepperService: WizardStepperService,\n              eventEmitterService: WizardParentStepperService) {\n    super(router, wizardStepperService, eventEmitterService);\n  }\n  /**\n   * ngOnInit is a lifecycle hook - executed after constructor\n   *\n   * overrides parent ngOninit() declares additional necessary variables for this component\n   */\n  ngOnInit() {\n    super.ngOnInit();\n    this.gripperRelease = this.wizardStepperService.getWorkflowItem() as GripperRelease;\n    this.valueActTimeout = this.gripperRelease.activationTimeout;\n  }\n  /**\n   * overrides parent onNextClick() - updates all necessary variables and Observables\n   * before redirects to next wizard job component\n   */\n  onNextClick(): void {\n    this.gripperRelease.activationTimeout = this.valueActTimeout;\n    this.wizardStepperService.updateWorkflowItem(this.gripperRelease);\n    if (this.counter \n    \n\n    \n        {{title}}\n\n  Activation Timeout\n  \n\n    \n      \n      \n\n      \n        \n        Timeout\n      \n    \n  \n\n\n\n  \n    \n      navigate_before\n    \n    \n    \n      navigate_next\n    \n  \n\n\n    \n\n    \n                \n                    ./wizard-gripper-release.component.css\n                \n                .example-container {\n  width: 600px;\n  max-width: 100%;\n  margin: 10px 10px 10px 10px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 1rem;\n}\nh1, h2, h3, h4, h5, h6{\n  margin-top:20px;\n  margin-bottom:10px;\n  margin-left: 10px;\n}\n\n.example-h2 {\n  margin: 10px;\n}\n\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n\n.example-margin {\n  margin: 30px;\n}\n\n.mat-slider-horizontal {\n  width: 100px;\n}\n\n.fxFlex{\n  flex: 100 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}  Activation Timeout                                        Timeout                        navigate_before                  navigate_next      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardGripperReleaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardJobComponent.html":{"url":"components/WizardJobComponent.html","title":"component - WizardJobComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardJobComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wizard-stepper/wizard-job/wizard-job.component.ts\n\n\n    \n        Description\n    \n    \n        This component is the Parent Component of all \"Wizard\" Components e.g. WizardGripperGripComponent. It contains\nall basic functionalities, which may be overrided by the Child Components\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wizard-job\n            \n\n            \n                styleUrls\n                ./wizard-job.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wizard-job.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                counter\n                            \n                            \n                                    Private\n                                counterSub\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                    Private\n                                statusSub\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onPreviousClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, eventEmitterService: WizardParentStepperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:50\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For redirecting\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Workflow Information\n\n                                                        \n                                                \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Angular Material Stepper View\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:129\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nunsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:67\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:92\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:108\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Oberservables\nbefore redirects to \"previous\" wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:139\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:35\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:39\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:21\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:46\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:50\n                            \n                        \n\n                \n                    \n                        Subscription for stusSub -> synchronized and shared status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:25\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:29\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WizardStepperService} from '../wizard-stepper.service';\nimport {Subscription} from 'rxjs';\nimport {Workflow} from '../../model/workflow.model';\nimport {WizardParentStepperService} from '../wizard-parent/wizard-parent-stepper.service';\n\n/**\n * This component is the Parent Component of all \"Wizard\" Components e.g. WizardGripperGripComponent. It contains\n * all basic functionalities, which may be overrided by the Child Components\n */\n@Component({\n  selector: 'app-wizard-job',\n  templateUrl: './wizard-job.component.html',\n  styleUrls: ['./wizard-job.component.css']\n})\nexport class WizardJobComponent implements OnInit, OnDestroy {\n  /**\n   * string used for routing/redirecting\n   */\n  link = 'wizard/';\n  /**\n   * locally stored workflow\n   */\n  workflow: Workflow;\n  /**\n   * Subscription for observed workflowSub -> synchronized and shared workflow\n   */\n  private workflowSub: Subscription;\n  /**\n   * locally stored counter\n   *\n   * index for navigating through wizard\n   */\n  counter: number;\n  /**\n   * Subscription for counterSub -> synchronized and shared counter\n   */\n  private counterSub: Subscription;\n\n  /**\n   * locally stored status e.g. 'create'\n   *\n   * important to navigate through wizard via back and forward buttons\n   */\n  status: string;\n  /**\n   * Subscription for stusSub -> synchronized and shared status\n   */\n  private statusSub: Subscription;\n\n  /**\n   * constructor\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   * @param {WizardParentStepperService} eventEmitterService For Sharing Angular Material Stepper View\n   */\n  constructor(protected router: Router,\n              protected wizardStepperService: WizardStepperService,\n              protected eventEmitterService: WizardParentStepperService  ) { }\n  /**\n   * ngOnInit is a lifecycle hook\n   * - executed after constructor\n   *\n   * declaration of all necessary variables for this component\n   */\n  ngOnInit() {\n    this.counterSub = this.wizardStepperService.getCounterListener()\n      .subscribe(counter => {\n        this.counter = counter;\n      });\n    this.workflowSub = this.wizardStepperService.getWorkflowListener()\n      .subscribe(workflow => {\n        this.workflow = workflow;\n      });\n    this.statusSub = this.wizardStepperService.getStatusListener()\n      .subscribe(data => {\n        this.status = data;\n        console.log(this.status);\n      });\n    this.status = this.wizardStepperService.getStatus();\n    this.workflow = this.wizardStepperService.getWorkflow();\n    this.counter = this.wizardStepperService.getCounter();\n    console.log(this.status);\n    console.log(this.counter);\n    console.log(this.workflow);\n  }\n  /**\n   * updates all necessary variables and Observables\n   * before redirects to next wizard job component\n   */\n  onNextClick(): void {\n    if (this.counter = 0) {\n      this.selectNextJob(this.workflow.getJobName(this.counter));\n      this.router.navigate([this.link]);\n    } else if (this.status === 'create') {\n      this.link = 'jobs';\n      this.router.navigate([this.link]);\n      this.eventEmitterService.onStepperBackClick();\n    } else {\n      this.link = '';\n      this.router.navigate([this.link]);\n      this.eventEmitterService.onStepperBackClick();\n    }\n  }\n\n  /**\n   * ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\n   *\n   * unsubscribes Subscriptions\n   */\n  ngOnDestroy() {\n    this.counterSub.unsubscribe();\n    this.workflowSub.unsubscribe();\n    this.statusSub.unsubscribe();\n    console.log('Destroy Job ausgeführt');\n  }\n  /**\n   * stores 1st job's routing-link under link\n   * @param {string} job Name of 1st job in selected workflow\n   */\n  selectNextJob(job: string) {\n    this.link = 'wizard/';\n    switch (job) {\n      /**\n       * enter new case for 'NewMethod' with 'new_method_path\n       */\n      case 'NewMethod': {\n        this.link += 'new_method_path';\n        break;\n      }\n      case 'GripperGrip': {\n        this.link += 'gripper_grip';\n        break;\n      }\n      case 'MoveArmOnTrajectoryWorkflow': {\n        this.link += 'arm_trajectory';\n        break;\n      }\n      case 'CustomWorkflow': {\n        this.link += 'arm_trajectory';\n        break;\n      }\n      case 'MoveArmJointsWorkflow': {\n        this.link += 'arm_joints';\n        break;\n      }\n      case 'BaseMove': {\n        this.link += 'base';\n        break;\n      }\n      case 'ArmCartesian': {\n        this.link += 'arm_cartesian';\n        break;\n      }\n      case 'GripperRelease': {\n        this.link += 'gripper_release';\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n    console.log(this.link);\n  }\n}\n\n    \n\n    \n        wizard-job works!\n\n    \n\n    \n                \n                    ./wizard-job.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'wizard-job works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardJobComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardNewMethodComponent.html":{"url":"components/WizardNewMethodComponent.html","title":"component - WizardNewMethodComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardNewMethodComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts\n\n\n    \n        Description\n    \n    \n        This component is a Child Component of \"Wizard-Job\".\nIt presents the view of new the method to be added in the configurator (\"Wizard-Parent\").\nE.g. to present and enter values Angular Material Design Components where used in the view\nhttps://material.angular.io/components/categories\n\n    \n\n    \n        Extends\n    \n    \n                WizardJobComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wizard-new-method\n            \n\n            \n                styleUrls\n                ./wizard-new-method.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wizard-new-method.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabledActTimeout\n                            \n                            \n                                goalPose\n                            \n                            \n                                invertActTimeout\n                            \n                            \n                                isDisabledNext\n                            \n                            \n                                maxActTimeout\n                            \n                            \n                                minActTimeout\n                            \n                            \n                                newMethod\n                            \n                            \n                                stepActTimeout\n                            \n                            \n                                thumbLabelActTimeout\n                            \n                            \n                                title\n                            \n                            \n                                valueActTimeout\n                            \n                            \n                                verticalActTimeout\n                            \n                            \n                                counter\n                            \n                            \n                                    Private\n                                counterSub\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                    Private\n                                statusSub\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onGetPostionClick\n                            \n                            \n                                onNextClick\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onPreviousClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, eventEmitterService: WizardParentStepperService, httpRequest: HttpRequestService)\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:71\n                            \n                        \n\n                \n                    \n                            constructor - calls constructor of parent WizardJobComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For redirecting\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Workflow Information\n\n                                                        \n                                                \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Angular Material Stepper View\n\n                                                        \n                                                \n                                                \n                                                        httpRequest\n                                                  \n                                                        \n                                                                        HttpRequestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For getting actual position from robot arm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:90\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook - executed after constructor\noverrides parent ngOninit() declares additional necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onGetPostionClick\n                        \n                        \n                    \n                \n            \n            \n                \nonGetPostionClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:118\n                \n            \n\n\n            \n                \n                    requests actual position form backend and stores the value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:100\n                \n            \n\n\n            \n                \n                    overrides parent onNextClick() - updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:129\n\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nunsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:67\n\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:92\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:108\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Oberservables\nbefore redirects to \"previous\" wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:139\n\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabledActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:35\n                            \n                        \n\n                \n                    \n                        e.g. view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goalPose\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invertActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:39\n                            \n                        \n\n                \n                    \n                        e.g. view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabledNext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:71\n                            \n                        \n\n                \n                    \n                        next button - parameter for Angular Material Button  https://material.angular.io/components/button/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:43\n                            \n                        \n\n                \n                    \n                        e.g. view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:47\n                            \n                        \n\n                \n                    \n                        e.g. view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMethod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewMethod\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:31\n                            \n                        \n\n                \n                    \n                        local instance of NewMethod\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:51\n                            \n                        \n\n                \n                    \n                        e.g. view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbLabelActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:55\n                            \n                        \n\n                \n                    \n                        e.g. view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'New Method'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:27\n                            \n                        \n\n                \n                    \n                        displayed titel of the new component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:59\n                            \n                        \n\n                \n                    \n                        e.g. view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verticalActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:63\n                            \n                        \n\n                \n                    \n                        e.g. view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:35\n\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:39\n\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:21\n\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:46\n\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:50\n\n                            \n                        \n\n                \n                    \n                        Subscription for stusSub -> synchronized and shared status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:25\n\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:29\n\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WizardStepperService} from '../wizard-stepper.service';\nimport {WizardJobComponent} from '../wizard-job/wizard-job.component';\nimport {WizardParentStepperService} from '../wizard-parent/wizard-parent-stepper.service';\nimport {HttpRequestService} from '../../execution/http-request.service';\nimport {NewMethod} from '../../model/new-method.model';\n/**\n * This component is a Child Component of \"Wizard-Job\".\n *\n * It presents the view of new the method to be added in the configurator (\"Wizard-Parent\").\n * E.g. to present and enter values Angular Material Design Components where used in the view\n * {@link https://material.angular.io/components/categories}\n */\n@Component({\n  selector: 'app-wizard-new-method',\n  templateUrl: './wizard-new-method.component.html',\n  styleUrls: ['./wizard-new-method.component.css']\n})\nexport class WizardNewMethodComponent extends WizardJobComponent implements OnInit,  OnDestroy {\n  /**\n   * displayed titel of the new component\n   */\n  title = 'New Method';\n  /**\n   * local instance of NewMethod\n   */\n  newMethod: NewMethod;\n  /**\n   * e.g. view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  disabledActTimeout = false;\n  /**\n   * e.g. view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  invertActTimeout = false;\n  /**\n   * e.g. view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  maxActTimeout = 100;\n  /**\n   * e.g. view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  minActTimeout = 0;\n  /**\n   * e.g. view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  stepActTimeout = 1;\n  /**\n   * e.g. view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  thumbLabelActTimeout = true;\n  /**\n   * e.g. view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  valueActTimeout = 50;\n  /**\n   * e.g. view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  verticalActTimeout = false;\n  /*\n   * cartesian coordinates of robot component\n   */\n  goalPose;\n  /**\n   * next button - parameter for Angular Material Button  {@link https://material.angular.io/components/button/overview}\n   */\n  isDisabledNext = true;\n  /**\n   * constructor - calls constructor of parent WizardJobComponent\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   * @param {WizardParentStepperService} eventEmitterService For Sharing Angular Material Stepper View\n   * @param {HttpRequestService} httpRequest For getting actual position from robot arm\n   */\n  constructor(router: Router,\n              wizardStepperService: WizardStepperService,\n              eventEmitterService: WizardParentStepperService,\n              private httpRequest: HttpRequestService) {\n    super(router, wizardStepperService, eventEmitterService);\n  }\n  /**\n   * ngOnInit is a lifecycle hook - executed after constructor\n   *\n   * overrides parent ngOninit() declares additional necessary variables for this component\n   */\n  ngOnInit() {\n    super.ngOnInit();\n    this.newMethod = this.wizardStepperService.getWorkflowItem() as NewMethod;\n    this.valueActTimeout = this.newMethod.activationTimeout;\n    this.goalPose = this.newMethod.goalPose;\n  }\n  /**\n   * overrides parent onNextClick() - updates all necessary variables and Observables\n   * before redirects to next wizard job component\n   */\n  onNextClick(): void {\n    this.newMethod.activationTimeout = this.valueActTimeout;\n    this.wizardStepperService.updateWorkflowItem(this.newMethod);\n    if (this.counter   {\n        this.newMethod.goalPose = [];\n        this.newMethod.goalPose = responseData;\n        this.goalPose = this.newMethod.goalPose;\n        this.isDisabledNext = false;\n        console.log(this.newMethod.goalPose);\n      });\n  }\n}\n\n    \n\n    \n        {{title}}\n\n  Activation Timeout\n  \n    \n      \n      \n      \n        \n        Timeout\n      \n    \n  \n\n\n\n  Goal Position\n  \n\n  \n  \n    \n      my_location\n    \n    {{goalPose}}\n  \n\n\n\n  \n    \n      navigate_before\n    \n    \n    \n      navigate_next\n    \n    \n      navigate_next\n    \n  \n\n\n    \n\n    \n                \n                    ./wizard-new-method.component.css\n                \n                .example-container {\n  width: 600px;\n  max-width: 100%;\n  margin: 10px 10px 10px 10px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 1rem;\n}\nh1, h2, h3, h4, h5, h6{\n  margin-top:20px;\n  margin-bottom:10px;\n  margin-left: 10px;\n}\n.example-h2 {\n  margin: 10px;\n}\n\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n\n.example-margin {\n  margin: 30px;\n}\n\n.mat-slider-horizontal {\n  width: 100px;\n}\n\n.fxFlex{\n  flex: 100 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}  Activation Timeout                                        Timeout              Goal Position                my_location        {{goalPose}}              navigate_before                  navigate_next              navigate_next      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardNewMethodComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardParentComponent.html":{"url":"components/WizardParentComponent.html","title":"component - WizardParentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardParentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts\n\n\n    \n        Description\n    \n    \n        This component is the ParentView in the \"Workflow Configurator\".\nThe view of the component contains the \"wizard-stepper\" https://material.angular.io/components/stepper/overview\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }\n}\n                \n            \n\n\n            \n                selector\n                app-wizard-parent\n            \n\n            \n                styleUrls\n                ./wizard-parent.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wizard-parent.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stepper\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                goForward\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventEmitterService: WizardParentStepperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts:29\n                            \n                        \n\n                \n                    \n                            constructor needs eventEmitterService for\nAngular Material Stepper https://material.angular.io/components/stepper/overview\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goBack\n                        \n                        \n                    \n                \n            \n            \n                \ngoBack(stepper: MatStepper)\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts:80\n                \n            \n\n\n            \n                \n                    resets stepper\nAngular Material Stepper https://material.angular.io/components/stepper/overview\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stepper\n                                    \n                                            MatStepper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goForward\n                        \n                        \n                    \n                \n            \n            \n                \ngoForward(stepper: MatStepper)\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts:89\n                \n            \n\n\n            \n                \n                    checks next step of stepper and sets current step true\nAngular Material Stepper https://material.angular.io/components/stepper/overview\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stepper\n                                    \n                                            MatStepper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts:68\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook\nis called when a directive, pipe, or service is destroyed\nUse for any custom cleanup that needs to occure when the instance is destroyed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts:46\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\nexecuted after constructor\ninvokes next and back function of\nAngular Material Stepper https://material.angular.io/components/stepper/overview\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset(stepper: MatStepper)\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts:106\n                \n            \n\n\n            \n                \n                    resets stepper\nAngular Material Stepper https://material.angular.io/components/stepper/overview\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stepper\n                                    \n                                            MatStepper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('stepper', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts:29\n                            \n                        \n\n                \n                    \n                        Angular Material Stepper https://material.angular.io/components/stepper/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Workflow Configurator'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts:25\n                            \n                        \n\n                \n                    \n                        titel in view\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {STEPPER_GLOBAL_OPTIONS} from '@angular/cdk/stepper';\nimport { MatStepper } from '@angular/material';\nimport {WizardParentStepperService} from './wizard-parent-stepper.service';\n\n/**\n * This component is the ParentView in the \"Workflow Configurator\".\n * The view of the component contains the \"wizard-stepper\" {@link https://material.angular.io/components/stepper/overview}\n */\n@Component({\n  selector: 'app-wizard-parent',\n  templateUrl: './wizard-parent.component.html',\n  styleUrls: ['./wizard-parent.component.css'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue:\n      {displayDefaultIndicatorType: false}\n  }]\n})\nexport class WizardParentComponent implements OnInit, OnDestroy {\n\n  /**\n   * titel in view\n   */\n  title = 'Workflow Configurator';\n  /**\n   * Angular Material Stepper {@link https://material.angular.io/components/stepper/overview}\n   */\n  @ViewChild('stepper', {static: true}) stepper: MatStepper;\n\n  /**\n   * constructor needs eventEmitterService for\n   * Angular Material Stepper {@link https://material.angular.io/components/stepper/overview}\n   * @param {WizardParentStepperService} eventEmitterService\n   */\n  constructor(private eventEmitterService: WizardParentStepperService) {\n  }\n\n  /**\n   * ngOnInit is a lifecycle hook\n   * executed after constructor\n   *\n   * invokes next and back function of\n   * Angular Material Stepper {@link https://material.angular.io/components/stepper/overview}\n   */\n  ngOnInit() {\n    console.log(this.eventEmitterService.subsNextVar);\n      this.eventEmitterService.subsNextVar = this.eventEmitterService.invokeNextFunction\n        .subscribe((name: string) => {\n        this.goForward(this.stepper);\n        console.log(this.stepper);\n      });\n      this.eventEmitterService.subsBackVar = this.eventEmitterService.invokeBackFunction\n        .subscribe((name: string) => {\n          this.goBack(this.stepper);\n          console.log(this.stepper);\n        });\n    console.log(this.eventEmitterService.subsNextVar);\n    console.log('OnInit wurde ausgführt');\n  }\n  /**\n   * ngOnDestroy is a lifecycle hook\n   *\n   * is called when a directive, pipe, or service is destroyed\n   *\n   * Use for any custom cleanup that needs to occure when the instance is destroyed\n   */\n  ngOnDestroy() {\n    this.eventEmitterService.subsNextVar.unsubscribe();\n    this.eventEmitterService.subsBackVar.unsubscribe();\n    this.reset(this.stepper);\n    console.log('OnDestroy wurde ausgeführt');\n  }\n  /**\n   * resets stepper\n   *\n   * Angular Material Stepper {@link https://material.angular.io/components/stepper/overview}\n   * @param {MatStepper} stepper\n   */\n  goBack(stepper: MatStepper) {\n    stepper.reset();\n    console.log('GoBAck wurde ausgefürht');\n  }\n  /**\n   * checks next step of stepper and sets current step true\n   * Angular Material Stepper {@link https://material.angular.io/components/stepper/overview}\n   * @param {MatStepper} stepper\n   */\n  goForward(stepper: MatStepper) {\n    if (stepper.selectedIndex  {\n        stepper.next();\n      }, 1);\n    } else if (stepper.selectedIndex === 2) {\n      stepper.selected.completed = true;\n    }\n    console.log('Forward wurde ausgefürht');\n  }\n  /**\n   * resets stepper\n   *\n   * Angular Material Stepper {@link https://material.angular.io/components/stepper/overview}\n   * @param {MatStepper} stepper\n   */\n  reset(stepper: MatStepper) {\n    stepper.reset();\n  }\n\n}\n\n    \n\n    \n        \n\n   settings \n  \n  {{title}}\n  \n\n\n\n\n  \n  \n  \n  \n  \n  \n  \n  \n    call_end\n  \n  \n    forum\n  \n\n\n\n\n    \n\n    \n                \n                    ./wizard-parent.component.css\n                \n                ::ng-deep .mat-horizontal-stepper-header{\n  pointer-events: none !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   settings     {{title}}                      call_end        forum  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardParentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WizardParentStepperService.html":{"url":"injectables/WizardParentStepperService.html","title":"injectable - WizardParentStepperService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WizardParentStepperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/wizard-stepper/wizard-parent/wizard-parent-stepper.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is only for the Angular Material Stepper https://material.angular.io/components/stepper/overview\nThe service changes the stepper's property and  keeps them synchronized\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                invokeBackFunction\n                            \n                            \n                                invokeNextFunction\n                            \n                            \n                                subsBackVar\n                            \n                            \n                                subsNextVar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onStepperBackClick\n                            \n                            \n                                onStepperNextClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-parent/wizard-parent-stepper.service.ts:28\n                            \n                        \n\n                \n                    \n                            default constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onStepperBackClick\n                        \n                        \n                    \n                \n            \n            \n                \nonStepperBackClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent-stepper.service.ts:44\n                \n            \n\n\n            \n                \n                    to go one step back in stepper\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onStepperNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonStepperNextClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent-stepper.service.ts:38\n                \n            \n\n\n            \n                \n                    to go to next step in stepper\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeBackFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent-stepper.service.ts:20\n                            \n                        \n\n                \n                    \n                        EventEmitter for Back\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeNextFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent-stepper.service.ts:16\n                            \n                        \n\n                \n                    \n                        EventEmitter for Next\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsBackVar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent-stepper.service.ts:28\n                            \n                        \n\n                \n                    \n                        Subscription for Back\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsNextVar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent-stepper.service.ts:24\n                            \n                        \n\n                \n                    \n                        Subscription for Next\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\n/**\n * This service is only for the Angular Material Stepper {@link https://material.angular.io/components/stepper/overview}\n *\n * The service changes the stepper's property and  keeps them synchronized\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WizardParentStepperService {\n  /**\n   * EventEmitter for Next\n   */\n  invokeNextFunction = new EventEmitter();\n  /**\n   * EventEmitter for Back\n   */\n  invokeBackFunction = new EventEmitter();\n  /**\n   * Subscription for Next\n   */\n  subsNextVar: Subscription;\n  /**\n   * Subscription for Back\n   */\n  subsBackVar: Subscription;\n\n  /**\n   * default constructor\n   */\n  constructor() { }\n\n  /**\n   * to go to next step in stepper\n   */\n  onStepperNextClick() {\n    this.invokeNextFunction.emit();\n  }\n  /**\n   * to go one step back in stepper\n   */\n  onStepperBackClick() {\n    this.invokeBackFunction.emit();\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WizardStepperService.html":{"url":"injectables/WizardStepperService.html","title":"injectable - WizardStepperService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WizardStepperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/wizard-stepper/wizard-stepper.service.ts\n        \n\n            \n                Description\n            \n            \n                this service keeps\n\nworkflow (list of jobs with all parameters)\ncounter (index of current job in workflwo displayed)\njobs (list of job names in workflow)\n\nsynchronized\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                counter\n                            \n                            \n                                    Private\n                                counterListener\n                            \n                            \n                                    Private\n                                jobs\n                            \n                            \n                                    Private\n                                jobsUpdated\n                            \n                            \n                                    Private\n                                status\n                            \n                            \n                                    Private\n                                statusListener\n                            \n                            \n                                    Private\n                                workflow\n                            \n                            \n                                    Private\n                                workflowListener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseCount\n                            \n                            \n                                getCounter\n                            \n                            \n                                getCounterListener\n                            \n                            \n                                getJobs\n                            \n                            \n                                getJobsListener\n                            \n                            \n                                getStatus\n                            \n                            \n                                getStatusListener\n                            \n                            \n                                getWorkflow\n                            \n                            \n                                getWorkflowItem\n                            \n                            \n                                getWorkflowListener\n                            \n                            \n                                increaseCount\n                            \n                            \n                                updateCount\n                            \n                            \n                                updateJob\n                            \n                            \n                                updateStatus\n                            \n                            \n                                updateWorkflow\n                            \n                            \n                                updateWorkflowItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-stepper.service.ts:50\n                            \n                        \n\n                \n                    \n                            default constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decreaseCount\n                        \n                        \n                    \n                \n            \n            \n                \ndecreaseCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:116\n                \n            \n\n\n            \n                \n                    decreases counterListener\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCounter\n                        \n                        \n                    \n                \n            \n            \n                \ngetCounter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:104\n                \n            \n\n\n            \n                \n                    Getter for locally stored counter\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The locally stored counter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCounterListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetCounterListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:97\n                \n            \n\n\n            \n                \n                    Getter for counterListener from Observable\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The counterListener from Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getJobs\n                        \n                        \n                    \n                \n            \n            \n                \ngetJobs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:138\n                \n            \n\n\n            \n                \n                    Getter for locally store jobs\n\n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        The locally stored jobs\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getJobsListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetJobsListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:131\n                \n            \n\n\n            \n                \n                    Getter for jobsUpdated from Observable\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The jobsUpdated from Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStatus\n                        \n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:160\n                \n            \n\n\n            \n                \n                    Getter for locally stored status\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The locally stored status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStatusListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetStatusListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:153\n                \n            \n\n\n            \n                \n                    Getter for statusListener from Observable\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The statusListener from Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWorkflow\n                        \n                        \n                    \n                \n            \n            \n                \ngetWorkflow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:66\n                \n            \n\n\n            \n                \n                    Getter for locally stored workflow\n\n\n                    \n                    \n                    \n                        Returns :         Workflow\n\n                    \n                    \n                        The locally stored workflow\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWorkflowItem\n                        \n                        \n                    \n                \n            \n            \n                \ngetWorkflowItem()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Base\n\n                    \n                    \n                        The locally stored \"current\" job in workflowlsit\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWorkflowListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetWorkflowListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:59\n                \n            \n\n\n            \n                \n                    Getter for workflowListener from Observable\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The workflowListener from Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            increaseCount\n                        \n                        \n                    \n                \n            \n            \n                \nincreaseCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:110\n                \n            \n\n\n            \n                \n                    increases counterListener\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCount\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCount(counter: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:123\n                \n            \n\n\n            \n                \n                    Setter for local and observed counter resp. counterListener\n\n@param {number} counter\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    counter\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateJob\n                        \n                        \n                    \n                \n            \n            \n                \nupdateJob(jobs: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:145\n                \n            \n\n\n            \n                \n                    Setter for local and observed jobs resp. jobsUpdated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jobs\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateStatus\n                        \n                        \n                    \n                \n            \n            \n                \nupdateStatus(status: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:167\n                \n            \n\n\n            \n                \n                    Setter for local and observed status\n\n@param {string} status\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateWorkflow\n                        \n                        \n                    \n                \n            \n            \n                \nupdateWorkflow(workflow: Workflow)\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:80\n                \n            \n\n\n            \n                \n                    Setter for local and observed workflow resp. workflowListener\n\n@param {Workflow} workflow\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workflow\n                                    \n                                                Workflow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateWorkflowItem\n                        \n                        \n                    \n                \n            \n            \n                \nupdateWorkflowItem(item: Base)\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:89\n                \n            \n\n\n            \n                \n                    Setter for local and observed jobs\n\n@param {Base} item\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Base\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:22\n                            \n                        \n\n                \n                    \n                        index of current displayed job\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:26\n                            \n                        \n\n                \n                    \n                        listens current index of displayed job\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            jobs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:38\n                            \n                        \n\n                \n                    \n                        name array jobs in workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            jobsUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:42\n                            \n                        \n\n                \n                    \n                        listen to update of jobs array\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:46\n                            \n                        \n\n                \n                    \n                        which status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:50\n                            \n                        \n\n                \n                    \n                        status listener\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:30\n                            \n                        \n\n                \n                    \n                        locally Workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:34\n                            \n                        \n\n                \n                    \n                        Workflow Listener\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {Workflow} from '../model/workflow.model';\nimport {Base} from '../model/base.model';\n\n/**\n * this service keeps\n * 1. workflow (list of jobs with all parameters)\n * 2. counter (index of current job in workflwo displayed)\n * 3. jobs (list of job names in workflow)\n *\n * synchronized\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class WizardStepperService {\n  /**\n   * index of current displayed job\n   */\n  private counter: number;\n  /**\n   * listens current index of displayed job\n   */\n  private counterListener = new Subject();\n  /**\n   * locally Workflow\n   */\n  private workflow: Workflow;\n  /**\n   * Workflow Listener\n   */\n  private workflowListener = new Subject();\n  /**\n   * name array jobs in workflow\n   */\n  private jobs: string[] = [];\n  /**\n   * listen to update of jobs array\n   */\n  private jobsUpdated = new Subject();\n  /**\n   * which status\n   */\n  private status: string;\n  /**\n   * status listener\n   */\n  private statusListener  = new Subject();\n  /**\n   * default constructor\n   */\n  constructor() { }\n  /**\n   * Getter for workflowListener from Observable\n   * @returns The workflowListener from Observable\n   */\n  getWorkflowListener(): Observable {\n    return  this.workflowListener.asObservable();\n  }\n  /**\n   * Getter for locally stored workflow\n   * @returns The locally stored workflow\n   */\n  getWorkflow(): Workflow {\n    return this.workflow;\n  }\n  /**\n   * @returns The locally stored \"current\" job in workflowlsit\n   */\n  getWorkflowItem(): Base {\n    console.log(this.workflow.getCurrentJob(this.counter));\n    return this.workflow.getCurrentJob(this.counter);\n  }\n  /**\n   * Setter for local and observed workflow resp. workflowListener\n   *  * @param {Workflow} workflow\n   */\n  updateWorkflow(workflow: Workflow) {\n    this.workflow = workflow;\n    this.workflowListener.next(this.workflow);\n    console.log(this.workflow);\n  }\n  /**\n   * Setter for local and observed jobs\n   *  * @param {Base} item\n   */\n  updateWorkflowItem(item: Base) {\n    this.workflow.updateJobs(item, this.counter);\n    this.workflowListener.next(this.workflow);\n  }\n  /**\n   * Getter for counterListener from Observable\n   * @returns The counterListener from Observable\n   */\n  getCounterListener(): Observable {\n    return this.counterListener.asObservable();\n  }\n  /**\n   * Getter for locally stored counter\n   * @returns The locally stored counter\n   */\n  getCounter(): number {\n    return this.counter;\n  }\n  /**\n   * increases counterListener\n   */\n  increaseCount() {\n    this.counterListener.next(++ this.counter);\n  }\n  /**\n   * decreases counterListener\n   */\n  decreaseCount() {\n    this.counterListener.next(-- this.counter);\n  }\n  /**\n   * Setter for local and observed counter resp. counterListener\n   *  * @param {number} counter\n   */\n  updateCount(counter: number) {\n    this.counter = counter;\n    this.counterListener.next(this.counter);\n  }\n  /**\n   * Getter for jobsUpdated from Observable\n   * @returns The jobsUpdated from Observable\n   */\n  getJobsListener(): Observable {\n    return this.jobsUpdated.asObservable();\n  }\n  /**\n   * Getter for locally store jobs\n   * @returns The locally stored jobs\n   */\n  getJobs(): string[] {\n    return this.jobs;\n  }\n  /**\n   * Setter for local and observed jobs resp. jobsUpdated\n   * @param {string[]} jobs\n   */\n  updateJob(jobs: string[]) {\n    this.jobs = jobs;\n    this.jobsUpdated.next([...this.jobs]);\n  }\n  /**\n   * Getter for statusListener from Observable\n   * @returns The statusListener from Observable\n   */\n  getStatusListener(): Observable {\n    return this.statusListener.asObservable();\n  }\n  /**\n   * Getter for locally stored status\n   * @returns The locally stored status\n   */\n  getStatus(): string {\n    return this.status;\n  }\n  /**\n   * Setter for local and observed status\n   *  * @param {string} status\n   */\n  updateStatus(status: string) {\n    this.status = status;\n    this.statusListener.next(this.status);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Workflow.html":{"url":"classes/Workflow.html","title":"class - Workflow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Workflow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/workflow.model.ts\n        \n\n            \n                Description\n            \n            \n                This class is a model for a workflow.\nThis class contains all properties, methods to handle a worklow internally.\nE.g. adding selected jobs to the workflow\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _created_at\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _jobsObjects\n                            \n                            \n                                    Private\n                                _name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addJobs\n                            \n                            \n                                addJobsFormWorkflow\n                            \n                            \n                                getCurrentJob\n                            \n                            \n                                getJobName\n                            \n                            \n                                getJobs\n                            \n                            \n                                getJobsLength\n                            \n                            \n                                updateJobs\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    id\n                                \n                                \n                                    created_at\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/workflow.model.ts:33\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The name of the workflow\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/workflow.model.ts:29\n                            \n                        \n\n                \n                    \n                        creation date of workflow ind DB (backend)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/workflow.model.ts:21\n                            \n                        \n\n                \n                    \n                        id of workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _jobsObjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Base[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/workflow.model.ts:33\n                            \n                        \n\n                \n                    \n                        containing jobs of workflow. Array of jobs in this workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/workflow.model.ts:25\n                            \n                        \n\n                \n                    \n                        name of workflow\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addJobs\n                        \n                        \n                    \n                \n            \n            \n                \naddJobs(jobsName: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/workflow.model.ts:52\n                \n            \n\n\n            \n                \n                    adds all jobs in list to _jobsObjects including instancing the single jobs\nThis methods is used in case of creating the workflow first time.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jobsName\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An Array of the name of the selected jobs\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addJobsFormWorkflow\n                        \n                        \n                    \n                \n            \n            \n                \naddJobsFormWorkflow(job: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/workflow.model.ts:99\n                \n            \n\n\n            \n                \n                    Adds all jobs in list to _jobsObjects including instancing the single jobs\nThis methods is used when receiving alredy stored workflow from backend\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentJob\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentJob(count: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/workflow.model.ts:152\n                \n            \n\n\n            \n                \n                    Getter for specific job Object in _jobsObjects array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The index in _jobsObjects\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Base\n\n                    \n                    \n                        The job object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getJobName\n                        \n                        \n                    \n                \n            \n            \n                \ngetJobName(count: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/workflow.model.ts:161\n                \n            \n\n\n            \n                \n                    Getter for name of a specific job Object in _jobsObjects array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The index in _jobsObjects\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The job object's name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getJobs\n                        \n                        \n                    \n                \n            \n            \n                \ngetJobs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/workflow.model.ts:168\n                \n            \n\n\n            \n                \n                    Getter for _jobsObjects (all job objects) array\n\n\n                    \n                    \n                    \n                        Returns :         Base[]\n\n                    \n                    \n                        The _jobObjects\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getJobsLength\n                        \n                        \n                    \n                \n            \n            \n                \ngetJobsLength()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/workflow.model.ts:175\n                \n            \n\n\n            \n                \n                    Getter for the length of _jobsObjects array\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The length of _jobObjects\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateJobs\n                        \n                        \n                    \n                \n            \n            \n                \nupdateJobs(jobs: Base, count: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/workflow.model.ts:144\n                \n            \n\n\n            \n                \n                    Updates a jobs Object in the _jobsObjects array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jobs\n                                    \n                                                Base\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The updated job Object\n\n                                    \n                                \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The index in _jobsObjects\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/workflow.model.ts:182\n                                \n                            \n                    \n                        \n                                Getter for the _name of the workflow\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/workflow.model.ts:189\n                                \n                            \n                    \n                        \n                                Setter for the _name of the workflow\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    name of workflow\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/workflow.model.ts:196\n                                \n                            \n                    \n                        \n                                Getter for the _id of the workflow\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/workflow.model.ts:203\n                                \n                            \n                    \n                        \n                                Setter for the _id of the workflow\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    _id of workflow\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        created_at\n                    \n                \n\n                \n                    \n                        getcreated_at()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/workflow.model.ts:210\n                                \n                            \n                    \n                        \n                                Getter for the _created_at of the workflow\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setcreated_at(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/workflow.model.ts:217\n                                \n                            \n                    \n                        \n                                Setter for the _created_at of the workflow\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    creation date of workflow\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Base} from './base.model';\nimport {GripperGrip} from './gripper-grip.model';\nimport {GripperRelease} from './gripper-release.model';\nimport {BaseMove} from './base-move.model';\nimport {ArmTrajectory} from './arm-trajectory.model';\nimport {ArmJoint} from './arm-joint.model';\nimport {ArmCartesian} from './arm-cartesian.model';\n/**\n * NewMethod must be imported\n */\nimport {NewMethod} from './new-method.model';\n/**\n * This class is a model for a workflow.\n * This class contains all properties, methods to handle a worklow internally.\n * E.g. adding selected jobs to the workflow\n */\nexport class Workflow {\n  /**\n   * id of workflow\n   */\n    private _id: string;\n  /**\n   * name of workflow\n   */\n    private _name: string;\n  /**\n   * creation date of workflow ind DB (backend)\n   */\n    private _created_at: number;\n  /**\n   * containing jobs of workflow. Array of jobs in this workflow\n   */\n    private _jobsObjects: Base [];\n\n  /**\n   * constructor\n   * @param {string} name The name of the workflow\n   */\n    constructor(name: string) {\n      this._id = '0';\n      this._name = name;\n      this._created_at = Date.now();\n      this._jobsObjects = [];\n    }\n\n  /**\n   * adds all jobs in list to _jobsObjects including instancing the single jobs\n   *\n   * This methods is used in case of creating the workflow first time.\n   * @param {string[]} jobsName An Array of the name of the selected jobs\n   */\n    addJobs(jobsName: string[]) {\n      for (const jobName of jobsName) {\n        switch (jobName) {\n          /**\n           * Here you have to add a new case for NewMethod\n           */\n          case 'NewMethodWorkflow': {\n            this._jobsObjects.push(new NewMethod(jobsName));\n            break;\n          }\n          case 'GripperGripWorkflow': {\n            this._jobsObjects.push(new GripperGrip(jobsName));\n            break;\n          }\n          case 'MoveArmOnTrajectoryWorkflow': {\n            this._jobsObjects.push(new ArmTrajectory());\n            break;\n          }\n          case 'MoveArmJointsWorkflow': {\n            this._jobsObjects.push(new ArmJoint());\n            break;\n          }\n          case 'MoveToPositionWorkflow': {\n            this._jobsObjects.push(new BaseMove(jobsName));\n            break;\n          }\n          case 'MoveArmCartesianWorkflow': {\n            this._jobsObjects.push(new ArmCartesian(jobsName));\n            break;\n          }\n          case 'GripperReleaseWorkflow': {\n            this._jobsObjects.push(new GripperRelease(jobsName));\n            break;\n          }\n          default: {\n            this._jobsObjects.push(new BaseMove(jobsName));\n            break;\n          }\n        }\n      }\n    }\n  /**\n   * Adds all jobs in list to _jobsObjects including instancing the single jobs\n   *\n   * This methods is used when receiving alredy stored workflow from backend\n   * @param {string[]} jobsName An Array of the name of the selected jobs\n   */\n  addJobsFormWorkflow(job: any) {\n      switch (job._name) {\n        /**\n         * Here you have to add a new case for NewMethod\n         */\n        case 'NewMethod': {\n          this._jobsObjects.push(new NewMethod(job));\n          break;\n        }\n        case 'GripperGrip': {\n          console.log(job);\n          this._jobsObjects.push(new GripperGrip(job));\n          break;\n        }\n        case 'MoveArmOnTrajectoryWorkflow': {\n          this._jobsObjects.push(new ArmTrajectory());\n          break;\n        }\n        case 'MoveArmJointsWorkflow': {\n          this._jobsObjects.push(new ArmJoint());\n          break;\n        }\n        case 'MoveToPositionWorkflow': {\n          this._jobsObjects.push(new BaseMove(job));\n          break;\n        }\n        case 'ArmCartesian': {\n          this._jobsObjects.push(new ArmCartesian(job));\n          break;\n        }\n        case 'GripperRelease': {\n          this._jobsObjects.push(new GripperRelease(job));\n          break;\n        }\n        default: {\n          this._jobsObjects.push(new BaseMove(job));\n          break;\n        }\n    }\n  }\n  /**\n   * Updates a jobs Object in the _jobsObjects array\n   * @param {Base} jobs The updated job Object\n   * @param {number} count The index in _jobsObjects\n   */\n    updateJobs(jobs: Base, count: number) {\n      this._jobsObjects[count] = jobs;\n    }\n  /**\n   * Getter for specific job Object in _jobsObjects array\n   * @param {number} count The index in _jobsObjects\n   * @returns The job object\n   */\n    getCurrentJob(count: number): Base {\n      console.log(this._jobsObjects[count]);\n      return this._jobsObjects[count];\n    }\n  /**\n   * Getter for name of a specific job Object in _jobsObjects array\n   * @param {number} count The index in _jobsObjects\n   * @returns The job object's name\n   */\n    getJobName(count: number): string {\n      return this._jobsObjects[count].name;\n    }\n  /**\n   * Getter for _jobsObjects (all job objects) array\n   * @returns The _jobObjects\n   */\n    getJobs(): Base [] {\n      return this._jobsObjects;\n    }\n  /**\n   * Getter for the length of _jobsObjects array\n   * @returns The length of _jobObjects\n   */\n    getJobsLength(): number {\n      return this._jobsObjects.length;\n    }\n  /**\n   * Getter for the _name of the workflow\n   * @returns The _name of the workflow\n   */\n    get name(): string {\n      return this._name;\n    }\n  /**\n   * Setter for the _name of the workflow\n   * @param {string} value name of workflow\n   */\n    set name(value: string) {\n      this._name = value;\n    }\n  /**\n   * Getter for the _id of the workflow\n   * @returns The _id of the workflow\n   */\n    get id(): string {\n      return this._id;\n    }\n  /**\n   * Setter for the _id of the workflow\n   * @param {string} value _id of workflow\n   */\n    set id(value: string) {\n      this._id = value;\n    }\n  /**\n   * Getter for the _created_at of the workflow\n   * @returns The creation date of the workflow\n   */\n    get created_at(): number {\n      return this._created_at;\n    }\n  /**\n   * Setter for the _created_at of the workflow\n   * @param {string} value creation date of workflow\n   */\n    set created_at(value: number) {\n      this._created_at = value;\n    }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkflowListElement.html":{"url":"classes/WorkflowListElement.html","title":"class - WorkflowListElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkflowListElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/workflow-list-element.model.ts\n        \n\n            \n                Description\n            \n            \n                This class is needed especially for workflow-table component.\nIt represents one entry (WorkflowListElement) in the presented workflow table.\nThis class contains all properties, methods to handle a worklow internally.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _created_at\n                            \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                _name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/model/workflow-list-element.model.ts:18\n                            \n                        \n\n                \n                    \n                            default constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/workflow-list-element.model.ts:18\n                            \n                        \n\n                \n                    \n                        creation date of one worktable entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/workflow-list-element.model.ts:10\n                            \n                        \n\n                \n                    \n                        id of the worktable entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/workflow-list-element.model.ts:14\n                            \n                        \n\n                \n                    \n                        name of the worktable entry\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class WorkflowListElement {\n  /**\n   * id of the worktable entry\n   */\n  public _id: string;\n  /**\n   * name of the worktable entry\n   */\n  public _name: string;\n  /**\n   * creation date of one worktable entry\n   */\n  public _created_at: number;\n  /**\n   * default constructor\n   */\n  constructor() {\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkflowTableComponent.html":{"url":"components/WorkflowTableComponent.html","title":"component - WorkflowTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WorkflowTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/workflow-table/workflow-table.component.ts\n\n\n    \n        Description\n    \n    \n        This component is the first page the users see.\nIt presents all workflows, which are stored in backend, in a list.\nVia clicking icons all CRUD operations are possible for the workflows\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-workflow-table\n            \n\n            \n                styleUrls\n                ./workflow-table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./workflow-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                workflow\n                            \n                            \n                                workflowList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNew\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteClick\n                            \n                            \n                                onPlayClick\n                            \n                            \n                                onUpdateClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, httpRequest: HttpRequestService)\n                    \n                \n                        \n                            \n                                Defined in src/app/workflow-table/workflow-table.component.ts:48\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For redirecting\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Workflow Information\n\n                                                        \n                                                \n                                                \n                                                        httpRequest\n                                                  \n                                                        \n                                                                        HttpRequestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For communicating with backend\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNew\n                        \n                        \n                    \n                \n            \n            \n                \naddNew()\n                \n            \n\n\n            \n                \n                    Defined in src/app/workflow-table/workflow-table.component.ts:77\n                \n            \n\n\n            \n                \n                    redirects to available-jobs component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/workflow-table/workflow-table.component.ts:66\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDeleteClick\n                        \n                        \n                    \n                \n            \n            \n                \nonDeleteClick(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/workflow-table/workflow-table.component.ts:118\n                \n            \n\n\n            \n                \n                    deletes workflow from workflow-table and\nsends the wf-id to be deleted to backend\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID of selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPlayClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPlayClick(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/workflow-table/workflow-table.component.ts:132\n                \n            \n\n\n            \n                \n                    requests workflow data for selected workflow from backend\nand stores the wf data in \"workflow\" and\nredirects to execution-run component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID of selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdateClick\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdateClick(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/workflow-table/workflow-table.component.ts:89\n                \n            \n\n\n            \n                \n                    requests workflow data for selected workflow from backend\nand stores the wf data in \"workflow\" and\nredirects to component of 1st job in workflow list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID of selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/workflow-table/workflow-table.component.ts:159\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.workflowList\n                        \n                    \n                        \n                            \n                                    Defined in src/app/workflow-table/workflow-table.component.ts:48\n                            \n                        \n\n                \n                    \n                        view variable - list of all display workflows in overview table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['id', 'name', 'created', 'action']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/workflow-table/workflow-table.component.ts:44\n                            \n                        \n\n                \n                    \n                        column names in view\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/workflow-table/workflow-table.component.ts:30\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/workflow-table/workflow-table.component.ts:40\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/workflow-table/workflow-table.component.ts:34\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflowList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WorkflowListElement[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/workflow-table/workflow-table.component.ts:24\n                            \n                        \n\n                \n                    \n                        list of all display workflows in overview table\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WorkflowListElement} from '../model/workflow-list-element.model';\nimport {Subscription} from 'rxjs';\nimport {HttpRequestService} from '../execution/http-request.service';\nimport {Workflow} from '../model/workflow.model';\nimport {WizardStepperService} from '../wizard-stepper/wizard-stepper.service';\n\n/**\n * This component is the first page the users see.\n *\n * It presents all workflows, which are stored in backend, in a list.\n * Via clicking icons all CRUD operations are possible for the workflows\n */\n@Component({\n  selector: 'app-workflow-table',\n  templateUrl: './workflow-table.component.html',\n  styleUrls: ['./workflow-table.component.css']\n})\nexport class WorkflowTableComponent implements OnInit {\n  /**\n   * list of all display workflows in overview table\n   */\n  workflowList: WorkflowListElement[] = [];\n\n  // private workflowListSub: Subscription;\n  /**\n   * string used for routing/redirecting\n   */\n  link: string;\n  /**\n   * locally stored workflow\n   */\n  workflow: Workflow;\n  /**\n   * locally stored status e.g. 'create'\n   *\n   * important to navigate through wizard via back and forward buttons\n   */\n  status: string;\n  /**\n   * column names in view\n   */\n  displayedColumns: string[] = ['id', 'name', 'created', 'action'];\n  /**\n   * view variable - list of all display workflows in overview table\n   */\n  dataSource = this.workflowList;\n  /**\n   * constructor\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   * @param {HttpRequestService} httpRequest For communicating with backend\n   */\n  constructor(protected router: Router,\n              private wizardStepperService: WizardStepperService,\n              private httpRequest: HttpRequestService,\n  ) {\n  }\n  /**\n   * ngOnInit is a lifecycle hook\n   * - executed after constructor\n   *\n   * declaration of all necessary variables for this component\n   */\n  ngOnInit() {\n    this.httpRequest.getAllWorkflows();\n    this.httpRequest.getWorkflowListUpdateListener()\n      .subscribe((workflowList: WorkflowListElement[]) => {\n        this.workflowList = workflowList;\n        this.dataSource = this.workflowList;\n      });\n  }\n  /**\n   * redirects to available-jobs component\n   */\n  addNew(): void {\n    this.status = 'create';\n    this.wizardStepperService.updateStatus(this.status);\n    console.log(this.wizardStepperService.getStatus());\n    this.router.navigate(['jobs']);\n  }\n  /**\n   * requests workflow data for selected workflow from backend\n   * and stores the wf data in \"workflow\" and\n   * redirects to component of 1st job in workflow list\n   * @param {number} id ID of selected workflow\n   */\n  onUpdateClick(id: number): void {\n    this.status = 'update';\n    this.httpRequest.getWorkflow(id).subscribe((data: any) => {\n      this.workflow = new Workflow(data._name);\n      this.workflow.id = data._id;\n      this.workflow.created_at = data._created_at;\n\n      for (const workflow of data._jobsObjects) {\n        console.log(workflow._name);\n        console.log(workflow);\n        this.workflow.addJobsFormWorkflow(workflow);\n      }\n      console.log(this.workflow);\n\n      this.wizardStepperService.updateWorkflow(this.workflow);\n      this.wizardStepperService.updateCount(0);\n      this.wizardStepperService.updateStatus(this.status);\n      console.log(data);\n      console.log(this.wizardStepperService.getCounter());\n      console.log(this.wizardStepperService.getStatus());\n      this.selectNextJob(this.workflow.getJobName(0));\n      this.router.navigate([this.link]);\n    });\n  }\n  /**\n   * deletes workflow from workflow-table and\n   * sends the wf-id to be deleted to backend\n   * @param {number} id ID of selected workflow\n   */\n  onDeleteClick(id: number): void {\n    this.httpRequest.deleteWorkflow(id).subscribe((data: any) => {\n      console.log(data);\n      setTimeout(() => {\n        this.httpRequest.getAllWorkflows();\n      }, 500);\n    });\n  }\n  /**\n   * requests workflow data for selected workflow from backend\n   * and stores the wf data in \"workflow\" and\n   * redirects to execution-run component\n   * @param {number} id ID of selected workflow\n   */\n  onPlayClick(id: number): void {\n    this.status = 'play';\n    this.httpRequest.getWorkflow(id).subscribe((data: any) => {\n      this.workflow = new Workflow(data._name);\n      this.workflow.id = data._id;\n      this.workflow.created_at = data._created_at;\n\n      for (const workflow of data._jobsObjects) {\n        console.log(workflow._name);\n        console.log(workflow);\n        this.workflow.addJobsFormWorkflow(workflow);\n      }\n      console.log(this.workflow);\n      this.wizardStepperService.updateWorkflow(this.workflow);\n      this.wizardStepperService.updateCount(0);\n      this.wizardStepperService.updateStatus(this.status);\n      console.log(data);\n      console.log(this.wizardStepperService.getCounter());\n      console.log(this.wizardStepperService.getStatus());\n      this.link = 'wizard/run';\n      this.router.navigate([this.link]);\n    });\n  }\n  /**\n   * stores 1st job's routing-link under link\n   * @param {string} name Name of 1st job in selected workflow\n   */\n  selectNextJob(job: string) {\n    this.link = 'wizard/';\n    switch (job) {\n      case 'GripperGrip': {\n        this.link += 'gripper_grip';\n        break;\n      }\n      case 'MoveArmOnTrajectoryWorkflow': {\n        this.link += 'arm_trajectory';\n        break;\n      }\n      case 'CustomWorkflow': {\n        this.link += 'arm_trajectory';\n        break;\n      }\n      case 'MoveArmJointsWorkflow': {\n        this.link += 'arm_joints';\n        break;\n      }\n      case 'BaseMove': {\n        this.link += 'base';\n        break;\n      }\n      case 'ArmCartesian': {\n        this.link += 'arm_cartesian';\n        break;\n      }\n      case 'GripperRelease': {\n        this.link += 'gripper_release';\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n    console.log(this.link);\n  }\n}\n\n    \n\n    \n        \n\n  \n\n  \n  \n     id \n     {{element._id}} \n  \n\n  \n  \n     name \n     {{element._name}} \n  \n\n  \n  \n     created \n     {{element._created_at | date}} \n  \n\n\n  \n  \n    \n      \n         add \n      \n    \n\n    \n      \n         play_circle_outline\n      \n      \n         border_color\n      \n      \n        delete_forever\n      \n\n    \n  \n\n  \n  \n\n\n\n    \n\n    \n                \n                    ./workflow-table.component.css\n                \n                table {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           id      {{element._id}}            name      {{element._name}}            created      {{element._created_at | date}}                          add                              play_circle_outline                     border_color                    delete_forever                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WorkflowTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/execution/execution-run/execution-run.component.ts\n            \n            component\n            ExecutionRunComponent\n            \n                96 %\n                (29/30)\n            \n        \n        \n            \n                \n                src/app/execution/http-request.service.ts\n            \n            injectable\n            HttpRequestService\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/jobs/available-jobs/available-jobs.component.ts\n            \n            component\n            AvailableJobsComponent\n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                src/app/jobs/available-jobs/available-jobs.component.ts\n            \n            class\n            MyErrorStateMatcher\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/jobs/move.data.ts\n            \n            class\n            Move\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/model/arm-cartesian.model.ts\n            \n            class\n            ArmCartesian\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/model/arm-joint.model.ts\n            \n            class\n            ArmJoint\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/model/arm-trajectory.model.ts\n            \n            class\n            ArmTrajectory\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/model/base-move.model.ts\n            \n            class\n            BaseMove\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/model/base.model.ts\n            \n            class\n            Base\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/model/gripper-grip.model.ts\n            \n            class\n            GripperGrip\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/model/gripper-release.model.ts\n            \n            class\n            GripperRelease\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/model/new-method.model.ts\n            \n            class\n            NewMethod\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/model/workflow-list-element.model.ts\n            \n            class\n            WorkflowListElement\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/model/workflow.model.ts\n            \n            class\n            Workflow\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/no-page-found/no-page-found.component.ts\n            \n            component\n            NoPageFoundComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/sockets/websocket.service.ts\n            \n            class\n            SocketDataService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts\n            \n            component\n            WizardArmCartesianComponent\n            \n                96 %\n                (28/29)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts\n            \n            component\n            WizardArmJoinsComponent\n            \n                91 %\n                (21/23)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts\n            \n            component\n            WizardArmTrajectoryComponent\n            \n                91 %\n                (21/23)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-base/wizard-base.component.ts\n            \n            component\n            WizardBaseComponent\n            \n                96 %\n                (28/29)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts\n            \n            component\n            WizardGripperGripComponent\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts\n            \n            component\n            WizardGripperReleaseComponent\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-job/wizard-job.component.ts\n            \n            component\n            WizardJobComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts\n            \n            component\n            WizardNewMethodComponent\n            \n                96 %\n                (28/29)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-parent/wizard-parent-stepper.service.ts\n            \n            injectable\n            WizardParentStepperService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts\n            \n            component\n            WizardParentComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-stepper.service.ts\n            \n            injectable\n            WizardStepperService\n            \n                96 %\n                (25/26)\n            \n        \n        \n            \n                \n                src/app/workflow-table/workflow-table.component.ts\n            \n            component\n            WorkflowTableComponent\n            \n                100 %\n                (14/14)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.1.3\n        \n            @angular/cdk : ^8.2.3\n        \n            @angular/common : ^8.1.3\n        \n            @angular/compiler : ^8.1.3\n        \n            @angular/core : ^8.1.3\n        \n            @angular/flex-layout : ^8.0.0-beta.27\n        \n            @angular/forms : ^8.1.3\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ^8.1.3\n        \n            @angular/platform-browser-dynamic : ^8.1.3\n        \n            @angular/router : ^8.1.3\n        \n            hammerjs : ^2.0.8\n        \n            ngx-socket-io : ^3.0.1\n        \n            ngx-spinner : ^8.1.0\n        \n            rxjs : ~6.4.0\n        \n            socket.io-client : ^2.3.0\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRobot Teaching\nRobot Teaching is a web-based user interface for programming mobile manipulators like CHIMERA.The so-called \"Teach-In\" procedure is used to program the robot. \nThe web application is based on the \"MEAN\" Stack which stands for   \n\nM        MongoDB\nE        Express.js\nA        Angular\nN        Node.js   \n\nFor the documentation of the \"Front-End\" Compodoc was used.Compodoc is a documentation tool for Angular applications. Basically it generates a static documentation for the application. \nFor this application the documentation was extended. Under Additional Documentation you will find detailed instructions for adding new robot methods. \nIn the manner of a tutorial every single step is explained in detail. Screenshots and direct links to the affected code passages help the developer to understand how to extend the program. \nTo install Compodoc enter   \n\nnpm install -g @compodoc/compodoc  \n\nin terminal. A detailed description you find here.    \nIf you change the code and want to generate an updated documentation enter:\n\ncompodoc -p tsconfig.json -s -a screenshots --includes additional-doc  \n\nThis command also includes the part of the Additional Documentation in the updated documentation.  \nComponents Structure\nIn the following, the structure of the components will be illustrated.   \nWorkflows Table - Home\n\nLink to Header component.   \nLink to Workflow Table component.      \nJobs Selection – Drag and Drop\n \nLink to Available Jobs component.   \nConfigurator - Gripper Grip\n   \nLink to Wizard Parent parent component. \nLink to Wizard Gripper Grip child component.  \nConfigurator - Arm Cartesian\n    \nLink to Wizard Parent parent component.   \nLink to Wizard Arm Cartesian child component.    \nConfirmed Workflow - Ready for Executing\n    \nLink to Wizard Parent parent component.    \nLink to Execution Run child component.    \nExecuting Workflow - Progress Display\n \nLink to Execution Run component.   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAvailableJobsComponent\n\nAvailableJobsComponent\n\nAppModule -->\n\nAvailableJobsComponent->AppModule\n\n\n\n\n\nExecutionRunComponent\n\nExecutionRunComponent\n\nAppModule -->\n\nExecutionRunComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nNoPageFoundComponent\n\nNoPageFoundComponent\n\nAppModule -->\n\nNoPageFoundComponent->AppModule\n\n\n\n\n\nWizardArmCartesianComponent\n\nWizardArmCartesianComponent\n\nAppModule -->\n\nWizardArmCartesianComponent->AppModule\n\n\n\n\n\nWizardArmJoinsComponent\n\nWizardArmJoinsComponent\n\nAppModule -->\n\nWizardArmJoinsComponent->AppModule\n\n\n\n\n\nWizardArmTrajectoryComponent\n\nWizardArmTrajectoryComponent\n\nAppModule -->\n\nWizardArmTrajectoryComponent->AppModule\n\n\n\n\n\nWizardBaseComponent\n\nWizardBaseComponent\n\nAppModule -->\n\nWizardBaseComponent->AppModule\n\n\n\n\n\nWizardGripperGripComponent\n\nWizardGripperGripComponent\n\nAppModule -->\n\nWizardGripperGripComponent->AppModule\n\n\n\n\n\nWizardGripperReleaseComponent\n\nWizardGripperReleaseComponent\n\nAppModule -->\n\nWizardGripperReleaseComponent->AppModule\n\n\n\n\n\nWizardJobComponent\n\nWizardJobComponent\n\nAppModule -->\n\nWizardJobComponent->AppModule\n\n\n\n\n\nWizardNewMethodComponent\n\nWizardNewMethodComponent\n\nAppModule -->\n\nWizardNewMethodComponent->AppModule\n\n\n\n\n\nWizardParentComponent\n\nWizardParentComponent\n\nAppModule -->\n\nWizardParentComponent->AppModule\n\n\n\n\n\nWorkflowTableComponent\n\nWorkflowTableComponent\n\nAppModule -->\n\nWorkflowTableComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWizardStepperService\n\nWizardStepperService\n\nAppModule -->\n\nWizardStepperService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        13 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/introduction.html":{"url":"additional-documentation/introduction.html","title":"additional-page - Introduction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nIntroduction\nThe documentation in this section is designed as a tutorial and explains how to integrate a new method.The best way to explain how to integrate a new robot method in code is to simply integrate a new method and document each step. Therefore we have added a dummy robot method \"NewMethod\" in code. \n   \nThe dummy robot method is also included in the deliverd code, so developers can see the dependencies in the actual code and only need to change the name of the robot method to be added, its dependencies and properties.   \nThis section explains step by step which classes and methods need to be adapted and which need to be newly created.\nThe changes are shown using code snipets and there is always a link to the dependent class, component, service, model etc. \nMain Changes to be made to add new robot method\n\ncreation of new model\n\nadd model to workflow\n\ncreate new component\n\nadd routes\n\nupdate all routing methods\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/steps-adding-new-method.html":{"url":"additional-documentation/steps-adding-new-method.html","title":"additional-page - Steps adding new method","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nNecessary steps for adding a new robot method in Angular project\n\ncreation of new model\n\nadd model to workflow\n\ncreate new component\n\nadd routes\n\nupdate all routing methods\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{"url":"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html","title":"additional-page - 1. Creation of new Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCreation of a NewMethod model\n\nCreate a new class/model for the new robot method within \"model\" folder.            \n\n         \n\nAdjust \"new-method.model.ts\" Typysript file - e.g. copy paste from other model   \n\n     \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{"url":"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html","title":"additional-page - 2. Add Model to Workflow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nAdd NewMethod to Workflow Model\nUpdate worflow within \"model\" folder.      \n\nImport NewMethod    \n\n    \n\nAdd NewMethod to addjobs(...)    \n\n     \n\nAdd NewMethod to addJobsFormWorkflow(...)    \n\n  \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{"url":"additional-documentation/steps-adding-new-method/3.-create-new-component.html","title":"additional-page - 3. Create New Component","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCreation of new component for new robot method\n\nCreate new component for the new robot method within \"wizard-stepper\" folder.     \n\n    \n\nAdjust \"wizard-new-method.component.ts\" Typysript file - e.g. copy paste from other component     \n\n    \n\nAdjust \"wizard-new-method.component.css\" CSS file - e.g. copy paste from other component    \n\n   \n\nAdjust \"wizard-new-method.component.html\" Html file - e.g. copy paste from other component    \n\n  \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/steps-adding-new-method/4.-add-route.html":{"url":"additional-documentation/steps-adding-new-method/4.-add-route.html","title":"additional-page - 4. Add Route","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nAdding new Route in Routing Module\nUpdate Routing Module within \"app-routing\" folder.    \n\nAdd a new path: \"new_method_path\" and link to component: \"WizardNewMethodComponent\".       \n\n      \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{"url":"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html","title":"additional-page - 5. Update all Routing Methods","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nUpdate selectNextJob(...) methods in two Components\n\nOpen available jobs component within \"jobs/available-jobs/available-jobs.component.ts\" folder.   \n\nAdd 'new_method_path' in selectNextJob(...) in \"available-jobs.component.ts\"     \n\n\n   \n\nOpen wizard job component within \"wizzard-step/wizzard-job/wizard-job.component.ts\" folder.    \n\nAdd 'new_method_path' in selectNextJob(...) in \"wizard-job.component.ts\"     \n\n\n     \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
