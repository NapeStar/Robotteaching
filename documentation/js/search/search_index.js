var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.16,1,0.988]],["body/components/AppComponent.html",[0,0.293,1,1.705,2,1.496,3,0.441,4,0.441,5,1.508,6,1.508,7,1.508,8,1.508,9,0.329,10,3.943,11,0.48,12,4.301,13,4.349,14,1.676,15,5.757,16,5.757,17,5.757,18,5.757,19,4.349,20,1.216,21,1.508,22,2.263,23,2.263,24,1.774,25,6.269,26,1.774,27,5.757,28,0.52,29,1.425,30,0.953,31,0.022,32,0.48,33,0.04,34,1.346,35,1.774,36,1.878,37,1.425,38,2.14,39,1.508,40,0.648,41,1.508,42,1.072,43,1.135,44,1.508,45,1.135,46,1.346,47,1.508,48,1.202,49,1.508,50,1.135,51,1.508,52,1.135,53,1.746,54,1.539,55,1.508,56,1.135,57,1.508,58,1.135,59,1.508,60,1.508,61,1.135,62,1.508,63,1.135,64,1.496,65,1.508,66,1.135,67,1.508,68,1.202,69,1.508,70,1.072,71,0.441,72,1.508,73,1.135,74,1.508,75,1.135,76,0.65,77,1.135,78,1.508,79,1.508,80,0.014,81,0.017,82,0.014]],["title/modules/AppModule.html",[83,2.377,84,2.597]],["body/modules/AppModule.html",[1,1.847,3,0.438,4,0.438,9,0.327,13,4.333,28,0.737,30,0.947,31,0.022,34,1.338,42,1.517,45,1.607,48,1.701,50,1.607,52,1.607,56,1.607,58,1.607,61,1.607,63,1.607,66,1.607,68,1.701,70,1.517,73,1.607,75,1.607,80,0.014,81,0.017,82,0.014,83,2.873,84,5.119,85,2.873,86,2.873,87,4.333,88,4.333,89,3.473,90,3.919,91,3.919,92,3.919,93,3.919,94,3.919,95,4.092,96,1.801,97,4.89,98,3.139,99,3.919,100,4.596,101,3.919,102,4.596,103,3.919,104,3.473,105,3.919,106,4.596,107,3.139,108,4.596,109,4.596,110,2.873]],["title/modules/AppRoutingModule.html",[83,2.377,95,2.377]],["body/modules/AppRoutingModule.html",[0,0.304,3,0.414,4,0.414,9,0.309,20,1.074,28,0.819,30,0.895,31,0.023,32,0.451,33,0.037,42,1.282,45,1.358,50,1.358,52,1.358,53,1.727,54,1.662,56,1.358,58,1.358,61,1.358,63,1.358,64,1.667,66,1.358,70,1.411,71,0.58,73,1.358,75,1.358,76,0.61,80,0.013,81,0.017,82,0.013,85,2.714,87,3.281,89,3.281,95,3.459,101,3.702,105,4.718,111,3.702,112,3.702,113,3.702,114,5.533,115,3.702,116,5.533,117,3.513,118,1.5,119,3.459,120,4.342,121,3.281,122,4.342,123,1.811,124,1.589,125,4.342,126,3.281,127,4.342,128,3.281,129,4.342,130,3.281,131,4.342,132,3.281,133,4.342,134,3.281,135,4.342,136,3.281,137,4.342,138,4.342,139,3.281,140,4.342,141,3.281,142,4.342,143,1.686,144,2.966,145,4.342,146,1.904,147,6.168,148,4.342,149,4.342,150,2.714,151,5.533,152,4.342,153,4.342,154,4.342,155,1.79,156,4.342,157,2.505,158,2.714,159,2.714,160,2.714,161,2.714,162,2.714,163,1.129,164,2.966,165,4.342]],["title/classes/ArmCartesian.html",[33,0.033,166,1.777]],["body/classes/ArmCartesian.html",[3,0.402,4,0.402,9,0.3,11,0.564,28,0.475,31,0.023,32,0.438,33,0.036,40,0.676,80,0.013,81,0.016,82,0.013,163,1.834,166,2.965,167,1.376,168,4.484,169,3.597,170,2.713,171,2.069,172,2.539,173,1.02,174,0.564,175,0.475,176,0.763,177,1.277,178,5.232,179,2.713,180,2.382,181,2.382,182,2.713,183,3.466,184,0.798,185,3.395,186,0.831,187,5.432,188,1.988,189,2.075,190,3.71,191,3.71,192,0.763,193,2.382,194,1.259,195,0.879,196,0.873,197,2.909,198,1.264,199,1.581,200,3.66,201,3.966,202,1.959,203,2.259,204,2.107,205,2.107,206,1.972,207,2.713,208,2.107,209,2.259,210,2.107,211,1.096,212,0.678,213,2.259,214,3.187,215,4.218,216,2.382,217,0.966,218,3.187,219,4.218,220,2.713,221,1.166,222,3.218,223,0.723,224,2.107,225,0.991,226,4.218,227,3.66,228,2.434,229,3.966,230,2.637,231,4.539,232,3.187,233,2.909,234,2.909,235,1.036,236,1.544,237,3.187,238,3.187,239,1.544]],["title/classes/ArmJoint.html",[33,0.033,240,2.597]],["body/classes/ArmJoint.html",[3,0.42,4,0.42,9,0.314,11,0.58,28,0.496,31,0.023,32,0.457,33,0.053,40,0.628,80,0.013,81,0.017,82,0.013,163,1.847,167,1.437,168,4.544,170,2.79,171,2.103,173,0.708,175,0.496,176,0.785,177,1.287,179,2.79,180,2.449,181,2.449,182,2.79,184,0.857,186,0.839,188,2.044,189,1.522,192,0.785,195,0.871,196,0.708,198,1.275,199,1.626,202,2,203,2.36,204,3.063,205,3.323,206,2.06,207,2.79,208,2.201,209,2.36,210,2.201,211,1.145,212,0.708,213,2.36,216,2.449,217,0.986,220,2.79,221,1.19,222,3.284,223,0.755,224,2.201,225,0.804,235,1.583,239,1.613,240,3.815,241,3.757,242,4.871,243,4.762,244,4.22,245,7.106,246,6.132,247,5.585,248,5.585,249,4.407,250,4.407,251,4.407,252,4.407,253,4.407,254,6.132,255,4.407]],["title/classes/ArmTrajectory.html",[33,0.033,256,2.597]],["body/classes/ArmTrajectory.html",[3,0.421,4,0.421,9,0.315,11,0.581,28,0.498,31,0.023,32,0.459,33,0.053,40,0.63,80,0.013,81,0.017,82,0.013,163,1.848,167,1.442,168,4.549,170,2.796,171,2.106,173,0.711,175,0.498,176,0.786,177,1.288,179,2.796,180,2.455,181,2.455,182,2.796,184,0.858,186,0.84,188,2.049,189,1.527,192,0.786,195,0.871,196,0.711,198,1.298,199,1.63,202,2.003,203,2.369,204,3.068,205,3.327,206,2.067,207,2.796,208,2.209,209,2.369,210,2.209,211,1.149,212,0.711,213,2.369,216,2.455,217,0.987,220,2.796,221,1.192,222,3.29,223,0.758,224,2.209,225,0.807,235,1.086,239,1.619,242,4.877,243,4.773,244,4.229,256,3.823,257,3.77,258,7.191,259,2.871,260,5.598,261,4.422,262,4.422,263,4.422,264,4.422,265,4.422,266,6.142,267,4.422]],["title/components/AvailableJobsComponent.html",[0,0.16,42,0.881]],["body/components/AvailableJobsComponent.html",[0,0.211,1,0.429,2,0.706,3,0.157,4,0.157,5,0.539,6,0.886,7,0.539,8,0.539,9,0.118,11,0.416,14,1.166,20,0.32,21,0.539,22,1.937,23,1.937,24,0.837,26,0.837,28,0.63,29,1.065,30,0.34,31,0.023,32,0.282,33,0.023,34,0.481,35,0.837,36,0.886,37,1.065,38,1.306,39,0.539,40,0.749,41,0.539,42,0.928,43,1.487,44,0.539,45,0.405,46,0.481,47,0.539,48,0.429,49,0.539,50,0.405,51,0.539,52,0.405,53,1.508,54,0.849,55,0.539,56,0.405,57,0.539,58,0.405,59,0.539,60,0.539,61,0.405,62,0.539,63,0.405,64,0.706,65,0.539,66,0.405,67,0.539,68,0.429,69,0.539,70,0.383,71,0.479,72,0.539,73,0.405,74,0.539,75,0.405,76,0.94,77,0.849,78,0.539,79,0.539,80,0.005,81,0.008,82,0.005,96,1.579,110,1.032,118,0.57,119,4.221,123,0.429,150,1.032,155,2.7,157,1.566,158,1.032,159,1.032,160,1.697,161,1.032,162,1.032,163,0.429,166,0.772,173,0.644,174,0.581,175,0.389,176,0.381,177,1.121,184,0.578,186,0.824,192,0.738,194,1.441,195,0.823,196,0.644,198,0.496,199,1.385,211,1.041,212,1.01,217,0.922,221,0.976,223,1.022,225,0.958,233,0.885,234,0.885,235,1.607,239,0.605,268,4.612,269,1.128,270,1.854,271,2.218,272,4.231,273,2.315,274,2.315,275,1.854,276,4.056,277,3.343,278,3.343,279,1.383,280,3.772,281,3.025,282,3.025,283,1.128,284,1.342,285,2.948,286,2.315,287,2.948,288,2.039,289,1.824,290,2.161,291,3.772,292,3.025,293,1.583,294,2.948,295,2.948,296,3.586,297,3.772,298,2.948,299,2.948,300,1.718,301,3.414,302,1.847,303,1.552,304,3.414,305,1.651,306,3.414,307,3.414,308,2.715,309,1.054,310,1.652,311,2.766,312,2.112,313,2.715,314,2.948,315,1.191,316,1.119,317,1.119,318,2.315,319,3.772,320,1.652,321,2.315,322,1.652,323,1.356,324,1.652,325,1.306,326,1.306,327,0.994,328,1.054,329,0.747,330,1.054,331,3.025,332,1.555,333,1.119,334,1.119,335,1.652,336,0.837,337,1.054,338,0.994,339,1.652,340,2.315,341,1.652,342,2.315,343,1.847,344,1.956,345,2.516,346,1.054,347,1.269,348,1.652,349,2.344,350,1.652,351,2.315,352,1.652,353,2.315,354,2.051,355,1.054,356,1.652,357,1.054,358,0.837,359,0.994,360,1.652,361,2.315,362,2.315,363,1.652,364,1.713,365,1.725,366,1.119,367,1.054,368,2.172,369,1.814,370,2.039,371,1.425,372,1.652,373,2.315,374,2.315,375,0.994,376,2.145,377,1.652,378,1.741,379,1.652,380,1.652,381,1.054,382,2.361,383,1.652,384,2.315,385,3.414,386,1.652,387,1.854,388,3.772,389,2.315,390,1.652,391,2.315,392,1.652,393,1.652,394,1.652,395,1.854,396,1.652,397,3.025,398,1.652,399,1.652,400,1.408,401,1.408,402,1.408,403,1.408,404,2.315,405,1.408,406,2.161,407,1.408,408,0.724,409,0.57,410,0.953,411,2.948,412,2.315,413,1.248,414,2.315,415,1.128,416,1.408,417,2.948,418,1.408,419,1.408,420,1.408,421,2.161,422,1.408,423,2.051,424,1.408,425,2.315,426,1.408,427,1.408,428,1.408,429,1.408,430,1.032,431,2.315,432,1.408,433,1.408,434,1.408,435,1.408,436,1.408,437,1.408,438,4.056,439,2.315,440,1.408,441,1.408,442,1.408,443,2.315,444,1.248,445,1.248,446,1.248,447,1.269,448,1.128,449,1.128,450,1.128,451,2.31,452,1.128,453,1.248,454,1.408,455,2.315,456,1.408,457,1.248,458,1.566,459,2.051,460,1.248,461,1.854,462,1.697,463,1.408,464,1.248,465,1.248,466,1.248,467,1.408,468,2.315,469,1.248,470,1.032,471,2.315,472,2.315,473,2.315,474,1.408,475,1.408,476,1.408,477,1.128,478,1.032,479,0.681,480,3.4,481,1.032,482,1.616,483,3.4,484,1.119,485,3.4,486,0.772,487,1.408,488,1.128,489,1.032,490,0.772,491,0.772,492,1.128,493,1.408,494,1.408,495,1.408,496,2.315,497,2.315,498,1.408,499,1.408,500,1.408,501,2.715,502,2.715,503,2.715,504,2.315,505,2.315,506,1.356,507,1.652,508,1.408,509,1.191,510,0.772,511,1.516,512,1.652,513,0.772,514,0.681,515,2.068,516,2.068,517,1.119,518,1.269,519,1.269,520,0.772,521,0.772,522,1.616,523,2.068,524,0.772,525,4.056,526,4.477,527,1.408,528,1.054,529,2.948,530,4.056,531,1.408,532,1.408,533,1.248,534,2.948,535,1.408,536,3.772,537,2.948,538,1.408,539,2.315,540,1.408,541,1.408,542,1.248,543,1.994,544,2.948,545,1.616,546,1.408,547,1.408,548,1.616,549,2.315,550,2.948,551,3.772,552,1.652,553,1.652,554,1.652,555,2.715,556,1.652,557,2.315,558,2.315,559,2.948,560,1.408,561,1.408,562,1.408,563,1.408,564,1.408,565,2.315,566,1.408,567,1.408,568,1.408,569,1.652,570,3.457,571,1.652,572,1.652,573,3.457,574,2.715,575,2.715,576,1.652,577,1.652,578,1.652,579,1.652,580,1.652,581,1.652,582,1.652,583,1.652,584,1.652,585,1.652,586,1.408,587,1.652,588,1.652,589,1.652,590,1.652,591,1.652,592,1.652,593,1.652,594,0.605,595,1.652]],["title/classes/Base.html",[33,0.033,163,0.988]],["body/classes/Base.html",[3,0.371,4,0.371,9,0.277,11,0.664,31,0.023,32,0.404,33,0.044,40,0.803,80,0.012,81,0.016,82,0.012,143,2.244,163,1.34,167,1.27,170,1.945,172,1.82,173,1.028,175,0.438,176,0.724,177,1.258,179,3.527,180,3.051,181,3.051,182,2.575,184,0.702,186,0.846,189,2.316,192,0.724,193,2.261,195,0.878,196,0.989,198,1.317,204,2.575,205,2.575,206,2.701,207,3.073,208,3.196,210,2.575,211,1.34,212,1.127,216,2.883,217,1.108,220,3.284,221,1.337,222,3.691,223,0.991,225,1.123,235,0.956,236,1.425,239,2.115,344,1.2,596,3.32,597,5.155,598,1.345,599,3.894,600,4.395,601,5.155,602,3.894,603,3.894,604,3.32,605,3.894,606,3.32,607,3.894,608,3.894,609,3.894,610,3.894,611,3.894,612,3.32,613,3.894,614,3.32,615,3.894,616,4.927,617,5.779,618,4.927,619,3.32,620,3.894,621,3.32]],["title/classes/BaseMove.html",[33,0.033,490,1.777]],["body/classes/BaseMove.html",[3,0.402,4,0.402,9,0.3,11,0.564,28,0.475,31,0.023,32,0.438,33,0.036,40,0.676,80,0.013,81,0.016,82,0.013,163,1.834,167,1.376,170,2.713,171,2.069,172,2.539,173,1.02,174,0.564,175,0.475,176,0.763,177,1.277,178,5.232,179,2.713,180,2.382,181,2.382,182,2.713,183,3.466,184,0.798,185,3.395,186,0.831,188,1.988,189,2.075,190,3.71,191,3.71,192,0.763,193,2.382,194,1.259,195,0.879,196,0.873,197,2.909,198,1.264,199,1.581,200,3.66,201,3.966,202,1.959,203,2.259,204,2.107,205,2.107,206,1.972,207,2.713,208,2.107,209,2.259,210,2.107,211,1.096,212,0.678,213,2.259,214,3.187,216,2.382,217,0.966,218,3.187,220,2.713,221,1.166,222,3.218,223,0.723,224,2.107,225,0.991,227,3.66,228,2.434,229,3.966,230,2.637,231,4.539,232,3.187,233,2.909,234,2.909,235,1.036,236,1.544,237,3.187,238,3.187,239,1.544,490,2.965,622,5.597,623,3.597,624,5.432,625,4.218,626,4.218,627,4.218]],["title/components/ExecutionRunComponent.html",[0,0.16,45,0.934]],["body/components/ExecutionRunComponent.html",[0,0.241,1,0.465,2,0.754,3,0.171,4,0.171,5,0.584,6,0.584,7,0.584,8,0.584,9,0.128,11,0.379,14,0.844,20,0.348,21,0.584,22,1.971,23,1.971,24,0.894,26,0.894,28,0.63,29,1.126,30,0.369,31,0.023,32,0.186,33,0.015,34,0.521,35,0.894,36,0.946,37,0.894,38,1.371,39,0.584,40,0.61,41,0.584,42,0.415,43,0.44,44,0.584,45,1.032,46,1.674,47,0.584,48,0.465,49,0.584,50,0.44,51,0.584,52,0.44,53,1.571,54,1.133,55,0.584,56,0.44,57,0.584,58,0.44,59,0.584,60,0.584,61,0.44,62,0.584,63,0.44,64,0.754,65,0.584,66,0.44,67,0.584,68,1.678,69,0.584,70,0.415,71,0.171,72,0.584,73,0.44,74,0.584,75,0.44,76,0.972,77,0.44,78,0.584,79,0.584,80,0.005,81,0.009,82,0.005,96,1.582,98,3.375,107,1.223,118,0.619,123,0.95,124,0.655,139,4.917,155,1.196,164,2.87,171,0.946,173,0.742,174,0.301,175,0.326,176,0.407,177,1.05,184,0.659,186,0.836,188,1.062,189,1.451,192,0.694,194,0.415,195,0.798,196,0.587,198,0.529,199,0.521,202,1.956,211,1.608,212,0.924,217,1.007,221,0.959,223,1.074,225,0.95,235,1.472,259,1.356,271,1.809,279,1.002,283,0.946,284,1.419,288,2.233,289,1.507,293,1.223,300,1.419,302,1.631,303,1.956,305,1.507,309,1.126,312,2.103,315,1.272,316,1.732,317,1.196,325,1.371,326,1.371,327,0.655,328,0.695,329,0.493,330,0.695,332,1.792,333,0.738,334,0.738,336,1.126,337,0.695,338,1.69,343,1.918,344,1.295,345,1.603,346,2.103,349,1.062,355,0.695,357,0.695,358,0.552,359,0.655,364,1.192,365,1.422,366,0.738,367,1.126,368,1.707,369,1.263,370,1.419,371,1.732,375,1.062,376,3.313,378,0.655,381,0.695,387,1.223,397,1.353,409,1.002,461,3.153,462,2.886,470,2.285,479,2.371,480,1.119,505,2.473,509,1.843,510,0.837,511,2.025,513,0.837,514,1.507,515,2.688,516,2.31,517,1.507,518,1.356,519,1.356,520,0.837,521,1.709,522,1.709,523,1.964,524,0.837,525,3.117,526,3.583,527,1.527,528,1.126,529,2.473,530,3.583,531,1.527,532,1.527,533,1.353,534,1.527,535,1.527,536,3.117,537,2.473,538,1.527,539,2.473,540,1.527,541,1.527,542,1.353,543,3.23,544,3.117,545,1.709,546,1.527,547,1.527,548,1.964,549,2.473,550,2.473,551,3.583,557,1.527,558,3.117,559,1.527,560,1.527,561,1.527,562,1.527,563,1.527,564,1.527,565,2.473,566,1.527,567,1.527,568,1.527,594,0.655,598,1.595,628,5.549,629,1.527,630,2.9,631,2.9,632,2.473,633,5.418,634,2.9,635,2.9,636,4.213,637,3.655,638,2.9,639,3.655,640,3.655,641,3.655,642,3.655,643,3.117,644,4.617,645,3.655,646,2.328,647,1.356,648,4.202,649,4.202,650,4.202,651,4.202,652,4.202,653,4.202,654,4.202,655,2.9,656,4.202,657,1.709,658,0.785,659,3.175,660,3.175,661,2.627,662,2.306,663,2.025,664,1.69,665,3.824,666,5.751,667,4.617,668,2.9,669,2.627,670,2.627,671,1.356,672,1.272,673,4.444,674,1.791,675,2.099,676,5.997,677,2.02,678,4.942,679,1.791,680,1.791,681,2.87,682,1.791,683,2.9,684,1.791,685,1.673,686,1.673,687,1.002,688,3.583,689,1.791,690,2.473,691,4.202,692,4.213,693,2.9,694,2.9,695,1.507,696,2.191,697,1.791,698,2.9,699,4.942,700,4.213,701,2.9,702,1.791,703,4.202,704,2.9,705,1.791,706,2.473,707,2.9,708,3.117,709,1.791,710,0.894,711,0.894,712,0.894,713,1.272,714,0.837,715,1.964,716,0.894,717,0.837,718,0.837,719,0.894,720,1.791,721,1.791,722,1.791,723,2.9,724,1.843,725,1.791,726,2.9,727,1.791,728,1.791,729,0.894,730,0.894,731,0.894,732,0.894,733,0.619,734,1.126,735,0.785,736,0.785,737,0.785,738,0.894,739,0.837,740,0.894,741,0.894,742,0.738,743,0.894,744,1.119,745,1.791,746,1.527,747,1.791,748,1.791,749,1.353,750,2.473,751,1.791,752,1.791,753,1.791,754,0.894,755,1.033,756,1.791,757,1.791,758,1.791,759,1.791,760,1.791,761,4.202,762,1.791,763,1.791,764,2.9,765,2.9,766,1.791,767,1.791,768,1.791,769,2.9,770,2.473,771,1.791,772,3.655,773,3.655,774,1.791,775,1.791,776,2.9,777,4.202,778,1.791,779,1.272,780,2.473,781,2.473,782,2.9,783,1.791,784,2.9,785,2.9,786,2.9,787,1.449,788,2.87,789,4.202,790,2.468,791,4.213,792,0.894,793,0.894,794,1.449,795,0.894,796,0.894,797,0.894,798,0.894,799,0.894,800,0.894,801,0.837,802,1.449,803,0.894,804,1.449,805,0.894,806,0.894,807,0.894,808,0.837,809,0.894,810,0.837,811,0.894,812,0.894,813,0.894,814,1.791,815,1.791,816,1.791]],["title/classes/GripperGrip.html",[33,0.033,486,1.777]],["body/classes/GripperGrip.html",[3,0.449,4,0.449,9,0.335,11,0.489,28,0.53,31,0.023,32,0.489,33,0.041,40,0.655,80,0.014,81,0.018,82,0.014,163,1.866,167,1.536,170,2.908,171,2.153,172,2.721,173,1.016,174,0.604,175,0.53,176,0.818,177,1.261,179,2.908,180,2.553,181,2.553,184,0.825,185,3.639,186,0.802,188,2.131,189,2.183,190,3.977,191,3.977,192,0.818,193,2.553,194,1.349,195,0.864,196,0.757,197,3.118,198,1.063,202,2.061,203,2.522,204,2.352,205,2.352,206,2.201,207,2.908,208,2.352,209,2.522,210,2.352,211,1.224,212,0.757,213,2.522,224,2.352,225,0.859,227,3.809,228,2.717,229,4.127,230,2.944,233,3.118,234,3.118,235,1.156,236,1.724,486,3.086,817,4.399,818,4.015,819,4.709,820,4.709]],["title/classes/GripperRelease.html",[33,0.033,491,1.777]],["body/classes/GripperRelease.html",[3,0.449,4,0.449,9,0.335,11,0.489,28,0.53,31,0.023,32,0.489,33,0.041,40,0.655,80,0.014,81,0.018,82,0.014,163,1.866,167,1.536,170,2.908,171,2.153,172,2.721,173,1.016,174,0.604,175,0.53,176,0.818,177,1.261,179,2.908,180,2.553,181,2.553,184,0.825,185,3.639,186,0.802,188,2.131,189,2.183,190,3.977,191,3.977,192,0.818,193,2.553,194,1.349,195,0.864,196,0.757,197,3.118,198,1.063,202,2.061,203,2.522,204,2.352,205,2.352,206,2.201,207,2.908,208,2.352,209,2.522,210,2.352,211,1.224,212,0.757,213,2.522,224,2.352,225,0.859,227,3.809,228,2.717,229,4.127,230,2.944,233,3.118,234,3.118,235,1.156,236,1.724,491,3.086,817,4.399,821,4.015,822,4.709,823,4.709]],["title/components/HeaderComponent.html",[0,0.16,48,0.988]],["body/components/HeaderComponent.html",[0,0.28,1,1.148,2,1.454,3,0.421,4,0.421,5,1.441,6,1.441,7,1.441,8,1.441,9,0.315,11,0.458,20,0.857,21,1.441,22,2.253,23,2.253,24,1.723,26,1.723,28,0.497,29,1.891,30,0.91,31,0.022,32,0.458,33,0.038,34,1.286,35,1.723,36,1.824,37,1.361,38,2.105,39,1.441,40,0.629,41,1.441,42,1.024,43,1.084,44,1.441,45,1.084,46,1.286,47,1.441,48,1.677,49,1.441,50,1.084,51,1.441,52,1.084,53,1.732,54,1.507,55,1.441,56,1.084,57,1.441,58,1.084,59,1.441,60,1.441,61,1.084,62,1.441,63,1.084,64,1.454,65,1.441,66,1.084,67,1.441,68,1.148,69,1.441,70,1.024,71,0.421,72,1.441,73,1.084,74,1.441,75,1.084,76,0.62,77,1.084,78,1.441,79,1.441,80,0.013,81,0.017,82,0.013,174,0.58,175,0.497,184,0.84,186,0.68,192,0.786,217,0.71,223,0.757,283,1.824,303,2.218,325,1.824,326,1.824,336,1.723,376,2.996,824,3.766,825,4.875,826,5.594,827,5.502,828,5.594,829,6.139,830,5.594,831,4.417,832,4.417]],["title/injectables/HttpRequestService.html",[662,1.899,833,1.777]],["body/injectables/HttpRequestService.html",[3,0.258,4,0.258,9,0.193,11,0.58,12,1.691,28,0.681,30,0.557,31,0.023,32,0.281,33,0.023,40,0.658,53,0.664,54,1.287,71,0.381,76,1.043,77,0.98,80,0.008,81,0.012,82,0.008,96,1.745,107,1.848,123,0.703,163,1.362,173,0.94,174,0.414,175,0.304,176,0.561,177,1.105,184,0.577,186,0.826,189,2.331,192,0.561,195,0.83,196,0.94,198,1.134,199,1.163,211,1.886,216,1.751,217,1.085,221,0.775,223,0.958,225,1.134,239,2.046,244,3.017,270,2.728,296,2.728,300,2.171,316,1.646,317,1.646,323,3.103,329,1.61,336,1.23,345,1.186,364,1.71,365,1.615,368,2.09,369,1.81,370,2.035,378,1.919,408,1.751,409,0.934,410,1.561,423,3.017,430,1.691,448,1.848,449,1.848,450,1.848,451,2.304,452,1.848,458,1.561,477,2.728,504,4.469,543,3.584,659,4.224,660,4.224,662,1.995,681,3.996,695,1.646,700,3.405,734,1.615,779,2.566,833,1.867,834,1.691,835,5.837,836,2.306,837,5.297,838,3.405,839,5.242,840,3.994,841,3.405,842,4.767,843,5.16,844,3.994,845,3.994,846,5.242,847,5.242,848,5.242,849,3.405,850,5.242,851,5.242,852,3.994,853,3.405,854,2.306,855,3.994,856,3.994,857,2.705,858,5.645,859,3.994,860,5.501,861,3.994,862,2.705,863,3.405,864,2.705,865,3.96,866,3.405,867,3.405,868,2.705,869,3.96,870,5.851,871,2.705,872,3.994,873,2.705,874,3.994,875,2.705,876,3.994,877,5.242,878,2.705,879,3.994,880,3.994,881,2.705,882,3.405,883,2.705,884,2.705,885,3.495,886,2.705,887,2.139,888,3.58,889,3.405,890,3.587,891,2.705,892,2.306,893,2.306,894,1.848,895,2.705,896,4.747,897,4.747,898,3.883,899,4.767,900,3.405,901,2.705,902,2.705,903,4.747,904,2.705,905,2.705,906,2.705,907,2.306,908,2.306,909,2.705,910,2.705,911,2.705,912,2.705,913,3.994,914,2.705]],["title/injectables/JobsService.html",[311,2.377,833,1.777]],["body/injectables/JobsService.html",[0,0.226,2,1.402,3,0.398,4,0.398,9,0.297,11,0.56,12,2.608,28,0.672,30,0.86,31,0.023,32,0.433,33,0.036,40,0.469,43,1.729,71,0.514,80,0.013,81,0.016,82,0.013,107,2.85,155,2.903,173,0.671,174,0.717,175,0.469,176,0.758,177,1.223,182,2.694,184,0.726,186,0.814,192,0.586,194,1.25,195,0.706,196,0.671,211,1.796,212,1.015,216,2.771,217,1.077,221,0.81,225,0.762,239,2.187,296,4.81,311,3.372,323,3.156,329,1.738,345,2.771,364,2.061,365,1.662,408,1.83,430,2.608,659,4.515,660,4.943,833,2.521,834,2.608,837,4.599,854,3.558,867,4.599,888,3.684,890,4.943,894,2.85,898,2.608,899,3.558,907,3.558,915,3.558,916,5.976,917,5.976,918,6.318,919,6.701,920,5.394,921,4.173,922,4.599,923,4.773,924,4.173,925,5.394,926,5.394,927,4.599,928,4.075,929,5.394,930,4.173,931,4.173,932,4.173,933,4.173,934,4.173,935,5.394,936,4.173,937,4.173,938,4.173]],["title/classes/Move.html",[33,0.033,406,2.377]],["body/classes/Move.html",[3,0.474,4,0.474,9,0.354,11,0.625,14,1.447,31,0.023,32,0.516,33,0.052,40,0.804,76,0.968,80,0.015,81,0.018,82,0.015,167,1.621,173,0.799,174,0.727,175,0.728,176,0.845,184,0.787,186,0.787,189,2.5,194,1.152,195,0.847,196,0.799,198,1.304,212,0.967,225,1.098,227,2.868,272,4.89,279,1.717,281,3.755,282,3.755,406,3.762,453,3.755,594,2.203,724,2.95,939,4.238,940,6.018,941,6.018,942,4.971]],["title/classes/MyErrorStateMatcher.html",[33,0.033,382,2.597]],["body/classes/MyErrorStateMatcher.html",[0,0.216,3,0.247,4,0.247,9,0.185,11,0.269,14,1.126,22,0.799,23,0.799,24,0.799,26,0.799,28,0.718,29,1.192,30,0.534,31,0.023,32,0.402,33,0.033,37,0.799,40,0.69,42,0.601,43,1.348,53,1.26,71,0.489,76,0.932,77,0.636,80,0.008,81,0.012,82,0.008,96,1.585,110,1.62,118,0.895,119,2.419,123,0.674,150,1.62,155,2.706,157,2.232,158,1.62,159,1.62,160,2.419,161,1.62,162,1.62,163,0.674,166,1.212,167,0.845,173,0.417,174,0.533,175,0.435,177,1.051,184,0.624,186,0.47,192,0.364,194,1.422,195,0.339,196,0.417,198,0.473,199,1.348,211,1.006,212,0.986,217,0.622,223,0.793,225,1.12,233,1.388,234,1.388,235,1.136,239,0.949,268,2.643,269,1.77,270,1.77,271,2.185,272,4.149,273,2.21,274,2.21,275,1.77,276,3.947,277,1.958,278,2.923,279,1.336,280,2.21,281,2.923,282,2.923,283,1.51,284,1.502,285,2.21,286,2.21,287,2.21,288,1.993,289,1.595,290,1.62,291,3.299,292,2.923,293,1.599,294,2.21,295,2.21,296,3.506,297,3.299,298,2.21,299,2.21,300,1.502,301,2.21,302,1.502,303,1.262,304,2.21,305,1.069,306,2.21,307,2.21,311,2.894,312,2.132,314,3.299,315,1.137,316,1.069,317,1.069,318,2.21,319,3.947,321,2.21,323,1.295,325,1.262,326,1.262,327,0.949,328,1.006,329,0.713,330,1.006,331,2.923,332,1.502,333,1.069,334,1.069,336,0.799,337,1.006,338,0.949,340,2.21,342,2.21,343,1.797,344,1.967,345,2.408,346,1.006,347,1.212,349,2.296,351,2.21,353,2.21,354,1.958,355,1.006,357,1.006,358,0.799,359,0.949,361,2.21,362,2.21,364,1.674,365,1.692,366,1.069,367,1.006,368,2.166,369,1.773,370,1.993,371,1.908,373,2.21,374,2.21,375,0.949,376,1.388,378,1.694,381,1.006,382,3.162,384,2.21,385,4.683,387,1.77,388,4.912,389,2.21,391,2.21,395,1.77,397,1.958,400,2.21,401,2.21,402,2.21,403,2.21,404,3.299,405,2.21,406,1.62,407,2.21,408,1.137,409,0.895,410,1.495,411,4.683,412,4.377,413,1.958,414,3.947,415,1.77,416,3.299,417,4.683,418,3.299,419,3.299,420,3.299,421,3.433,422,3.299,423,4.352,424,3.299,425,3.299,426,2.21,427,2.21,428,2.21,429,2.21,430,1.62,431,3.299,432,2.21,433,2.21,434,2.21,435,2.21,436,2.21,437,2.21,438,4.912,439,3.299,440,2.21,441,2.21,442,2.21,443,3.299,444,1.958,445,1.958,446,1.958,447,1.808,448,1.77,449,1.77,450,1.77,451,2.961,452,1.77,453,1.958,454,2.21,455,3.299,456,2.21,457,1.958,458,2.232,459,2.923,460,1.958,461,2.643,462,2.419,463,2.21,464,1.958,465,1.958,466,1.958,467,2.21,468,3.299,469,1.958,470,1.62,471,3.299,472,3.299,473,3.299,474,2.21,475,2.21,476,2.21,477,1.77,478,1.62,479,1.069,480,3.92,481,1.62,482,1.212,483,3.92,484,1.595,485,3.92,486,1.212,487,2.21,488,1.77,489,1.62,490,1.212,491,1.212,492,1.77,493,2.21,494,2.21,495,2.21,496,3.299,497,3.299,498,2.21,499,2.21,500,2.21,943,3.869,944,2.592]],["title/classes/NewMethod.html",[33,0.033,484,1.568]],["body/classes/NewMethod.html",[3,0.402,4,0.402,9,0.3,11,0.437,28,0.474,31,0.023,32,0.437,33,0.036,40,0.676,71,0.517,80,0.013,81,0.016,82,0.013,163,1.833,167,1.374,170,2.711,171,1.77,173,1.019,174,0.563,175,0.474,176,0.762,177,1.277,178,5.231,179,2.711,180,2.38,181,2.38,182,2.711,183,3.464,184,0.798,185,3.393,186,0.831,188,1.987,189,1.455,195,0.879,196,0.872,197,2.907,198,1.264,202,1.958,203,2.257,204,2.105,205,2.105,206,1.97,207,2.711,208,2.105,209,2.257,210,2.105,211,1.095,212,0.677,213,2.257,214,3.184,216,2.38,217,0.965,218,3.184,220,2.711,221,1.165,222,2.257,223,0.722,224,2.105,225,0.991,227,3.658,228,2.431,229,3.964,230,2.634,231,4.537,232,3.184,233,2.907,234,2.907,235,1.034,236,1.542,237,3.184,238,3.184,239,1.542,242,5.231,484,2.945,509,2.781,733,2.19,945,4.958,946,3.184,947,4.628,948,5.428,949,5.428,950,4.214,951,4.214,952,4.214]],["title/components/NoPageFoundComponent.html",[0,0.16,50,0.934]],["body/components/NoPageFoundComponent.html",[0,0.278,1,1.13,2,1.439,3,0.414,4,0.414,5,1.418,6,1.418,7,1.418,8,1.418,9,0.31,11,0.451,20,1.42,21,1.418,22,2.249,23,2.249,24,1.706,26,1.706,28,0.489,29,1.877,30,0.896,31,0.022,32,0.451,33,0.037,34,1.266,35,1.706,36,1.806,37,1.339,38,2.092,39,1.418,40,0.623,41,1.418,42,1.007,43,1.067,44,1.418,45,1.067,46,1.266,47,1.418,48,1.13,49,1.418,50,1.575,51,1.418,52,1.067,53,1.727,54,1.496,55,1.418,56,1.067,57,1.418,58,1.067,59,1.418,60,1.418,61,1.067,62,1.418,63,1.067,64,1.439,65,1.418,66,1.067,67,1.418,68,1.13,69,1.418,70,1.007,71,0.414,72,1.418,73,1.067,74,1.418,75,1.067,76,0.611,77,1.067,78,1.418,79,1.418,80,0.013,81,0.017,82,0.013,121,4.604,174,0.575,175,0.489,184,0.837,186,0.673,192,0.778,217,0.699,223,0.745,283,1.806,303,2.209,325,1.806,326,1.806,336,1.706,953,5.195,954,3.706,955,5.537,956,6.773,957,6.093,958,5.537,959,4.347,960,4.347]],["title/classes/SocketDataService.html",[33,0.033,665,2.597]],["body/classes/SocketDataService.html",[3,0.436,4,0.436,9,0.326,11,0.593,19,4.32,28,0.643,31,0.023,32,0.475,33,0.039,40,0.515,46,1.665,71,0.436,80,0.014,81,0.017,82,0.014,167,1.492,173,0.735,174,0.593,175,0.515,176,0.803,177,1.252,184,0.818,186,0.818,192,0.876,194,1.325,195,0.599,196,0.735,211,1.486,212,0.735,217,1.003,221,0.888,223,0.784,225,0.835,239,1.674,270,3.906,329,1.573,408,2.006,643,6.001,646,2.537,665,3.906,673,4.32,688,4.875,692,4.875,696,5.363,708,5.319,923,3.456,927,3.9,961,3.9,962,4.875,963,5.718,964,6.728,965,6.535,966,5.319,967,5.718,968,5.718,969,5.718,970,5.718,971,4.575,972,4.575,973,4.32,974,5.718,975,5.718,976,4.575,977,3.9,978,3.9,979,3.9,980,4.575,981,4.575,982,4.575,983,4.575,984,4.575,985,4.575]],["title/components/WizardArmCartesianComponent.html",[0,0.16,52,0.934]],["body/components/WizardArmCartesianComponent.html",[0,0.276,1,0.538,2,1.185,3,0.197,4,0.197,5,0.675,6,0.675,7,0.675,8,0.675,9,0.147,11,0.417,14,1.978,20,0.401,21,0.675,22,2.029,23,2.029,24,1.002,26,1.002,28,0.62,29,1.239,30,0.426,31,0.023,32,0.215,33,0.018,34,0.602,35,1.002,36,1.061,37,1.002,38,1.488,39,0.675,40,0.558,41,0.675,42,0.479,43,0.508,44,0.675,45,0.508,46,0.602,47,0.675,48,0.538,49,0.675,50,0.508,51,0.675,52,1.12,53,1.718,54,1.772,55,0.675,56,0.508,57,0.675,58,0.508,59,0.675,60,0.675,61,0.508,62,0.675,63,0.508,64,0.846,65,0.675,66,0.508,67,0.675,68,1.724,69,0.675,70,0.479,71,0.197,72,0.675,73,0.508,74,0.675,75,0.508,76,0.825,77,0.508,78,0.675,79,0.675,80,0.006,81,0.01,82,0.006,96,1.653,118,0.714,123,1.711,124,0.757,134,4.974,143,1.263,166,2.864,171,1.061,173,0.523,174,0.338,175,0.366,176,0.457,177,1.006,183,2.861,184,0.694,186,0.846,188,1.191,192,0.861,193,1.427,194,0.932,195,0.846,196,0.523,198,0.905,199,0.947,200,2.861,201,1.293,202,2.032,211,0.538,212,0.846,217,0.917,221,1.209,223,1.006,225,0.832,235,0.799,236,1.191,259,2.132,271,2.487,279,2.347,283,1.061,284,1.562,288,1.771,289,1.658,290,2.514,293,1.862,300,1.562,302,1.771,303,2.032,305,2.421,309,1.263,312,2.139,315,1.427,316,1.88,317,1.341,323,1.033,325,1.488,326,1.488,327,0.757,328,0.803,329,0.569,330,0.803,332,2.139,333,0.853,334,0.853,336,1.239,337,0.803,338,2.017,343,1.263,344,1.759,346,1.771,347,1.521,349,0.757,355,0.803,357,0.803,358,0.637,359,0.757,364,1.312,365,1.239,366,0.853,367,1.263,368,1.819,369,1.389,370,1.562,371,1.88,375,1.815,376,2.443,378,0.757,381,0.803,409,1.124,421,1.293,447,0.967,478,1.293,479,2.272,482,1.521,506,2.278,509,2,510,0.967,511,1.764,513,0.967,514,1.88,515,2.575,516,2.462,517,1.341,518,0.967,519,0.967,520,0.967,521,1.88,522,0.967,523,0.967,524,0.967,528,0.803,543,2.861,545,0.967,548,0.967,594,1.472,598,2.028,646,1.771,647,1.521,657,1.88,658,1.427,661,2.851,662,2.477,663,2.175,664,1.815,669,2.034,670,2.514,671,1.88,672,1.427,677,0.803,685,2.631,686,1.877,687,1.124,695,0.853,710,1.033,711,1.033,712,1.033,713,2,714,1.88,715,2.132,716,1.033,717,0.967,718,0.967,719,1.033,724,1.427,729,1.033,730,1.033,731,1.033,732,1.033,733,0.714,734,0.637,735,0.907,736,0.907,737,0.907,738,1.033,739,0.967,740,1.033,741,1.033,742,0.853,743,1.033,744,1.293,754,1.033,755,1.193,787,1.625,788,2.222,790,1.625,792,1.033,793,1.033,794,1.625,795,1.033,796,1.033,797,1.033,798,1.033,799,1.033,800,1.033,801,0.967,802,1.625,803,1.033,804,1.625,805,1.033,806,1.033,807,1.033,808,0.967,809,3.289,810,0.967,811,1.033,812,1.033,813,1.033,887,1.743,898,1.293,986,2.41,987,1.763,988,1.743,989,1.877,990,2.034,991,2.034,992,2.034,993,4.022,994,3.254,995,2.514,996,2.514,997,2.514,998,2.514,999,2.514,1000,2.514,1001,2.477,1002,2.514,1003,2.514,1004,3.039,1005,3.254,1006,2.068,1007,2.068,1008,2.068,1009,2.068,1010,1.877,1011,2.068,1012,3.553,1013,3.497,1014,2.068,1015,2.068,1016,2.458,1017,2.068,1018,2.068,1019,2.068,1020,2.068,1021,2.068,1022,1.625,1023,2.068,1024,2.068,1025,2.068,1026,1.763,1027,1.413,1028,2.068,1029,1.293,1030,2.034,1031,3.254,1032,2.458,1033,4.561,1034,2.068,1035,2.068,1036,2.458]],["title/components/WizardArmJoinsComponent.html",[0,0.16,56,0.934]],["body/components/WizardArmJoinsComponent.html",[0,0.257,1,0.664,2,0.995,3,0.244,4,0.244,5,0.834,6,0.834,7,0.834,8,0.834,9,0.182,11,0.265,14,1.975,20,0.496,21,0.834,22,2.104,23,2.104,24,1.18,26,1.18,28,0.614,29,1.414,30,0.527,31,0.023,32,0.265,33,0.022,34,0.744,35,1.18,36,1.249,37,1.18,38,1.663,39,0.834,40,0.614,41,0.834,42,0.592,43,0.627,44,0.834,45,0.627,46,0.744,47,0.834,48,0.664,49,0.834,50,0.627,51,0.834,52,0.627,53,1.729,54,1.769,55,0.834,56,1.251,57,0.834,58,0.627,59,0.834,60,0.834,61,0.627,62,0.834,63,0.627,64,0.995,65,0.834,66,0.627,67,0.834,68,1.763,69,0.834,70,0.592,71,0.244,72,0.834,73,0.627,74,0.834,75,0.627,76,0.835,77,0.627,78,0.834,79,0.834,80,0.008,81,0.012,82,0.008,96,1.681,118,0.883,123,1.679,124,0.936,132,4.881,171,1.249,173,0.615,174,0.397,175,0.431,176,0.538,177,1.046,184,0.465,186,0.85,192,0.894,194,0.592,195,0.874,196,0.615,198,0.996,199,0.744,202,2.134,212,0.921,217,0.877,221,1.284,223,0.936,235,0.94,236,1.401,259,2.383,271,2.483,279,2.343,283,1.249,284,1.782,288,1.979,289,1.893,293,1.905,300,1.782,302,1.979,303,1.663,305,1.893,309,1.486,312,2.119,325,1.249,326,1.249,327,0.936,328,0.992,329,0.703,330,0.992,332,1.782,333,1.054,334,1.054,336,0.788,337,0.992,338,1.68,343,1.486,344,1.571,346,1.486,349,0.936,355,0.992,357,0.992,358,0.788,359,0.936,364,1.497,365,1.414,366,1.054,367,1.486,368,1.979,369,1.585,370,1.782,371,1.578,375,0.936,378,0.936,381,0.992,409,1.322,479,2.363,506,1.912,509,2.235,510,1.195,511,2.013,513,2.383,514,2.102,515,2.777,516,2.679,517,1.578,518,1.195,519,1.195,520,2.383,521,2.146,522,1.195,523,1.195,524,1.195,528,0.992,545,1.195,548,1.195,594,1.68,598,0.883,646,1.979,647,1.789,657,2.146,658,1.679,663,2.235,664,1.866,677,0.992,695,1.054,710,1.277,711,1.277,712,1.277,713,1.679,714,1.195,715,1.789,716,1.277,717,1.195,718,1.195,719,1.277,724,1.679,729,1.277,730,1.277,731,1.277,732,1.277,733,0.883,734,0.788,735,1.121,736,1.121,737,1.121,738,1.277,739,1.195,740,1.277,741,1.277,742,1.054,743,1.277,754,1.277,787,1.912,790,1.912,792,1.277,793,1.277,794,1.912,795,1.277,796,1.277,797,1.277,798,1.277,799,1.277,800,1.277,801,1.195,802,1.912,803,1.277,804,1.912,805,1.277,806,1.277,807,1.277,808,1.195,809,3.411,810,1.195,811,1.277,812,1.277,813,1.277,986,2.364,1001,2.727,1012,3.634,1013,3.634,1022,1.912,1037,2.179,1038,5.097,1039,4.59,1040,3.829,1041,3.914,1042,3.914,1043,3.914,1044,2.648,1045,3.914,1046,3.829,1047,2.556,1048,2.556,1049,2.556,1050,2.556,1051,2.556,1052,2.556,1053,2.556,1054,2.556]],["title/components/WizardArmTrajectoryComponent.html",[0,0.16,58,0.934]],["body/components/WizardArmTrajectoryComponent.html",[0,0.256,1,0.663,2,0.994,3,0.243,4,0.243,5,0.833,6,0.833,7,0.833,8,0.833,9,0.182,11,0.265,14,1.975,20,0.495,21,0.833,22,2.103,23,2.103,24,1.178,26,1.178,28,0.614,29,1.413,30,0.526,31,0.023,32,0.265,33,0.022,34,0.743,35,1.178,36,1.247,37,1.178,38,1.661,39,0.833,40,0.614,41,0.833,42,0.592,43,0.627,44,0.833,45,0.627,46,0.743,47,0.833,48,0.663,49,0.833,50,0.627,51,0.833,52,0.627,53,1.729,54,1.768,55,0.833,56,0.627,57,0.833,58,1.251,59,1.78,60,0.833,61,0.627,62,0.833,63,0.627,64,0.994,65,0.833,66,0.627,67,0.833,68,1.763,69,0.833,70,0.592,71,0.243,72,0.833,73,0.627,74,0.833,75,0.627,76,0.834,77,0.627,78,0.833,79,0.833,80,0.008,81,0.012,82,0.008,96,1.68,118,0.882,123,1.679,124,0.934,130,4.879,171,1.247,173,0.615,174,0.397,175,0.43,176,0.537,177,1.045,184,0.465,186,0.85,192,0.893,194,0.592,195,0.874,196,0.615,198,0.996,199,0.743,202,2.134,212,0.921,217,0.877,221,1.283,223,0.935,235,0.939,236,1.4,259,2.381,271,2.482,279,2.343,283,1.247,284,1.781,288,1.978,289,1.891,293,1.904,300,1.781,302,1.978,303,1.661,305,1.891,309,1.485,312,2.118,325,1.247,326,1.247,327,0.934,328,0.991,329,0.702,330,0.991,332,1.781,333,1.052,334,1.052,336,0.786,337,0.991,338,1.679,343,1.485,344,1.57,346,1.485,349,0.934,355,0.991,357,0.991,358,0.786,359,0.934,364,1.496,365,1.413,366,1.052,367,1.485,368,1.978,369,1.584,370,1.781,371,1.577,375,0.934,378,0.934,381,0.991,409,1.321,479,2.361,506,1.91,509,2.234,510,1.193,511,2.011,513,2.381,514,2.1,515,2.776,516,2.677,517,1.577,518,1.193,519,1.193,520,2.381,521,2.144,522,1.193,523,1.193,524,1.193,528,0.991,545,1.193,548,1.193,594,1.679,598,0.882,646,1.978,647,1.788,657,2.144,658,1.677,663,2.234,664,1.865,677,0.991,695,1.052,710,1.275,711,1.275,712,1.275,713,1.677,714,1.193,715,1.788,716,1.275,717,1.193,718,1.193,719,1.275,724,1.677,729,1.275,730,1.275,731,1.275,732,1.275,733,0.882,734,0.786,735,1.119,736,1.119,737,1.119,738,1.275,739,1.193,740,1.275,741,1.275,742,1.052,743,1.275,754,1.275,787,1.91,790,1.91,792,1.275,793,1.275,794,1.91,795,1.275,796,1.275,797,1.275,798,1.275,799,1.275,800,1.275,801,1.193,802,1.91,803,1.275,804,1.91,805,1.275,806,1.275,807,1.275,808,1.193,809,3.41,810,1.193,811,1.275,812,1.275,813,1.275,986,2.364,1001,2.725,1012,3.633,1013,3.633,1022,1.91,1041,3.911,1042,3.911,1043,3.911,1044,2.646,1045,3.911,1055,2.176,1056,3.261,1057,4.587,1058,3.825,1059,3.825,1060,2.553,1061,2.553,1062,2.553,1063,2.553,1064,2.553,1065,2.553,1066,2.553,1067,2.553]],["title/components/WizardBaseComponent.html",[0,0.16,61,0.934]],["body/components/WizardBaseComponent.html",[0,0.278,1,0.55,2,1.2,3,0.202,4,0.202,5,0.69,6,0.69,7,0.69,8,0.69,9,0.151,11,0.423,14,1.985,20,0.41,21,0.69,22,2.037,23,2.037,24,1.02,26,1.02,28,0.625,29,1.257,30,0.436,31,0.023,32,0.219,33,0.018,34,0.616,35,1.02,36,1.08,37,1.02,38,1.506,39,0.69,40,0.564,41,0.69,42,0.49,43,0.519,44,0.69,45,0.519,46,0.616,47,0.69,48,0.55,49,0.69,50,0.519,51,0.69,52,0.519,53,1.722,54,1.23,55,0.69,56,0.519,57,0.69,58,0.519,59,0.69,60,0.69,61,1.133,62,0.69,63,0.519,64,0.861,65,0.69,66,0.519,67,0.69,68,1.731,69,0.69,70,0.49,71,0.202,72,0.69,73,0.519,74,0.69,75,0.519,76,0.831,77,0.519,78,0.69,79,0.69,80,0.006,81,0.01,82,0.006,96,1.664,118,0.73,123,1.718,124,0.774,136,4.995,143,1.285,163,1.2,171,1.08,173,0.532,174,0.344,175,0.373,176,0.465,177,1.014,183,2.892,184,0.699,186,0.848,188,1.212,192,0.866,193,1.452,194,0.946,195,0.85,196,0.532,198,0.915,199,0.964,200,1.22,201,1.322,202,2.043,211,0.55,212,0.854,217,0.924,221,1.216,223,1.014,225,0.843,235,0.813,236,1.212,259,2.158,271,2.495,279,2.355,283,1.08,284,1.584,288,1.792,289,1.682,290,2.551,293,1.871,300,1.584,302,1.792,303,2.043,305,2.438,309,1.285,312,2.157,315,1.452,316,1.904,317,1.365,323,1.056,325,1.506,326,1.506,327,0.774,328,0.821,329,0.582,330,0.821,332,2.157,333,0.872,334,0.872,336,1.257,337,0.821,338,2.034,343,1.285,344,1.772,346,1.792,347,1.548,349,0.774,355,0.821,357,0.821,358,0.652,359,0.774,364,1.331,365,1.257,366,0.872,367,1.285,368,1.836,369,1.409,370,1.584,371,1.904,375,1.835,376,2.473,378,0.774,381,0.821,409,1.144,421,1.322,447,0.988,478,1.322,479,2.291,482,1.548,490,2.764,506,2.306,509,2.025,510,0.988,511,1.789,513,0.988,514,1.904,515,2.597,516,2.485,517,1.365,518,0.988,519,0.988,520,0.988,521,1.907,522,0.988,523,0.988,524,0.988,528,0.821,543,2.892,545,0.988,548,0.988,594,1.494,598,2.042,646,1.792,647,1.548,657,1.907,658,1.452,661,2.886,662,2.504,663,2.198,664,1.835,669,2.07,670,2.551,671,1.907,672,1.452,677,0.821,685,2.664,686,1.91,687,1.144,695,0.872,710,1.056,711,1.056,712,1.056,713,2.025,714,1.907,715,2.158,716,1.056,717,0.988,718,0.988,719,1.056,724,1.452,729,1.056,730,1.056,731,1.056,732,1.056,733,0.73,734,0.652,735,0.927,736,0.927,737,0.927,738,1.056,739,0.988,740,1.056,741,1.056,742,0.872,743,1.056,744,1.322,754,1.056,755,1.22,787,1.654,788,2.261,790,1.654,792,1.056,793,1.056,794,1.654,795,1.056,796,1.056,797,1.056,798,1.056,799,1.056,800,1.056,801,0.988,802,1.654,803,1.056,804,1.654,805,1.056,806,1.056,807,1.056,808,0.988,809,3.302,810,0.988,811,1.056,812,1.056,813,1.056,887,1.773,898,1.322,986,2.42,988,1.773,989,1.91,990,2.07,991,2.07,992,2.07,995,2.551,996,2.551,997,2.551,998,2.551,999,2.551,1000,2.551,1001,2.504,1002,2.551,1003,2.551,1004,3.083,1010,1.91,1012,3.567,1013,3.512,1016,2.502,1022,1.654,1027,1.444,1029,1.322,1030,2.07,1032,2.502,1036,2.502,1056,2.823,1068,1.803,1069,3.311,1070,4.081,1071,3.311,1072,3.311,1073,2.115,1074,2.115,1075,2.115,1076,2.115,1077,2.115,1078,2.115,1079,2.115,1080,2.115,1081,2.115,1082,2.115,1083,2.115,1084,2.115,1085,2.115,1086,2.115,1087,2.115,1088,1.803,1089,2.115,1090,3.311,1091,4.617,1092,2.115,1093,2.115]],["title/components/WizardGripperGripComponent.html",[0,0.16,63,0.934]],["body/components/WizardGripperGripComponent.html",[0,0.278,1,0.577,2,1.231,3,0.211,4,0.211,5,0.724,6,0.724,7,0.724,8,0.724,9,0.158,11,0.437,14,1.979,20,0.43,21,0.724,22,2.055,23,2.055,24,1.059,26,1.059,28,0.61,29,1.296,30,0.457,31,0.023,32,0.23,33,0.019,34,0.646,35,1.059,36,1.121,37,1.059,38,1.545,39,0.724,40,0.577,41,0.724,42,0.514,43,0.545,44,0.724,45,0.545,46,0.646,47,0.724,48,0.577,49,0.724,50,0.545,51,0.724,52,0.545,53,1.731,54,1.033,55,0.724,56,0.545,57,0.724,58,0.545,59,0.724,60,0.724,61,0.545,62,0.724,63,1.163,64,1.865,65,0.724,66,0.545,67,0.724,68,1.745,69,0.724,70,0.514,71,0.211,72,0.724,73,0.545,74,0.724,75,0.545,76,0.843,77,0.545,78,0.724,79,0.724,80,0.007,81,0.01,82,0.007,96,1.687,118,0.766,123,1.688,124,0.812,126,4.906,143,1.334,171,1.121,173,0.552,174,0.357,175,0.387,176,0.483,177,0.99,184,0.71,186,0.844,188,1.258,192,0.861,193,1.507,194,0.975,195,0.858,196,0.552,198,0.936,199,0.646,202,2.067,212,0.871,217,0.909,221,1.19,223,1.002,225,0.768,235,0.844,236,1.258,259,2.215,271,2.512,279,2.347,283,1.121,284,1.633,288,1.839,289,1.734,293,1.869,300,1.633,302,1.839,303,2.067,305,2.474,309,1.334,312,2.196,315,1.507,316,1.953,317,1.417,325,1.545,326,1.545,327,0.812,328,0.861,329,0.61,330,0.861,332,2.196,333,0.915,334,0.915,336,1.296,337,0.861,338,2.07,343,1.334,344,1.801,346,1.839,347,1.606,349,0.812,355,0.861,357,0.861,358,0.684,359,0.812,364,1.372,365,1.296,366,0.915,367,1.334,368,1.873,369,1.453,370,1.633,371,1.417,375,1.54,378,0.812,381,0.861,409,1.187,447,1.037,479,2.235,482,1.606,486,2.917,506,1.717,509,2.078,510,1.037,511,1.845,513,1.037,514,1.953,515,2.643,516,2.534,517,1.417,518,1.037,519,1.037,520,1.037,521,1.966,522,1.037,523,1.037,524,1.037,528,0.861,545,1.037,548,1.037,594,1.54,598,2.072,646,1.839,647,1.606,657,1.966,658,1.507,663,2.248,664,1.876,672,1.507,677,0.861,685,2.733,686,1.983,687,1.187,695,0.915,710,1.108,711,1.108,712,1.108,713,2.078,714,1.966,715,2.215,716,1.108,717,1.037,718,1.037,719,1.108,724,1.507,729,1.108,730,1.108,731,1.108,732,1.108,733,0.766,734,0.684,735,0.973,736,0.973,737,0.973,738,1.108,739,1.037,740,1.108,741,1.108,742,0.915,743,1.108,754,1.108,755,1.28,787,1.717,790,1.717,792,1.108,793,1.108,794,1.717,795,1.108,796,1.108,797,1.108,798,1.108,799,1.108,800,1.108,801,1.037,802,1.717,803,1.108,804,1.717,805,1.108,806,1.108,807,1.108,808,1.037,809,3.331,810,1.037,811,1.108,812,1.108,813,1.108,887,1.841,986,2.377,988,1.841,989,1.983,990,2.148,991,2.148,992,2.148,995,2.63,996,2.63,997,2.63,998,2.63,999,2.63,1000,2.63,1001,2.561,1002,2.63,1003,2.63,1010,1.983,1012,3.544,1013,3.544,1022,1.717,1029,1.387,1030,2.148,1094,1.891,1095,4.04,1096,4.207,1097,3.437,1098,3.437,1099,2.218,1100,2.218,1101,2.218,1102,2.218,1103,2.218,1104,2.218,1105,2.218,1106,2.218,1107,2.218,1108,2.218,1109,2.218,1110,1.891,1111,1.891,1112,2.218,1113,3.437,1114,2.218]],["title/components/WizardGripperReleaseComponent.html",[0,0.16,66,0.934]],["body/components/WizardGripperReleaseComponent.html",[0,0.278,1,0.577,2,1.231,3,0.211,4,0.211,5,0.724,6,0.724,7,0.724,8,0.724,9,0.158,11,0.437,14,1.979,20,0.43,21,0.724,22,2.055,23,2.055,24,1.059,26,1.059,28,0.61,29,1.296,30,0.457,31,0.023,32,0.23,33,0.019,34,0.646,35,1.059,36,1.121,37,1.059,38,1.545,39,0.724,40,0.577,41,0.724,42,0.514,43,0.545,44,0.724,45,0.545,46,0.646,47,0.724,48,0.577,49,0.724,50,0.545,51,0.724,52,0.545,53,1.731,54,1.033,55,0.724,56,0.545,57,0.724,58,0.545,59,0.724,60,0.724,61,0.545,62,0.724,63,0.545,64,1.865,65,0.724,66,1.163,67,0.724,68,1.745,69,0.724,70,0.514,71,0.211,72,0.724,73,0.545,74,0.724,75,0.545,76,0.843,77,0.545,78,0.724,79,0.724,80,0.007,81,0.01,82,0.007,96,1.687,118,0.766,123,1.688,124,0.812,128,4.906,143,1.334,171,1.121,173,0.552,174,0.357,175,0.387,176,0.483,177,0.99,184,0.71,186,0.844,188,1.258,192,0.861,193,1.507,194,0.975,195,0.858,196,0.552,198,0.936,199,0.646,202,2.067,212,0.871,217,0.909,221,1.19,223,1.002,225,0.768,235,0.844,236,1.258,259,2.215,271,2.512,279,2.347,283,1.121,284,1.633,288,1.839,289,1.734,293,1.869,300,1.633,302,1.839,303,2.067,305,2.474,309,1.334,312,2.196,315,1.507,316,1.953,317,1.417,325,1.545,326,1.545,327,0.812,328,0.861,329,0.61,330,0.861,332,2.196,333,0.915,334,0.915,336,1.296,337,0.861,338,2.07,343,1.334,344,1.801,346,1.839,347,1.606,349,0.812,355,0.861,357,0.861,358,0.684,359,0.812,364,1.372,365,1.296,366,0.915,367,1.334,368,1.873,369,1.453,370,1.633,371,1.417,375,1.54,378,0.812,381,0.861,409,1.187,447,1.037,479,2.235,482,1.606,491,2.917,506,1.717,509,2.078,510,1.037,511,1.845,513,1.037,514,1.953,515,2.643,516,2.534,517,1.417,518,1.037,519,1.037,520,1.037,521,1.966,522,1.037,523,1.037,524,1.037,528,0.861,545,1.037,548,1.037,594,1.54,598,2.072,646,1.839,647,1.606,657,1.966,658,1.507,663,2.248,664,1.876,672,1.507,677,0.861,685,2.733,686,1.983,687,1.187,695,0.915,710,1.108,711,1.108,712,1.108,713,2.078,714,1.966,715,2.215,716,1.108,717,1.037,718,1.037,719,1.108,724,1.507,729,1.108,730,1.108,731,1.108,732,1.108,733,0.766,734,0.684,735,0.973,736,0.973,737,0.973,738,1.108,739,1.037,740,1.108,741,1.108,742,0.915,743,1.108,754,1.108,755,1.28,787,1.717,790,1.717,792,1.108,793,1.108,794,1.717,795,1.108,796,1.108,797,1.108,798,1.108,799,1.108,800,1.108,801,1.037,802,1.717,803,1.108,804,1.717,805,1.108,806,1.108,807,1.108,808,1.037,809,3.331,810,1.037,811,1.108,812,1.108,813,1.108,887,1.841,986,2.377,988,1.841,989,1.983,990,2.148,991,2.148,992,2.148,995,2.63,996,2.63,997,2.63,998,2.63,999,2.63,1000,2.63,1001,2.561,1002,2.63,1003,2.63,1010,1.983,1012,3.544,1013,3.544,1022,1.717,1029,1.387,1030,2.148,1110,1.891,1115,1.891,1116,4.738,1117,4.207,1118,3.437,1119,3.437,1120,2.218,1121,2.218,1122,2.218,1123,2.218,1124,2.218,1125,2.218,1126,2.218,1127,2.218,1128,2.218,1129,2.218,1130,2.218,1131,1.891,1132,2.218,1133,3.437,1134,2.218]],["title/components/WizardJobComponent.html",[0,0.16,68,0.988]],["body/components/WizardJobComponent.html",[0,0.274,1,0.661,2,1.487,3,0.242,4,0.242,5,0.829,6,0.829,7,0.829,8,0.829,9,0.181,11,0.475,14,1.11,20,0.493,21,0.829,22,2.102,23,2.102,24,1.175,26,1.175,28,0.644,29,1.41,30,0.524,31,0.023,32,0.264,33,0.022,34,0.74,35,1.175,36,1.244,37,1.41,38,1.658,39,0.829,40,0.644,41,0.829,42,0.589,43,0.624,44,0.829,45,0.624,46,0.74,47,0.829,48,0.661,49,0.829,50,0.624,51,0.829,52,0.624,53,1.762,54,1.123,55,0.829,56,0.624,57,0.829,58,0.624,59,0.829,60,0.829,61,0.624,62,0.829,63,1.123,64,0.991,65,0.829,66,0.624,67,0.829,68,1.321,69,0.829,70,0.589,71,0.363,72,0.829,73,0.624,74,0.829,75,0.624,76,0.952,77,0.624,78,0.829,79,0.829,80,0.008,81,0.012,82,0.008,96,1.716,118,0.878,123,1.734,124,0.931,155,1.048,157,2.2,158,1.589,159,1.589,160,2.384,161,1.589,162,1.589,163,0.661,166,1.188,172,1.782,173,0.613,174,0.396,175,0.515,176,0.536,177,1.139,184,0.662,186,0.803,192,0.536,194,0.884,195,0.816,196,0.613,197,1.362,198,0.696,199,1.11,212,1.003,217,0.875,221,0.493,223,0.98,225,0.928,235,0.624,271,1.396,279,1.317,283,1.244,284,1.776,288,2.368,289,2.246,293,1.727,300,2.115,302,2.22,303,1.865,305,2.096,309,1.48,312,2.368,315,1.672,316,2.096,317,1.572,325,1.658,326,1.658,327,1.396,328,1.48,329,1.049,330,1.48,332,2.115,333,1.572,334,1.572,336,1.175,337,1.48,338,1.994,343,1.974,344,2.036,346,1.776,349,1.396,355,1.48,357,1.48,358,1.175,359,1.396,364,1.865,365,1.762,366,1.572,367,1.974,368,2.283,369,1.975,370,2.22,375,1.396,378,1.396,381,1.48,408,1.115,409,1.317,410,1.467,444,1.921,445,1.921,446,1.921,447,2.139,448,1.737,449,1.737,450,1.737,451,2.2,452,1.737,457,1.921,458,1.467,459,1.921,462,1.589,464,1.921,465,1.921,470,2.86,480,4.033,481,1.589,482,1.188,483,3.9,484,1.572,485,3.9,486,1.188,488,1.737,489,1.589,490,1.188,491,1.188,492,1.737,528,1.48,598,1.58,646,2.303,647,2.139,657,2.139,658,1.115,663,2.229,664,1.994,672,1.672,677,1.48,695,1.572,713,2.007,714,1.782,715,2.139,717,1.188,718,1.188,733,1.756,734,1.41,735,1.672,736,1.672,737,1.672,739,1.782,742,2.751,749,1.921,750,3.251,780,3.251,781,2.168,986,2.442,988,2.042,1135,1.921,1136,3.813,1137,3.813,1138,3.813,1139,4.576,1140,3.813,1141,3.813,1142,2.542,1143,2.542,1144,2.542,1145,2.542,1146,2.542,1147,2.542,1148,2.542,1149,2.542,1150,2.542,1151,2.542,1152,2.542,1153,2.542,1154,2.542,1155,2.542,1156,3.457,1157,3.813,1158,2.542,1159,2.542,1160,2.542,1161,1.921,1162,3.813]],["title/components/WizardNewMethodComponent.html",[0,0.16,70,0.881]],["body/components/WizardNewMethodComponent.html",[0,0.276,1,0.531,2,1.178,3,0.195,4,0.195,5,0.667,6,0.667,7,0.667,8,0.667,9,0.146,11,0.414,14,1.975,20,0.397,21,0.667,22,2.024,23,2.024,24,0.993,26,0.993,28,0.617,29,1.23,30,0.421,31,0.023,32,0.212,33,0.018,34,0.595,35,0.993,36,1.051,37,0.993,38,1.478,39,0.667,40,0.555,41,0.667,42,0.474,43,0.502,44,0.667,45,0.502,46,0.595,47,0.667,48,0.531,49,0.667,50,0.502,51,0.667,52,0.502,53,1.716,54,1.211,55,0.667,56,0.502,57,0.667,58,0.502,59,0.667,60,0.667,61,0.502,62,0.667,63,0.502,64,0.838,65,0.667,66,0.502,67,0.667,68,1.721,69,0.667,70,1.05,71,0.687,72,0.667,73,0.502,74,0.667,75,0.502,76,0.822,77,0.502,78,0.667,79,0.667,80,0.006,81,0.01,82,0.006,96,1.648,118,0.706,123,1.707,124,0.748,143,2.034,144,4.487,171,1.051,173,0.518,174,0.335,175,0.363,176,0.453,177,1.001,183,2.845,184,0.691,186,0.844,188,1.18,192,0.858,193,1.414,194,0.925,195,0.844,196,0.518,198,0.9,199,0.939,200,1.179,201,1.278,202,2.026,211,0.531,212,0.842,217,0.914,221,1.205,223,1.003,225,0.827,235,0.791,236,1.18,259,2.118,271,2.483,279,2.343,283,1.051,284,1.55,288,1.759,289,1.646,290,2.495,293,1.858,300,1.55,302,1.759,303,2.026,305,2.412,309,1.251,312,2.129,315,1.414,316,1.868,317,1.329,323,1.021,325,1.478,326,1.478,327,0.748,328,0.793,329,0.562,330,0.793,332,2.129,333,0.843,334,0.843,336,1.23,337,0.793,338,2.008,343,1.251,344,1.751,346,1.759,347,1.507,349,0.748,355,0.793,357,0.793,358,0.63,359,0.748,364,1.302,365,1.23,366,0.843,367,1.251,368,1.81,369,1.379,370,1.55,371,1.868,375,1.805,376,2.427,378,0.748,381,0.793,409,1.113,421,1.278,447,0.955,478,1.278,479,2.261,482,1.507,484,2.412,506,2.263,509,1.987,510,0.955,511,1.75,513,0.955,514,1.868,515,2.564,516,2.449,517,1.329,518,0.955,519,0.955,520,0.955,521,1.866,522,0.955,523,0.955,524,0.955,528,0.793,543,2.845,545,0.955,548,0.955,594,1.461,598,2.021,646,1.759,647,1.507,657,1.866,658,1.414,661,2.833,662,2.463,663,2.163,664,1.805,669,2.015,670,2.495,671,1.866,672,1.414,677,0.793,685,2.614,686,1.86,687,1.113,695,0.843,710,1.021,711,1.021,712,1.021,713,1.987,714,1.866,715,2.118,716,1.021,717,0.955,718,0.955,719,1.021,724,1.414,729,1.021,730,1.021,731,1.021,732,1.021,733,2.303,734,0.63,735,0.896,736,0.896,737,0.896,738,1.021,739,0.955,740,1.021,741,1.021,742,0.843,743,1.021,744,1.278,754,1.021,755,1.179,787,1.61,788,2.202,790,1.61,792,1.021,793,1.021,794,1.61,795,1.021,796,1.021,797,1.021,798,1.021,799,1.021,800,1.021,801,0.955,802,1.61,803,1.021,804,1.61,805,1.021,806,1.021,807,1.021,808,0.955,809,3.281,810,0.955,811,1.021,812,1.021,813,1.021,887,1.727,898,1.278,986,2.405,988,1.727,989,1.86,990,2.015,991,2.015,992,2.015,995,2.495,996,2.495,997,2.495,998,2.495,999,2.495,1000,2.495,1001,2.463,1002,2.495,1003,2.495,1004,3.016,1010,1.86,1012,3.546,1013,3.489,1016,2.436,1022,1.61,1027,1.396,1029,1.278,1030,2.015,1032,2.436,1036,2.436,1163,1.544,1164,2.749,1165,3.403,1166,2.749,1167,3.224,1168,2.044,1169,2.044,1170,2.044,1171,2.044,1172,2.044,1173,2.044,1174,2.044,1175,2.044,1176,2.044,1177,2.044,1178,2.044,1179,2.044,1180,2.044,1181,2.044,1182,2.044,1183,1.743,1184,2.044,1185,3.224,1186,4.531,1187,2.044,1188,2.044]],["title/components/WizardParentComponent.html",[0,0.16,73,0.934]],["body/components/WizardParentComponent.html",[0,0.261,1,0.765,2,1.104,3,0.28,4,0.28,5,0.96,6,0.96,7,0.96,8,0.96,9,0.21,11,0.305,14,1.96,20,0.571,21,0.96,22,2.148,23,2.148,24,1.309,26,1.309,28,0.651,29,1.535,30,0.607,31,0.023,32,0.305,33,0.025,34,0.857,35,1.309,36,1.385,37,1.535,38,1.779,39,0.96,40,0.678,41,0.96,42,0.682,43,0.723,44,0.96,45,0.723,46,0.857,47,0.96,48,0.765,49,0.96,50,0.723,51,0.96,52,0.723,53,1.727,54,1.223,55,0.96,56,0.723,57,0.96,58,0.723,59,0.96,60,0.96,61,0.723,62,0.96,63,0.723,64,1.104,65,0.96,66,0.723,67,0.96,68,0.765,69,0.96,70,0.682,71,0.28,72,0.96,73,1.339,74,0.96,75,0.723,76,0.813,77,0.723,78,0.96,79,0.96,80,0.009,81,0.013,82,0.009,88,3.209,98,2.901,110,1.84,123,1.684,124,2.372,172,1.985,173,0.877,174,0.441,175,0.331,176,0.597,184,0.703,186,0.773,192,0.413,195,0.789,196,0.877,212,0.801,217,0.93,221,0.571,223,0.992,225,0.996,271,1.997,279,2.325,283,1.385,284,1.934,293,1.809,302,2.34,303,1.966,325,1.779,326,1.779,327,1.554,328,1.649,329,1.168,330,2.118,331,4.122,336,1.309,347,2.55,371,2.385,375,1.997,409,1.017,413,2.224,415,2.01,430,1.84,460,2.224,461,3.726,462,1.84,466,2.224,479,1.751,528,1.143,533,2.224,542,2.224,594,1.077,598,1.721,663,2.537,664,2.117,672,3.175,677,1.649,706,3.621,808,1.376,810,1.376,825,2.224,869,3.209,986,2.372,1001,2.889,1010,2.45,1022,2.121,1044,3.147,1189,2.509,1190,4.247,1191,5.838,1192,4.247,1193,4.983,1194,4.247,1195,4.247,1196,4.983,1197,4.247,1198,4.247,1199,4.247,1200,2.943,1201,4.247,1202,5.455,1203,4.247,1204,6.894,1205,2.943,1206,4.247,1207,2.943,1208,4.247,1209,2.943,1210,4.247,1211,4.247,1212,4.247,1213,4.247,1214,2.943,1215,4.247,1216,4.247,1217,4.247,1218,2.943,1219,2.943,1220,4.247,1221,3.621,1222,2.943,1223,2.943,1224,2.943,1225,2.943,1226,2.943,1227,4.247,1228,2.943,1229,2.943,1230,4.247,1231,2.943,1232,4.247,1233,2.943,1234,2.943,1235,2.943,1236,2.943,1237,2.943,1238,2.943,1239,2.943,1240,4.247,1241,2.943,1242,4.247,1243,4.247,1244,2.943,1245,2.01,1246,2.943,1247,2.943,1248,4.247,1249,4.247,1250,4.247,1251,2.943,1252,2.943,1253,2.943]],["title/injectables/WizardParentStepperService.html",[664,1.392,833,1.777]],["body/injectables/WizardParentStepperService.html",[3,0.415,4,0.415,9,0.31,11,0.452,12,2.72,14,1.613,28,0.623,30,0.897,31,0.023,32,0.452,33,0.037,71,0.612,80,0.013,81,0.017,82,0.013,123,1.811,124,2.551,174,0.575,175,0.49,176,0.778,184,0.806,186,0.837,192,0.902,195,0.725,217,0.891,221,1.075,223,0.95,279,1.914,293,1.267,329,1.766,368,2.43,369,1.914,375,2.48,395,3.785,408,1.908,598,2.407,664,2.028,672,2.971,677,2.63,833,2.59,834,2.72,894,2.972,986,2.551,1044,3.703,1191,4.724,1254,3.288,1255,4.724,1256,5.541,1257,5.541,1258,4.724,1259,6.096,1260,6.096,1261,6.096,1262,6.096,1263,6.418,1264,6.418,1265,5.541,1266,4.352,1267,6.418,1268,3.711,1269,7.037,1270,4.352,1271,4.352,1272,4.352,1273,4.352,1274,4.352]],["title/injectables/WizardStepperService.html",[96,1.046,833,1.777]],["body/injectables/WizardStepperService.html",[3,0.238,4,0.238,9,0.178,11,0.259,12,1.56,28,0.567,30,0.514,31,0.023,32,0.259,33,0.022,40,0.663,71,0.578,76,1.008,80,0.008,81,0.011,82,0.008,96,1.035,123,1.837,155,2.875,163,1.577,173,0.947,174,0.39,175,0.663,176,0.528,177,1.282,184,0.657,186,0.856,192,0.828,195,0.812,196,0.869,198,1.133,212,1.093,216,2.963,217,1.132,220,3.159,221,1.049,223,1.01,225,1.133,239,2.272,288,2.603,292,4.69,329,1.035,344,1.949,345,2.209,364,2.255,365,2.082,369,1.299,378,2.315,408,1.095,410,1.44,447,2.526,451,2.17,458,1.44,586,3.858,594,0.914,646,2.641,724,2.491,779,1.649,833,1.758,834,1.56,849,4.295,853,3.207,866,4.843,869,4.584,882,3.207,887,3.388,888,3.441,890,4.69,894,1.705,922,3.207,923,5.323,986,2.586,1156,2.842,1245,1.705,1254,1.886,1258,3.207,1268,2.128,1275,3.761,1276,3.207,1277,6.584,1278,5.895,1279,6.208,1280,5.037,1281,5.037,1282,5.037,1283,4.295,1284,5.037,1285,5.037,1286,5.037,1287,5.037,1288,5.037,1289,5.037,1290,3.761,1291,3.761,1292,3.761,1293,3.761,1294,3.761,1295,2.496,1296,3.761,1297,2.496,1298,2.496,1299,2.496,1300,2.496,1301,2.496,1302,2.496,1303,2.496,1304,2.496,1305,3.761,1306,2.496,1307,2.496,1308,3.761,1309,3.761,1310,2.496,1311,3.761,1312,2.496,1313,3.761,1314,2.496,1315,2.496,1316,3.761,1317,2.496,1318,2.496,1319,2.496,1320,3.761,1321,2.496,1322,3.761,1323,2.496,1324,5.037,1325,2.496,1326,2.496,1327,2.496,1328,2.128,1329,2.496,1330,2.496,1331,2.496,1332,3.761,1333,2.496,1334,2.496,1335,3.761,1336,2.496,1337,2.496,1338,3.761,1339,2.496,1340,2.496,1341,2.496]],["title/classes/Workflow.html",[33,0.033,76,0.534]],["body/classes/Workflow.html",[3,0.229,4,0.229,9,0.171,11,0.637,28,0.675,31,0.023,32,0.249,33,0.046,40,0.796,54,1.085,64,0.949,71,0.421,76,1.019,80,0.007,81,0.011,82,0.007,146,1.602,150,1.501,155,2.861,163,1.678,166,1.707,167,0.783,172,1.707,173,0.987,174,0.622,175,0.655,176,0.694,177,1.178,180,2.746,181,2.629,182,1.824,184,0.537,186,0.827,189,1.835,192,0.621,194,1.145,195,0.855,196,0.987,198,1.261,211,1.284,212,1.137,216,2.894,217,1.105,220,2.795,221,1.192,222,2.367,223,0.959,224,1.199,225,1.143,235,0.589,239,2.129,240,3.019,256,3.019,275,3.373,344,2.012,345,2.166,349,1.945,354,2.759,365,1.125,481,2.763,483,4.252,484,2.19,485,4.196,486,1.707,489,2.283,490,1.122,491,1.707,600,3.114,604,2.047,606,2.047,612,2.047,614,2.047,616,3.768,618,3.768,619,2.047,621,2.047,632,3.114,675,2.654,681,2.494,713,1.602,733,1.261,860,3.114,888,4.548,928,2.759,1026,2.047,1088,2.047,1111,2.047,1131,2.047,1161,2.759,1183,2.047,1283,4.211,1342,1.814,1343,1.956,1344,3.114,1345,3.114,1346,3.114,1347,2.283,1348,4.96,1349,6.966,1350,3.114,1351,3.114,1352,3.652,1353,3.652,1354,4.939,1355,3.652,1356,4.42,1357,3.652,1358,2.401,1359,4.014,1360,3.652,1361,2.401,1362,2.401,1363,3.652,1364,2.401,1365,4.939,1366,4.939,1367,4.939,1368,3.652,1369,3.114,1370,3.652,1371,4.939,1372,3.652,1373,2.401,1374,3.652,1375,3.652,1376,3.652,1377,2.401,1378,4.939,1379,6.262,1380,5.995,1381,3.652,1382,2.401,1383,3.652,1384,2.401,1385,3.652,1386,4.939,1387,2.401,1388,4.939,1389,3.652,1390,2.401,1391,2.401,1392,2.401,1393,2.401,1394,2.401,1395,2.401,1396,2.401,1397,2.401,1398,2.401,1399,2.401,1400,2.401,1401,2.401,1402,4.42,1403,2.401,1404,3.652,1405,2.401,1406,2.401,1407,2.401,1408,2.401,1409,6.712,1410,2.401,1411,2.401,1412,2.401,1413,3.652,1414,3.652,1415,2.401,1416,2.401,1417,2.401,1418,2.401,1419,2.401,1420,2.401,1421,2.401,1422,2.401,1423,2.401,1424,3.652,1425,2.401,1426,2.401,1427,3.652,1428,2.401,1429,2.401,1430,2.401,1431,2.401]],["title/classes/WorkflowListElement.html",[33,0.033,885,2.377]],["body/classes/WorkflowListElement.html",[0,0.205,3,0.465,4,0.465,9,0.348,11,0.507,31,0.022,32,0.507,33,0.055,40,0.67,76,0.836,77,1.461,80,0.015,81,0.018,82,0.015,167,1.592,172,2.282,174,0.507,175,0.549,176,0.902,180,2.816,181,2.816,184,0.833,186,0.813,189,2.056,192,0.836,195,0.84,198,1.086,212,1.075,345,3.006,395,4.386,675,2.973,885,4.015,889,4.163,962,4.163,966,6.119,1344,4.163,1345,4.163,1346,4.163,1348,5.476,1359,4.497,1432,5.844,1433,4.163,1434,4.882,1435,4.882,1436,7.058,1437,5.953,1438,6.972,1439,4.882,1440,4.882]],["title/components/WorkflowTableComponent.html",[0,0.16,75,0.934]],["body/components/WorkflowTableComponent.html",[0,0.273,1,0.614,2,0.937,3,0.225,4,0.225,5,0.77,6,0.77,7,0.77,8,0.77,9,0.168,11,0.547,20,0.849,21,0.77,22,2.077,23,2.077,24,1.111,26,1.111,28,0.651,29,1.348,30,0.487,31,0.023,32,0.245,33,0.02,34,0.687,35,1.111,36,1.176,37,0.728,38,1.597,39,0.77,40,0.732,41,0.77,42,0.547,43,1.074,44,0.77,45,0.58,46,1.274,47,0.77,48,0.614,49,0.77,50,0.58,51,0.77,52,0.58,53,1.598,54,1.074,55,0.77,56,0.58,57,0.77,58,0.58,59,0.77,60,0.77,61,0.58,62,0.77,63,0.58,64,0.937,65,0.77,66,0.58,67,0.77,68,0.614,69,0.77,70,0.547,71,0.417,72,0.77,73,0.58,74,0.77,75,1.202,76,1.02,77,1.531,78,0.77,79,0.77,80,0.007,81,0.011,82,0.007,96,1.681,118,0.816,123,0.614,141,4.969,146,1.581,150,2.254,155,1.487,158,1.476,159,1.476,160,2.254,161,1.476,162,1.476,163,0.614,164,2.463,166,1.104,173,0.848,174,0.374,175,0.266,176,0.507,177,0.798,184,0.641,186,0.791,189,2.343,192,0.688,194,0.836,195,0.816,196,0.848,197,3.194,198,1.174,199,1.619,211,1.621,212,1.033,217,0.894,221,0.849,223,1.069,225,1.055,228,2.08,271,1.792,283,1.176,293,1.684,303,1.813,309,1.4,312,2.315,315,1.581,316,1.487,317,1.487,323,2.446,325,1.176,326,1.176,332,1.4,336,1.111,337,1.4,338,1.32,343,2.047,344,1.625,345,2.68,346,2.158,349,2.321,355,1.4,357,1.4,358,1.111,359,1.32,364,1.597,365,1.713,367,1.4,368,1.245,381,1.4,387,2.463,408,1.036,409,0.816,410,1.362,451,2.08,458,2.08,469,1.784,470,2.254,477,2.463,480,3.82,481,1.476,483,3.615,485,3.728,486,1.104,488,1.613,489,1.476,490,1.104,491,1.104,492,1.613,511,1.036,514,0.974,517,2.019,528,1.4,646,2.047,658,1.036,661,3.061,662,2.634,677,1.4,690,2.013,695,2.019,733,1.245,734,1.348,735,1.581,736,1.581,737,1.581,744,1.476,749,1.784,770,2.013,779,1.036,791,3.074,838,3.074,841,3.074,842,4.175,843,2.013,858,3.074,863,3.074,865,4.505,885,3.061,892,2.013,893,2.013,900,3.074,908,4.175,989,2.08,1027,1.613,1156,3.305,1161,1.784,1276,3.074,1359,2.724,1369,3.074,1441,5.608,1442,2.013,1443,3.606,1444,3.074,1445,3.606,1446,3.606,1447,3.606,1448,4.375,1449,3.606,1450,4.375,1451,4.375,1452,4.896,1453,3.606,1454,3.606,1455,3.606,1456,3.606,1457,3.606,1458,2.361,1459,2.361,1460,3.606,1461,2.361,1462,3.606,1463,5.559,1464,3.606,1465,2.361,1466,3.606,1467,2.361,1468,2.361,1469,3.699,1470,4.175,1471,3.606,1472,2.361,1473,3.606,1474,2.361,1475,2.361,1476,2.361,1477,2.361,1478,3.606,1479,2.361,1480,2.361,1481,2.361,1482,4.375,1483,4.375,1484,2.361,1485,3.606,1486,3.606,1487,3.606,1488,3.606,1489,3.606,1490,3.606,1491,3.606,1492,3.606,1493,3.606,1494,4.375,1495,3.606,1496,2.361,1497,2.361,1498,2.361,1499,3.606,1500,3.606,1501,3.606,1502,3.606,1503,3.606]],["title/coverage.html",[1504,4.327]],["body/coverage.html",[0,0.303,1,1.075,9,0.295,10,3.527,20,1.041,31,0.022,33,0.062,42,0.959,45,1.015,48,1.075,50,1.015,52,1.015,54,1.641,56,1.015,58,1.015,61,1.015,63,1.015,64,1.637,66,1.015,68,1.075,70,0.959,71,0.567,73,1.015,75,1.015,76,0.581,77,1.015,80,0.012,81,0.016,82,0.012,96,1.138,119,3.353,121,3.125,123,1.841,124,1.963,126,3.125,128,3.125,130,3.125,132,3.125,134,3.125,136,3.125,139,3.125,141,3.125,144,2.825,163,1.075,166,1.934,168,4.065,169,3.527,195,0.541,240,2.825,241,3.527,256,2.825,257,3.527,268,3.663,269,3.663,311,2.586,345,1.814,382,2.825,406,2.586,484,1.705,486,1.934,490,1.934,491,1.934,514,3.045,596,3.527,598,1.429,622,3.527,623,3.527,628,3.527,629,3.527,662,2.066,664,1.514,665,2.825,742,1.705,817,4.052,818,3.527,821,3.527,824,3.527,833,2.943,835,3.527,836,3.527,885,2.586,915,3.527,939,3.527,945,3.125,946,3.125,953,3.527,954,3.527,961,3.527,986,2.592,987,3.527,1037,3.527,1055,3.527,1068,3.527,1094,3.527,1115,3.527,1135,3.125,1163,3.125,1189,3.527,1254,4.052,1342,3.125,1432,3.527,1433,3.527,1441,3.527,1442,3.527,1504,3.527,1505,3.125,1506,4.137,1507,4.137,1508,4.137,1509,4.137,1510,4.137,1511,5.363,1512,4.137,1513,4.137,1514,6.524,1515,4.137,1516,6.685,1517,4.137,1518,6.297,1519,5.952,1520,5.363,1521,5.363,1522,5.363,1523,5.363,1524,4.137,1525,4.137,1526,4.137,1527,4.137]],["title/dependencies.html",[86,2.839,1528,3.234]],["body/dependencies.html",[30,1.092,31,0.023,80,0.016,81,0.019,82,0.016,86,3.313,103,5.331,104,4.724,110,3.313,115,4.518,118,1.83,408,2.324,415,3.62,666,4.518,696,4.004,746,5.331,977,4.518,978,4.518,979,4.518,1529,5.299,1530,7.228,1531,5.299,1532,6.253,1533,5.299,1534,5.299,1535,5.299,1536,5.299,1537,5.299,1538,5.299,1539,5.299,1540,5.299,1541,5.299,1542,5.299,1543,5.299,1544,5.299,1545,5.299,1546,5.299,1547,5.299,1548,5.299]],["title/index.html",[175,0.364,669,2.022,1549,3.234]],["body/index.html",[0,0.3,2,1.481,11,0.472,14,1.659,19,4.304,31,0.019,43,1.116,46,1.659,53,1.649,54,1.399,64,1.481,71,0.433,76,0.874,77,1.399,80,0.014,81,0.017,82,0.014,155,2.349,164,3.891,174,0.472,194,1.054,200,3.287,275,3.106,277,3.436,278,3.436,293,2.079,327,1.664,347,2.663,359,1.664,482,2.663,517,1.875,598,2.367,636,4.857,671,3.048,673,3.436,681,3.891,687,2.149,825,3.436,827,3.877,865,3.436,928,3.436,947,3.877,973,3.436,988,3.332,1044,2.623,1095,4.857,1221,3.877,1347,2.843,1505,5.311,1550,5.697,1551,5.697,1552,4.548,1553,4.548,1554,4.548,1555,4.548,1556,4.548,1557,4.548,1558,4.548,1559,4.548,1560,5.697,1561,6.221,1562,4.548,1563,4.548,1564,4.548,1565,4.548,1566,4.548,1567,4.548,1568,4.548,1569,4.548,1570,4.548,1571,4.548,1572,4.548,1573,6.221,1574,4.548,1575,4.548,1576,4.548,1577,4.548,1578,4.548,1579,4.548,1580,5.697,1581,5.697,1582,4.548,1583,4.548,1584,3.877,1585,4.548,1586,4.548,1587,5.697,1588,4.548,1589,4.548,1590,4.548,1591,4.857,1592,4.548,1593,4.548,1594,4.548,1595,4.548,1596,5.697,1597,4.548,1598,4.548,1599,4.548,1600,4.548,1601,4.548,1602,4.548,1603,4.548,1604,4.548,1605,4.548,1606,5.697,1607,4.548,1608,4.548,1609,4.548,1610,5.697,1611,4.548,1612,4.548,1613,4.548,1614,4.548,1615,4.548]],["title/modules.html",[85,3.172]],["body/modules.html",[31,0.02,43,1.405,80,0.017,81,0.02,82,0.017,84,3.91,85,3.579,95,3.579,104,4.326,1616,5.725,1617,5.725,1618,6.54,1619,5.725]],["title/overview.html",[1469,3.834]],["body/overview.html",[1,1.829,2,1.252,13,3.638,31,0.022,34,1.402,42,1.479,45,1.567,48,1.659,50,1.567,52,1.567,56,1.567,58,1.567,61,1.567,63,1.567,66,1.567,68,1.659,70,1.479,73,1.567,75,1.567,80,0.015,81,0.018,82,0.015,83,3.01,84,5.127,85,3.01,86,3.01,87,3.638,88,3.638,89,3.638,90,4.105,91,4.105,92,4.105,93,4.105,94,4.105,95,3.99,96,1.756,97,5.033,98,3.289,99,4.105,117,2.778,167,1.57,834,3.01,1245,3.289,1469,3.638,1620,4.815,1621,4.105,1622,5.903]],["title/routes.html",[117,2.928]],["body/routes.html",[31,0.02,80,0.018,81,0.02,82,0.018,117,3.348]],["title/additional-documentation/introduction.html",[20,0.628,687,1.117,1623,2.757]],["body/additional-documentation/introduction.html",[0,0.256,31,0.018,33,0.044,40,0.572,71,0.671,76,0.714,80,0.015,81,0.018,82,0.015,86,3.813,117,2.932,143,2.732,146,2.866,167,1.658,174,0.633,176,0.714,206,2.376,293,1.48,329,1.398,358,1.566,484,2.095,670,3.177,671,3.24,675,2.539,734,1.566,779,2.229,801,2.851,973,3.84,1044,3.77,1164,5.2,1255,5.2,1343,3.5,1444,4.333,1470,4.333,1505,3.84,1584,4.333,1591,5.91,1623,4.333,1624,5.082,1625,6.099,1626,6.535,1627,5.082,1628,5.082,1629,5.082,1630,5.082,1631,5.082,1632,5.082,1633,5.082,1634,6.099,1635,5.082,1636,5.082,1637,5.082,1638,6.535,1639,5.082,1640,5.082,1641,5.082,1642,5.082,1643,5.082,1644,5.082,1645,5.082,1646,5.082,1647,5.082,1648,5.082]],["title/additional-documentation/steps-adding-new-method.html",[20,0.433,71,0.213,143,0.867,687,0.771,1347,1.396,1649,1.904]],["body/additional-documentation/steps-adding-new-method.html",[0,0.236,14,1.638,31,0.02,71,0.65,76,0.79,80,0.017,81,0.02,82,0.017,117,3.245,143,2.184,146,2.839,174,0.584,338,2.059,358,1.733,671,2.629,675,2.81,734,1.733,779,2.467,1343,3.467,1347,3.516,1649,4.796,1650,5.625]],["title/additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html",[20,0.433,71,0.213,594,0.817,675,1.115,687,0.771,1343,1.196]],["body/additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html",[9,0.4,31,0.02,33,0.048,71,0.616,80,0.017,81,0.02,82,0.017,143,2.181,484,2.316,671,2.625,675,2.806,733,1.94,734,1.731,945,4.244,946,4.244,1343,3.649,1651,5.617,1652,4.789,1653,3.511,1654,5.617,1655,4.789,1656,4.789,1657,4.789,1658,4.789]],["title/additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html",[20,0.433,76,0.314,146,0.979,687,0.771,1245,1.525,1343,1.196]],["body/additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html",[28,0.639,31,0.02,76,0.797,80,0.017,81,0.02,82,0.017,146,3,484,2.895,779,2.489,1342,4.287,1343,3.039,1350,4.838,1351,4.838,1653,3.547,1659,5.675]],["title/additional-documentation/steps-adding-new-method/3.-create-new-component.html",[0,0.094,20,0.433,71,0.213,687,0.771,734,0.688,1328,1.904]],["body/additional-documentation/steps-adding-new-method/3.-create-new-component.html",[0,0.295,9,0.476,31,0.019,35,1.653,71,0.697,80,0.016,81,0.019,82,0.016,123,1.738,143,2.445,144,4.567,508,4.575,671,2.944,672,2.353,675,2.68,733,2.309,734,1.653,986,2.525,1163,4.054,1165,4.575,1166,4.575,1652,4.575,1653,3.354,1655,5.701,1656,4.575,1657,5.701,1658,5.701]],["title/additional-documentation/steps-adding-new-method/4.-add-route.html",[20,0.483,146,1.092,687,0.86,1621,2.123,1660,2.123]],["body/additional-documentation/steps-adding-new-method/4.-add-route.html",[0,0.237,31,0.02,70,1.309,71,0.618,80,0.017,81,0.02,82,0.017,83,3.532,111,4.817,112,4.817,113,4.817,146,2.478,147,4.817,157,3.259,293,1.645,358,2,779,2.478,1347,3.532,1653,3.532,1660,4.817,1661,5.65]],["title/additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html",[20,0.433,174,0.232,358,0.688,687,0.771,779,0.979,1662,2.233]],["body/additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html",[2,1.441,31,0.019,43,1.576,53,1.576,80,0.017,81,0.019,82,0.017,119,3.465,146,2.815,155,2.286,157,3.704,174,0.575,268,3.786,269,4.385,309,2.631,344,1.708,742,2.286,779,2.431,1135,4.85,1653,4.013,1663,5.544,1664,6.42,1665,6.42,1666,5.544,1667,5.544]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["0",{"_index":235,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"classes/Workflow.html":{}}}],["0.12",{"_index":579,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["0.14",{"_index":576,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["0.2",{"_index":574,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["0.7em",{"_index":565,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["0.8em",{"_index":564,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["0.9.1",{"_index":1548,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":594,"title":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{}},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/Move.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardStepperService.html":{}}}],["1.8em",{"_index":549,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["1.9.0",{"_index":1546,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1508,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":763,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["100",{"_index":514,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["100px",{"_index":811,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["10px",{"_index":516,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["13",{"_index":1622,"title":{},"body":{"overview.html":{}}}],["13/13",{"_index":1517,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":1523,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":577,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["15",{"_index":1620,"title":{},"body":{"overview.html":{}}}],["16/16",{"_index":1510,"title":{},"body":{"coverage.html":{}}}],["18em",{"_index":535,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["1em",{"_index":557,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["1px",{"_index":537,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["1rem",{"_index":524,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["1st",{"_index":343,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["2",{"_index":1245,"title":{"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}},"body":{"components/WizardParentComponent.html":{},"injectables/WizardStepperService.html":{},"overview.html":{}}}],["2.0.8",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1544,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1513,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":581,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["21/23",{"_index":1521,"title":{},"body":{"coverage.html":{}}}],["25/26",{"_index":1526,"title":{},"body":{"coverage.html":{}}}],["250ms",{"_index":591,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["26/26",{"_index":1522,"title":{},"body":{"coverage.html":{}}}],["28/28",{"_index":1512,"title":{},"body":{"coverage.html":{}}}],["28/29",{"_index":1519,"title":{},"body":{"coverage.html":{}}}],["2em",{"_index":531,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["2px",{"_index":578,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["3",{"_index":1328,"title":{"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}},"body":{"injectables/WizardStepperService.html":{}}}],["3.0.1",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1511,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":512,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["30px",{"_index":807,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["31/31",{"_index":1509,"title":{},"body":{"coverage.html":{}}}],["3em",{"_index":547,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["3px",{"_index":559,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["4",{"_index":1621,"title":{"additional-documentation/steps-adding-new-method/4.-add-route.html":{}},"body":{"overview.html":{}}}],["4/4",{"_index":1515,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":815,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["4px",{"_index":551,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["5",{"_index":1662,"title":{"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}},"body":{}}],["5/5",{"_index":1514,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":236,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["500",{"_index":1497,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["5000",{"_index":775,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["5em",{"_index":546,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["5px",{"_index":534,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["6.4.0",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1516,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":792,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["607d8b",{"_index":555,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["60px",{"_index":806,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["8.0.0",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["8.1.3",{"_index":1530,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1524,"title":{},"body":{"coverage.html":{}}}],["8em",{"_index":568,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["8px",{"_index":575,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["9/9",{"_index":1525,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":1520,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":1518,"title":{},"body":{"coverage.html":{}}}],["9999px",{"_index":583,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["_activationtimeout",{"_index":179,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["_created_at",{"_index":1348,"title":{},"body":{"classes/Workflow.html":{},"classes/WorkflowListElement.html":{}}}],["_goalpose",{"_index":178,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{}}}],["_id",{"_index":180,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{}}}],["_jobobjects",{"_index":1386,"title":{},"body":{"classes/Workflow.html":{}}}],["_jobsobjects",{"_index":1349,"title":{},"body":{"classes/Workflow.html":{}}}],["_jointvales",{"_index":248,"title":{},"body":{"classes/ArmJoint.html":{}}}],["_jointvalues",{"_index":245,"title":{},"body":{"classes/ArmJoint.html":{}}}],["_name",{"_index":181,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{}}}],["_response",{"_index":916,"title":{},"body":{"injectables/JobsService.html":{}}}],["_responselistener",{"_index":917,"title":{},"body":{"injectables/JobsService.html":{}}}],["_timeout",{"_index":258,"title":{},"body":{"classes/ArmTrajectory.html":{}}}],["abstract",{"_index":597,"title":{},"body":{"classes/Base.html":{}}}],["accessors",{"_index":182,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"injectables/JobsService.html":{},"classes/NewMethod.html":{},"classes/Workflow.html":{}}}],["according",{"_index":204,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["accordingly",{"_index":678,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["action",{"_index":1471,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["activates",{"_index":691,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["activation",{"_index":787,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["activationtimeout",{"_index":208,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["activationtimeout(value",{"_index":620,"title":{},"body":{"classes/Base.html":{}}}],["activationtimout",{"_index":190,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{}}}],["actual",{"_index":670,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"additional-documentation/introduction.html":{}}}],["actual_component",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["adapted",{"_index":1639,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["add",{"_index":146,"title":{"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["added",{"_index":1164,"title":{},"body":{"components/WizardNewMethodComponent.html":{},"additional-documentation/introduction.html":{}}}],["adding",{"_index":1347,"title":{"additional-documentation/steps-adding-new-method.html":{}},"body":{"classes/Workflow.html":{},"index.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["additional",{"_index":687,"title":{"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"index.html":{}}}],["addjobs",{"_index":1350,"title":{},"body":{"classes/Workflow.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}}}],["addjobs(jobsname",{"_index":1363,"title":{},"body":{"classes/Workflow.html":{}}}],["addjobsformworkflow",{"_index":1351,"title":{},"body":{"classes/Workflow.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}}}],["addjobsformworkflow(job",{"_index":1372,"title":{},"body":{"classes/Workflow.html":{}}}],["addnew",{"_index":1452,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["adds",{"_index":1365,"title":{},"body":{"classes/Workflow.html":{}}}],["adjust",{"_index":1655,"title":{},"body":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["adjusted",{"_index":242,"title":{},"body":{"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/NewMethod.html":{}}}],["affected",{"_index":1590,"title":{},"body":{"index.html":{}}}],["alert('no",{"_index":471,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["align",{"_index":521,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["already",{"_index":703,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["alredy",{"_index":1375,"title":{},"body":{"classes/Workflow.html":{}}}],["always",{"_index":1644,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["angular",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"index.html":{},"additional-documentation/steps-adding-new-method.html":{}}}],["angular/animations",{"_index":1529,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1531,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":405,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/cdk/stepper",{"_index":1226,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["angular/common",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{}}}],["angular/compiler",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardParentComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":415,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardParentComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":118,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":585,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["animating",{"_index":588,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["api",{"_index":205,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["app.component.css",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":1561,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1576,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":84,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":95,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arm",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["arm_cartesian",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["arm_joints",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["arm_trajectory",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["armcartesian",{"_index":166,"title":{"classes/ArmCartesian.html":{}},"body":{"classes/ArmCartesian.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardJobComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["armcartesian(job",{"_index":1425,"title":{},"body":{"classes/Workflow.html":{}}}],["armcartesian(jobsname",{"_index":1416,"title":{},"body":{"classes/Workflow.html":{}}}],["armjoint",{"_index":240,"title":{"classes/ArmJoint.html":{}},"body":{"classes/ArmJoint.html":{},"classes/Workflow.html":{},"coverage.html":{}}}],["armtrajectory",{"_index":256,"title":{"classes/ArmTrajectory.html":{}},"body":{"classes/ArmTrajectory.html":{},"classes/Workflow.html":{},"coverage.html":{}}}],["array",{"_index":888,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{}}}],["ask",{"_index":694,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["ausgeführt",{"_index":462,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WizardParentComponent.html":{}}}],["ausgefürht",{"_index":1242,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["ausgführt",{"_index":1236,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["auslagern",{"_index":1407,"title":{},"body":{"classes/Workflow.html":{}}}],["auto",{"_index":813,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["available",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"index.html":{},"modules.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["availablejobscomponent",{"_index":42,"title":{"components/AvailableJobsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["availablejobscomponent's",{"_index":507,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["back",{"_index":677,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"components/WorkflowTableComponent.html":{}}}],["backcreateonclick",{"_index":648,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["backend",{"_index":211,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["background",{"_index":525,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["backrunonclick",{"_index":649,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["backupdateonclick",{"_index":650,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["badge",{"_index":560,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["base",{"_index":163,"title":{"classes/Base.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/WizardBaseComponent.html":{},"components/WizardJobComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["base'},{'name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["base.component",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["base.component.css",{"_index":1070,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.html",{"_index":1071,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts",{"_index":1068,"title":{},"body":{"components/WizardBaseComponent.html":{},"coverage.html":{}}}],["base.component.ts:115",{"_index":1074,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:24",{"_index":1084,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:28",{"_index":1076,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:32",{"_index":1077,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:36",{"_index":1079,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:40",{"_index":1080,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:44",{"_index":1081,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:48",{"_index":1082,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:52",{"_index":1083,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:56",{"_index":1085,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:60",{"_index":1086,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:64",{"_index":1078,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:68",{"_index":1072,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:87",{"_index":1073,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.component.ts:97",{"_index":1075,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["base.model",{"_index":224,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"classes/Workflow.html":{}}}],["base/wizard",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WizardBaseComponent.html":{},"coverage.html":{}}}],["base:10",{"_index":209,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["base:14",{"_index":213,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["base:18",{"_index":203,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["based",{"_index":1551,"title":{},"body":{"index.html":{}}}],["basemove",{"_index":490,"title":{"classes/BaseMove.html":{}},"body":{"components/AvailableJobsComponent.html":{},"classes/BaseMove.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardBaseComponent.html":{},"components/WizardJobComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["basemove(job",{"_index":1424,"title":{},"body":{"classes/Workflow.html":{}}}],["basemove(jobsname",{"_index":1414,"title":{},"body":{"classes/Workflow.html":{}}}],["basic",{"_index":1136,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["basically",{"_index":1577,"title":{},"body":{"index.html":{}}}],["bbd8dc",{"_index":553,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["before",{"_index":715,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["belonging",{"_index":874,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["best",{"_index":1628,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["beta.27",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":929,"title":{},"body":{"injectables/JobsService.html":{}}}],["bezier(0",{"_index":593,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["block",{"_index":519,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["boolean",{"_index":424,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["bootstrap",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":536,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["border_color",{"_index":1502,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["both",{"_index":926,"title":{},"body":{"injectables/JobsService.html":{}}}],["bottom:10px",{"_index":800,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["box",{"_index":570,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["break",{"_index":485,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["browse",{"_index":1618,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":376,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["buttons",{"_index":737,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["call_end",{"_index":1249,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["called",{"_index":327,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"index.html":{}}}],["calls",{"_index":188,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["cartesian",{"_index":200,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"index.html":{}}}],["cartesian'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["cartesian.component",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cartesian.component.css",{"_index":993,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.html",{"_index":994,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts",{"_index":987,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"coverage.html":{}}}],["cartesian.component.ts:115",{"_index":1007,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:24",{"_index":1021,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:28",{"_index":1009,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:32",{"_index":1011,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:36",{"_index":1015,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:40",{"_index":1017,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:44",{"_index":1018,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:48",{"_index":1019,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:52",{"_index":1020,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:56",{"_index":1023,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:60",{"_index":1024,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:64",{"_index":1014,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:68",{"_index":1005,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:87",{"_index":1006,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.component.ts:97",{"_index":1008,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["cartesian.model",{"_index":1026,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"classes/Workflow.html":{}}}],["cartesian.model.ts",{"_index":169,"title":{},"body":{"classes/ArmCartesian.html":{},"coverage.html":{}}}],["cartesian.model.ts:11",{"_index":187,"title":{},"body":{"classes/ArmCartesian.html":{}}}],["cartesian.model.ts:31",{"_index":219,"title":{},"body":{"classes/ArmCartesian.html":{}}}],["cartesian.model.ts:38",{"_index":215,"title":{},"body":{"classes/ArmCartesian.html":{}}}],["cartesian/wizard",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WizardArmCartesianComponent.html":{},"coverage.html":{}}}],["case",{"_index":483,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["cdk",{"_index":280,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["cdkdragdrop",{"_index":319,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["center",{"_index":804,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["cfd8dc",{"_index":527,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["change",{"_index":973,"title":{},"body":{"classes/SocketDataService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["changed",{"_index":948,"title":{},"body":{"classes/NewMethod.html":{}}}],["changes",{"_index":1255,"title":{},"body":{"injectables/WizardParentStepperService.html":{},"additional-documentation/introduction.html":{}}}],["checks",{"_index":1208,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["child",{"_index":988,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"index.html":{}}}],["children",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["chimera.the",{"_index":1557,"title":{},"body":{"index.html":{}}}],["choose",{"_index":342,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["choosen",{"_index":273,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["class",{"_index":33,"title":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{}}}],["class/model",{"_index":170,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["classes",{"_index":167,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["cleanup",{"_index":1212,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["clicked",{"_index":676,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["clicking",{"_index":1445,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["client",{"_index":979,"title":{},"body":{"classes/SocketDataService.html":{},"dependencies.html":{}}}],["cluster_appmodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1591,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["color",{"_index":526,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["color:#405061",{"_index":566,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["column",{"_index":1473,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["command",{"_index":1608,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":114,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["communicates",{"_index":633,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["communicating",{"_index":1457,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["communication",{"_index":837,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{}}}],["compodoc",{"_index":1573,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":1599,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["component_template",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["componentpath",{"_index":1665,"title":{},"body":{"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/JobsService.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["configurated",{"_index":631,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["configurator",{"_index":347,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"index.html":{}}}],["confirmed",{"_index":1614,"title":{},"body":{"index.html":{}}}],["connection",{"_index":748,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["connnect",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["console.log('back",{"_index":782,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["console.log('destroy",{"_index":1160,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["console.log('forward",{"_index":1247,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["console.log('goback",{"_index":1241,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["console.log('hello",{"_index":774,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["console.log('next",{"_index":773,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["console.log('ondestroy",{"_index":466,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardParentComponent.html":{}}}],["console.log('oninit",{"_index":460,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardParentComponent.html":{}}}],["console.log('workflow",{"_index":757,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["console.log(data",{"_index":1494,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["console.log(job",{"_index":1422,"title":{},"body":{"classes/Workflow.html":{}}}],["console.log(responsedata",{"_index":899,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{}}}],["console.log(this._goalpose",{"_index":237,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{}}}],["console.log(this._jobsobjects[count",{"_index":1428,"title":{},"body":{"classes/Workflow.html":{}}}],["console.log(this.armcartesian.goalpose",{"_index":1035,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["console.log(this.basemove.goalpose",{"_index":1093,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["console.log(this.counter",{"_index":459,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["console.log(this.eventemitterservice.subsnextvar",{"_index":1227,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["console.log(this.jobsupdated",{"_index":474,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(this.jobsupdated.length",{"_index":500,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["console.log(this.link",{"_index":492,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["console.log(this.newmethod.goalpose",{"_index":1188,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["console.log(this.status",{"_index":1157,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["console.log(this.stepper",{"_index":1232,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["console.log(this.wizardstepperservice.getcounter",{"_index":1495,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["console.log(this.wizardstepperservice.getstatus",{"_index":1483,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["console.log(this.workflow",{"_index":458,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{}}}],["console.log(this.workflow.getcurrentjob(this.counter",{"_index":1330,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["console.log(this.workflowlist",{"_index":910,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["console.log(workflow",{"_index":1491,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["console.log(workflow._name",{"_index":1490,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["const",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["constructor",{"_index":184,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["constructor(data",{"_index":185,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["constructor(eventemitterservice",{"_index":1200,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["constructor(http",{"_index":854,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{}}}],["constructor(id",{"_index":940,"title":{},"body":{"classes/Move.html":{}}}],["constructor(jobservice",{"_index":310,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["constructor(name",{"_index":600,"title":{},"body":{"classes/Base.html":{},"classes/Workflow.html":{}}}],["constructor(private",{"_index":430,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardParentComponent.html":{}}}],["constructor(protected",{"_index":749,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["constructor(router",{"_index":658,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["container",{"_index":510,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["containing",{"_index":632,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/Workflow.html":{}}}],["contains",{"_index":172,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/WizardJobComponent.html":{},"components/WizardParentComponent.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{}}}],["content",{"_index":803,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["control",{"_index":417,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.dirty",{"_index":428,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.invalid",{"_index":427,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.touched",{"_index":429,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["coordinates",{"_index":201,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["copiedjobs",{"_index":287,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["copy",{"_index":1657,"title":{},"body":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["copyarrayitem",{"_index":404,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["count",{"_index":1380,"title":{},"body":{"classes/Workflow.html":{}}}],["counter",{"_index":288,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{}}}],["counterlistener",{"_index":1277,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["countersub",{"_index":289,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["coverage",{"_index":1504,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":734,"title":{"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}},"body":{"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["created",{"_index":1470,"title":{},"body":{"components/WorkflowTableComponent.html":{},"additional-documentation/introduction.html":{}}}],["created_at",{"_index":1356,"title":{},"body":{"classes/Workflow.html":{}}}],["created_at(value",{"_index":1431,"title":{},"body":{"classes/Workflow.html":{}}}],["creates",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["createworkflow",{"_index":844,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["createworkflow(workflow",{"_index":856,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["creating",{"_index":1368,"title":{},"body":{"classes/Workflow.html":{}}}],["creation",{"_index":675,"title":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{}},"body":{"components/ExecutionRunComponent.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["crud",{"_index":838,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["css",{"_index":508,"title":{},"body":{"components/AvailableJobsComponent.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["cubic",{"_index":592,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["current",{"_index":869,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WizardParentComponent.html":{},"injectables/WizardStepperService.html":{}}}],["cursor",{"_index":541,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["custom",{"_index":1211,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["customworkflow",{"_index":488,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["data",{"_index":197,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["data._activationtimeout",{"_index":230,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["data._created_at",{"_index":1488,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["data._goalpose",{"_index":232,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{}}}],["data._id",{"_index":228,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"components/WorkflowTableComponent.html":{}}}],["data._jobsobjects",{"_index":1489,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["datasource",{"_index":1450,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["date",{"_index":1359,"title":{},"body":{"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["date.now",{"_index":1403,"title":{},"body":{"classes/Workflow.html":{}}}],["db",{"_index":860,"title":{},"body":{"injectables/HttpRequestService.html":{},"classes/Workflow.html":{}}}],["ddd",{"_index":556,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["declaration",{"_index":337,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["declarations",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["declares",{"_index":686,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["decorators",{"_index":1219,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["decreasecount",{"_index":1280,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["decreases",{"_index":1296,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["deep",{"_index":1252,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["default",{"_index":192,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["defined",{"_index":186,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["delete",{"_index":504,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{}}}],["delete_forever",{"_index":1503,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["deleted",{"_index":863,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["deletes",{"_index":1462,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["deleteworkflow",{"_index":845,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["deleteworkflow(id",{"_index":861,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["deliverd",{"_index":1636,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["dependencies",{"_index":86,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["dependent",{"_index":1645,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"index.html":{}}}],["design",{"_index":991,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["designed",{"_index":1624,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["destroyed",{"_index":330,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["detail",{"_index":1586,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":1581,"title":{},"body":{"index.html":{}}}],["developer",{"_index":1594,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1637,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["direct",{"_index":1588,"title":{},"body":{"index.html":{}}}],["directive",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["directives",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["directory",{"_index":1653,"title":{},"body":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["dirty",{"_index":418,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["disable",{"_index":374,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["disabled",{"_index":1041,"title":{},"body":{"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{}}}],["disabledacttimeout",{"_index":995,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["display",{"_index":517,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{},"index.html":{}}}],["displaydefaultindicatortype",{"_index":1195,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["displayed",{"_index":724,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/Move.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{}}}],["displayedcolumns",{"_index":1451,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["displays",{"_index":826,"title":{},"body":{"components/HeaderComponent.html":{}}}],["displayspinner",{"_index":639,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["doc",{"_index":1607,"title":{},"body":{"index.html":{}}}],["document",{"_index":1632,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["documentation",{"_index":1505,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["done",{"_index":505,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["drag",{"_index":277,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{}}}],["drag&drop",{"_index":272,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{}}}],["drop",{"_index":278,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"index.html":{}}}],["drop(event",{"_index":318,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["drop/overview",{"_index":282,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{}}}],["dropped",{"_index":587,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["dummy",{"_index":1634,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["dynamic",{"_index":1538,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1567,"title":{},"body":{"index.html":{}}}],["e.g",{"_index":733,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/NewMethod.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["each",{"_index":206,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"additional-documentation/introduction.html":{}}}],["eee",{"_index":539,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["eingener",{"_index":1405,"title":{},"body":{"classes/Workflow.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["element._created_at",{"_index":1501,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["element._id",{"_index":1499,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["element._name",{"_index":1500,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["element.model",{"_index":893,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["element.model.ts",{"_index":1433,"title":{},"body":{"classes/WorkflowListElement.html":{},"coverage.html":{}}}],["element.model.ts:10",{"_index":1439,"title":{},"body":{"classes/WorkflowListElement.html":{}}}],["element.model.ts:14",{"_index":1440,"title":{},"body":{"classes/WorkflowListElement.html":{}}}],["element.model.ts:18",{"_index":1437,"title":{},"body":{"classes/WorkflowListElement.html":{}}}],["enable",{"_index":373,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["end",{"_index":1572,"title":{},"body":{"index.html":{}}}],["enter",{"_index":482,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"index.html":{}}}],["entered",{"_index":276,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["entry",{"_index":1436,"title":{},"body":{"classes/WorkflowListElement.html":{}}}],["error",{"_index":385,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["errorstatematcher",{"_index":414,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["especially",{"_index":1434,"title":{},"body":{"classes/WorkflowListElement.html":{}}}],["etc",{"_index":1646,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["event",{"_index":321,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["event.container.data",{"_index":499,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["event.container.id",{"_index":494,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["event.currentindex",{"_index":497,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["event.previouscontainer.data",{"_index":498,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["event.previouscontainer.id",{"_index":493,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["event.previousindex",{"_index":496,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["eventemitter",{"_index":1269,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["eventemitterservice",{"_index":663,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["events",{"_index":1253,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["example",{"_index":509,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/NewMethod.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["execute(run",{"_index":840,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["executed",{"_index":336,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["executing",{"_index":636,"title":{},"body":{"components/ExecutionRunComponent.html":{},"index.html":{}}}],["execution",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"index.html":{}}}],["execution/execution",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["execution/http",{"_index":1027,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["executionruncomponent",{"_index":45,"title":{"components/ExecutionRunComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["explain",{"_index":1630,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["explained",{"_index":1585,"title":{},"body":{"index.html":{}}}],["explains",{"_index":1625,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["exports",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["express.js",{"_index":1568,"title":{},"body":{"index.html":{}}}],["extend",{"_index":947,"title":{},"body":{"classes/NewMethod.html":{},"index.html":{}}}],["extended",{"_index":1579,"title":{},"body":{"index.html":{}}}],["extends",{"_index":171,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["false",{"_index":479,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["find",{"_index":1580,"title":{},"body":{"index.html":{}}}],["finished",{"_index":765,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["first",{"_index":1369,"title":{},"body":{"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["flex",{"_index":802,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["following",{"_index":1611,"title":{},"body":{"index.html":{}}}],["font",{"_index":561,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["form",{"_index":421,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["form.submitted",{"_index":426,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formbuilder",{"_index":1224,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["formcontrol",{"_index":388,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formgroup",{"_index":1225,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["formgroupdirective",{"_index":411,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formsmodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["forum",{"_index":1250,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["forward",{"_index":736,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["found",{"_index":956,"title":{},"body":{"components/NoPageFoundComponent.html":{}}}],["found'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["found.component",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["found.component.css",{"_index":957,"title":{},"body":{"components/NoPageFoundComponent.html":{}}}],["found.component.html",{"_index":958,"title":{},"body":{"components/NoPageFoundComponent.html":{}}}],["found.component.ts",{"_index":954,"title":{},"body":{"components/NoPageFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":959,"title":{},"body":{"components/NoPageFoundComponent.html":{}}}],["found.component.ts:23",{"_index":960,"title":{},"body":{"components/NoPageFoundComponent.html":{}}}],["found/no",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NoPageFoundComponent.html":{},"coverage.html":{}}}],["front",{"_index":1571,"title":{},"body":{"index.html":{}}}],["full",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":1216,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["functionalities",{"_index":1137,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["fxflex",{"_index":812,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["g",{"_index":1598,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1602,"title":{},"body":{"index.html":{}}}],["generates",{"_index":1578,"title":{},"body":{"index.html":{}}}],["getactivationtimeout",{"_index":608,"title":{},"body":{"classes/Base.html":{}}}],["getallworkflows",{"_index":846,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["getarmposition",{"_index":847,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["getavailablejobs",{"_index":301,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["getbaseposition",{"_index":848,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["getcounter",{"_index":1281,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["getcounterlistener",{"_index":1282,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["getcreated_at",{"_index":1395,"title":{},"body":{"classes/Workflow.html":{}}}],["getcurrentjob",{"_index":1352,"title":{},"body":{"classes/Workflow.html":{}}}],["getcurrentjob(count",{"_index":1376,"title":{},"body":{"classes/Workflow.html":{}}}],["getgoalpose",{"_index":214,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{}}}],["getid",{"_index":604,"title":{},"body":{"classes/Base.html":{},"classes/Workflow.html":{}}}],["getjobname",{"_index":1353,"title":{},"body":{"classes/Workflow.html":{}}}],["getjobname(count",{"_index":1381,"title":{},"body":{"classes/Workflow.html":{}}}],["getjobs",{"_index":1283,"title":{},"body":{"injectables/WizardStepperService.html":{},"classes/Workflow.html":{}}}],["getjobsfromserver",{"_index":918,"title":{},"body":{"injectables/JobsService.html":{}}}],["getjobslength",{"_index":1354,"title":{},"body":{"classes/Workflow.html":{}}}],["getjobslistener",{"_index":1284,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["getjointvalues",{"_index":249,"title":{},"body":{"classes/ArmJoint.html":{}}}],["getname",{"_index":612,"title":{},"body":{"classes/Base.html":{},"classes/Workflow.html":{}}}],["getresponse",{"_index":932,"title":{},"body":{"injectables/JobsService.html":{}}}],["getresponselistener",{"_index":930,"title":{},"body":{"injectables/JobsService.html":{}}}],["getstatus",{"_index":1285,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["getstatuslistener",{"_index":1286,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["getter",{"_index":216,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/NewMethod.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{}}}],["gettimeout",{"_index":261,"title":{},"body":{"classes/ArmTrajectory.html":{}}}],["getting",{"_index":669,"title":{"index.html":{}},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["getworkflow",{"_index":849,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/WizardStepperService.html":{}}}],["getworkflow(id",{"_index":872,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["getworkflowitem",{"_index":1287,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["getworkflowlistener",{"_index":1288,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["getworkflowlistupdatelistener",{"_index":850,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["go",{"_index":1267,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["goal",{"_index":788,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["goalpose",{"_index":183,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["goalpose(value",{"_index":238,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{}}}],["goback",{"_index":1198,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["goback(stepper",{"_index":1203,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["goforward",{"_index":1199,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["goforward(stepper",{"_index":1206,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["graph",{"_index":1619,"title":{},"body":{"modules.html":{}}}],["grip",{"_index":1095,"title":{},"body":{"components/WizardGripperGripComponent.html":{},"index.html":{}}}],["grip'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["grip.component",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["grip.component.css",{"_index":1096,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.html",{"_index":1097,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts",{"_index":1094,"title":{},"body":{"components/WizardGripperGripComponent.html":{},"coverage.html":{}}}],["grip.component.ts:23",{"_index":1108,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:27",{"_index":1102,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:31",{"_index":1101,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:35",{"_index":1103,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:39",{"_index":1104,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:43",{"_index":1105,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:47",{"_index":1106,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:51",{"_index":1107,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:55",{"_index":1109,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:59",{"_index":1098,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:76",{"_index":1099,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.component.ts:85",{"_index":1100,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["grip.model",{"_index":1111,"title":{},"body":{"components/WizardGripperGripComponent.html":{},"classes/Workflow.html":{}}}],["grip.model.ts",{"_index":818,"title":{},"body":{"classes/GripperGrip.html":{},"coverage.html":{}}}],["grip.model.ts:7",{"_index":819,"title":{},"body":{"classes/GripperGrip.html":{}}}],["grip/wizard",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WizardGripperGripComponent.html":{},"coverage.html":{}}}],["gripper",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["gripper_grip",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["gripper_release",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["grippergrip",{"_index":486,"title":{"classes/GripperGrip.html":{}},"body":{"components/AvailableJobsComponent.html":{},"classes/GripperGrip.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardJobComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["grippergrip(job",{"_index":1423,"title":{},"body":{"classes/Workflow.html":{}}}],["grippergrip(jobsname",{"_index":1412,"title":{},"body":{"classes/Workflow.html":{}}}],["grippergripworkflow",{"_index":1411,"title":{},"body":{"classes/Workflow.html":{}}}],["gripperrelease",{"_index":491,"title":{"classes/GripperRelease.html":{}},"body":{"components/AvailableJobsComponent.html":{},"classes/GripperRelease.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["gripperrelease(job",{"_index":1426,"title":{},"body":{"classes/Workflow.html":{}}}],["gripperrelease(jobsname",{"_index":1418,"title":{},"body":{"classes/Workflow.html":{}}}],["gripperreleaseworkflow",{"_index":1417,"title":{},"body":{"classes/Workflow.html":{}}}],["h1",{"_index":793,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["h2",{"_index":794,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["h3",{"_index":795,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["h4",{"_index":796,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["h5",{"_index":797,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["h6",{"_index":798,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["hammerjs",{"_index":1539,"title":{},"body":{"dependencies.html":{}}}],["handel",{"_index":384,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["handle",{"_index":1344,"title":{},"body":{"classes/Workflow.html":{},"classes/WorkflowListElement.html":{}}}],["header",{"_index":825,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardParentComponent.html":{},"index.html":{}}}],["header'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["header.component.css",{"_index":829,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":830,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":48,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":548,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["help",{"_index":1593,"title":{},"body":{"index.html":{}}}],["here",{"_index":928,"title":{},"body":{"injectables/JobsService.html":{},"classes/Workflow.html":{},"index.html":{}}}],["hides",{"_index":683,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["hidespinner",{"_index":651,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["home",{"_index":827,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["hook",{"_index":326,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["horizontal",{"_index":810,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["host",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["http",{"_index":659,"title":{},"body":{"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{}}}],["http://localhost:3030",{"_index":970,"title":{},"body":{"classes/SocketDataService.html":{}}}],["httpclient",{"_index":660,"title":{},"body":{"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{}}}],["httpclientmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["httprequest",{"_index":661,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["httprequestservice",{"_index":662,"title":{"injectables/HttpRequestService.html":{}},"body":{"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["https://material.angular.io/cdk/drag",{"_index":281,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{}}}],["https://material.angular.io/components/button/overview",{"_index":1016,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["https://material.angular.io/components/categories",{"_index":992,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["https://material.angular.io/components/slider/overview",{"_index":1013,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["https://material.angular.io/components/stepper/overview",{"_index":1191,"title":{},"body":{"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{}}}],["icon",{"_index":828,"title":{},"body":{"components/HeaderComponent.html":{}}}],["icons",{"_index":1446,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["id",{"_index":189,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"classes/Move.html":{},"classes/NewMethod.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["id(value",{"_index":619,"title":{},"body":{"classes/Base.html":{},"classes/Workflow.html":{}}}],["identifier",{"_index":1506,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":433,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["illustrated",{"_index":1612,"title":{},"body":{"index.html":{}}}],["implements",{"_index":283,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["import",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}}}],["important",{"_index":528,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["imported",{"_index":1401,"title":{},"body":{"classes/Workflow.html":{}}}],["imports",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["included",{"_index":1635,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["includes",{"_index":1606,"title":{},"body":{"index.html":{}}}],["including",{"_index":1366,"title":{},"body":{"classes/Workflow.html":{}}}],["increasecount",{"_index":1289,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["increases",{"_index":1308,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["ind",{"_index":1360,"title":{},"body":{"classes/Workflow.html":{}}}],["indent",{"_index":582,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["index",{"_index":175,"title":{"index.html":{}},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["index.html",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["indicates",{"_index":955,"title":{},"body":{"components/NoPageFoundComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["information",{"_index":317,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["inherited",{"_index":202,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["injectable",{"_index":833,"title":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{}},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"coverage.html":{}}}],["injectables",{"_index":834,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"overview.html":{}}}],["inline",{"_index":518,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["inserts",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["install",{"_index":1596,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1010,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["instancing",{"_index":1367,"title":{},"body":{"classes/Workflow.html":{}}}],["instantiate",{"_index":969,"title":{},"body":{"classes/SocketDataService.html":{}}}],["instructions",{"_index":1582,"title":{},"body":{"index.html":{}}}],["integrate",{"_index":1626,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["interface",{"_index":1553,"title":{},"body":{"index.html":{}}}],["interim",{"_index":361,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["internally",{"_index":1346,"title":{},"body":{"classes/Workflow.html":{},"classes/WorkflowListElement.html":{}}}],["introduction",{"_index":1623,"title":{"additional-documentation/introduction.html":{}},"body":{"additional-documentation/introduction.html":{}}}],["invalid",{"_index":416,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["invert",{"_index":1042,"title":{},"body":{"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{}}}],["invertacttimeout",{"_index":996,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["invokebackfunction",{"_index":1259,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["invokenextfunction",{"_index":1260,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["invokes",{"_index":1215,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["io",{"_index":977,"title":{},"body":{"classes/SocketDataService.html":{},"dependencies.html":{}}}],["io(this.url",{"_index":981,"title":{},"body":{"classes/SocketDataService.html":{}}}],["isalreadysave",{"_index":640,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["isdisablednext",{"_index":290,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["isdisabledrun",{"_index":641,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["iserrorstate",{"_index":943,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate(control",{"_index":422,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["isloading",{"_index":642,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["issubmitted",{"_index":425,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ist",{"_index":723,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["item",{"_index":586,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/WizardStepperService.html":{}}}],["items",{"_index":805,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["i}}{{move",{"_index":502,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["job",{"_index":344,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["job's",{"_index":357,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["job'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["job._name",{"_index":1420,"title":{},"body":{"classes/Workflow.html":{}}}],["job.component",{"_index":743,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["job.component.css",{"_index":1139,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.html",{"_index":1140,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts",{"_index":1135,"title":{},"body":{"components/WizardJobComponent.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["job.component.ts:108",{"_index":1145,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:129",{"_index":1142,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:139",{"_index":1146,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:21",{"_index":1149,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:25",{"_index":1151,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:29",{"_index":1152,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:35",{"_index":1147,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:39",{"_index":1148,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:46",{"_index":1150,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:50",{"_index":1141,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:67",{"_index":1143,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.component.ts:92",{"_index":1144,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["job.goalpose",{"_index":789,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["job.name",{"_index":785,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["job/wizard",{"_index":742,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["jobe",{"_index":353,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["jobname",{"_index":354,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Workflow.html":{}}}],["jobs",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"index.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["jobs'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["jobs.component",{"_index":120,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["jobs.component.css",{"_index":285,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["jobs.component.html",{"_index":286,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["jobs.component.ts",{"_index":269,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["jobs.component.ts:102",{"_index":363,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:106",{"_index":313,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:122",{"_index":335,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:162",{"_index":324,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:174",{"_index":352,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:180",{"_index":322,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:186",{"_index":341,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:197",{"_index":339,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:203",{"_index":348,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:211",{"_index":350,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:22",{"_index":944,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["jobs.component.ts:226",{"_index":356,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:274",{"_index":320,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:42",{"_index":390,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:48",{"_index":383,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:52",{"_index":386,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:56",{"_index":372,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:60",{"_index":394,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:64",{"_index":396,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:68",{"_index":360,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:72",{"_index":392,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:76",{"_index":393,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:80",{"_index":398,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:84",{"_index":399,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:88",{"_index":379,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:92",{"_index":377,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.component.ts:96",{"_index":380,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["jobs.service",{"_index":401,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["jobs/available",{"_index":119,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["jobservice",{"_index":314,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["jobsname",{"_index":1371,"title":{},"body":{"classes/Workflow.html":{}}}],["jobsservice",{"_index":311,"title":{"injectables/JobsService.html":{}},"body":{"components/AvailableJobsComponent.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["jobssub",{"_index":291,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["jobsupdated",{"_index":292,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/WizardStepperService.html":{}}}],["joins",{"_index":1038,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["joins.component",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["joins.component.css",{"_index":1039,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.html",{"_index":1040,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.ts",{"_index":1037,"title":{},"body":{"components/WizardArmJoinsComponent.html":{},"coverage.html":{}}}],["joins.component.ts:16",{"_index":1053,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.ts:20",{"_index":1047,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.ts:24",{"_index":1048,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.ts:28",{"_index":1049,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.ts:32",{"_index":1050,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.ts:36",{"_index":1051,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.ts:40",{"_index":1052,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.ts:44",{"_index":1054,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins.component.ts:48",{"_index":1046,"title":{},"body":{"components/WizardArmJoinsComponent.html":{}}}],["joins/wizard",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WizardArmJoinsComponent.html":{},"coverage.html":{}}}],["joint.model",{"_index":1400,"title":{},"body":{"classes/Workflow.html":{}}}],["joint.model.ts",{"_index":241,"title":{},"body":{"classes/ArmJoint.html":{},"coverage.html":{}}}],["joint.model.ts:11",{"_index":247,"title":{},"body":{"classes/ArmJoint.html":{}}}],["joint.model.ts:25",{"_index":250,"title":{},"body":{"classes/ArmJoint.html":{}}}],["joint.model.ts:32",{"_index":252,"title":{},"body":{"classes/ArmJoint.html":{}}}],["jointvalues",{"_index":246,"title":{},"body":{"classes/ArmJoint.html":{}}}],["jointvalues(value",{"_index":255,"title":{},"body":{"classes/ArmJoint.html":{}}}],["jsondata",{"_index":896,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["keeps",{"_index":1258,"title":{},"body":{"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{}}}],["layout",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["left",{"_index":545,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"overview.html":{}}}],["length",{"_index":1388,"title":{},"body":{"classes/Workflow.html":{}}}],["li",{"_index":540,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["li.selected:hover",{"_index":552,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["li:hover",{"_index":554,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["lifecycle",{"_index":325,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["line",{"_index":567,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["line:no",{"_index":752,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["link",{"_index":293,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"components/WorkflowTableComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["links",{"_index":1589,"title":{},"body":{"index.html":{}}}],["list",{"_index":345,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["listen",{"_index":1322,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["listener",{"_index":1324,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["listens",{"_index":1320,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["local",{"_index":887,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{}}}],["locally",{"_index":364,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{}}}],["m",{"_index":1565,"title":{},"body":{"index.html":{}}}],["made",{"_index":1648,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["main",{"_index":1647,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["manipulators",{"_index":1556,"title":{},"body":{"index.html":{}}}],["manner",{"_index":1583,"title":{},"body":{"index.html":{}}}],["margin",{"_index":515,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["massage",{"_index":726,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["mat",{"_index":808,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["matcher",{"_index":294,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matching",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["material",{"_index":279,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{}}}],["matstepper",{"_index":1204,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["max",{"_index":513,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["maxacttimeout",{"_index":997,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["mean",{"_index":1562,"title":{},"body":{"index.html":{}}}],["message",{"_index":643,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/SocketDataService.html":{}}}],["messages",{"_index":747,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["method",{"_index":143,"title":{"additional-documentation/steps-adding-new-method.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/Base.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["method'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["method.component",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["method.component.css",{"_index":1165,"title":{},"body":{"components/WizardNewMethodComponent.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["method.component.html",{"_index":1166,"title":{},"body":{"components/WizardNewMethodComponent.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["method.component.ts",{"_index":1163,"title":{},"body":{"components/WizardNewMethodComponent.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["method.component.ts:100",{"_index":1170,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:118",{"_index":1169,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:27",{"_index":1179,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:31",{"_index":1176,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:35",{"_index":1171,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:39",{"_index":1173,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:43",{"_index":1174,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:47",{"_index":1175,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:51",{"_index":1177,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:55",{"_index":1178,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:59",{"_index":1180,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:63",{"_index":1181,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:67",{"_index":1172,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:71",{"_index":1167,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.component.ts:90",{"_index":1168,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["method.model",{"_index":1183,"title":{},"body":{"components/WizardNewMethodComponent.html":{},"classes/Workflow.html":{}}}],["method.model.ts",{"_index":946,"title":{},"body":{"classes/NewMethod.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{}}}],["method.model.ts:11",{"_index":949,"title":{},"body":{"classes/NewMethod.html":{}}}],["method.model.ts:31",{"_index":951,"title":{},"body":{"classes/NewMethod.html":{}}}],["method.model.ts:38",{"_index":950,"title":{},"body":{"classes/NewMethod.html":{}}}],["method.the",{"_index":1627,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["method/job",{"_index":207,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["method/wizard",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WizardNewMethodComponent.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["methode",{"_index":1406,"title":{},"body":{"classes/Workflow.html":{}}}],["methods",{"_index":174,"title":{"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}},"body":{"classes/ArmCartesian.html":{},"components/AvailableJobsComponent.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["min",{"_index":1043,"title":{},"body":{"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{}}}],["minacttimeout",{"_index":998,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["mistakes",{"_index":243,"title":{},"body":{"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{}}}],["mobile",{"_index":1555,"title":{},"body":{"index.html":{}}}],["model",{"_index":1343,"title":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}},"body":{"classes/Workflow.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}}}],["model/arm",{"_index":1025,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["model/base",{"_index":1087,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["model/base.model",{"_index":1327,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["model/gripper",{"_index":1110,"title":{},"body":{"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{}}}],["model/new",{"_index":1182,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["model/workflow",{"_index":892,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["model/workflow.model",{"_index":410,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{}}}],["models",{"_index":599,"title":{},"body":{"classes/Base.html":{}}}],["module",{"_index":83,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["modulepath",{"_index":1661,"title":{},"body":{"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["modules",{"_index":85,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":1566,"title":{},"body":{"index.html":{}}}],["move",{"_index":406,"title":{"classes/Move.html":{}},"body":{"components/AvailableJobsComponent.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["move.data",{"_index":407,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["move.model",{"_index":1088,"title":{},"body":{"components/WizardBaseComponent.html":{},"classes/Workflow.html":{}}}],["move.model.ts",{"_index":623,"title":{},"body":{"classes/BaseMove.html":{},"coverage.html":{}}}],["move.model.ts:11",{"_index":624,"title":{},"body":{"classes/BaseMove.html":{}}}],["move.model.ts:31",{"_index":626,"title":{},"body":{"classes/BaseMove.html":{}}}],["move.model.ts:38",{"_index":625,"title":{},"body":{"classes/BaseMove.html":{}}}],["movearmcartesianworkflow",{"_index":1415,"title":{},"body":{"classes/Workflow.html":{}}}],["movearmjointsworkflow",{"_index":489,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["movearmontrajectory",{"_index":487,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["movearmontrajectoryworkflow",{"_index":1161,"title":{},"body":{"components/WizardJobComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["movebase",{"_index":1069,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["moveiteminarray",{"_index":402,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["moveiteminarray(event.container.data",{"_index":495,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["movement",{"_index":1056,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{}}}],["movement'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["movetopositionworkflow",{"_index":1413,"title":{},"body":{"classes/Workflow.html":{}}}],["msg",{"_index":708,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/SocketDataService.html":{}}}],["my_location",{"_index":1036,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["myerrorstatematcher",{"_index":382,"title":{"classes/MyErrorStateMatcher.html":{}},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["n",{"_index":1569,"title":{},"body":{"index.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/introduction.html":{}}}],["name(value",{"_index":621,"title":{},"body":{"classes/Base.html":{},"classes/Workflow.html":{}}}],["nameformcontrol",{"_index":295,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["names",{"_index":1276,"title":{},"body":{"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{}}}],["navigate",{"_index":735,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["navigate_before",{"_index":790,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["navigate_next",{"_index":506,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["navigating",{"_index":366,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["necessary",{"_index":338,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/steps-adding-new-method.html":{}}}],["need",{"_index":1638,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["needed",{"_index":962,"title":{},"body":{"classes/SocketDataService.html":{},"classes/WorkflowListElement.html":{}}}],["needs",{"_index":1202,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["new",{"_index":71,"title":{"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["new_method",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["new_method_path",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["newly",{"_index":1640,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["newmethod",{"_index":484,"title":{"classes/NewMethod.html":{}},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"classes/Workflow.html":{},"coverage.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}}}],["newmethod(job",{"_index":1421,"title":{},"body":{"classes/Workflow.html":{}}}],["newmethod(jobsname",{"_index":1410,"title":{},"body":{"classes/Workflow.html":{}}}],["newmethodworkflow",{"_index":1408,"title":{},"body":{"classes/Workflow.html":{}}}],["next",{"_index":375,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{}}}],["ng",{"_index":1251,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["ngform",{"_index":412,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ngmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":302,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["ngoninit",{"_index":303,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["ngx",{"_index":746,"title":{},"body":{"components/ExecutionRunComponent.html":{},"dependencies.html":{}}}],["ngxspinnerservice",{"_index":667,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["node.js",{"_index":1570,"title":{},"body":{"index.html":{}}}],["none",{"_index":533,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardParentComponent.html":{}}}],["nopagefoundcomponent",{"_index":50,"title":{"components/NoPageFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["npm",{"_index":1597,"title":{},"body":{"index.html":{}}}],["null",{"_index":423,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{}}}],["null).subscribe",{"_index":907,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{}}}],["number",{"_index":198,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["oberservable",{"_index":876,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["oberservables",{"_index":717,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["obeservable",{"_index":974,"title":{},"body":{"classes/SocketDataService.html":{}}}],["object",{"_index":1379,"title":{},"body":{"classes/Workflow.html":{}}}],["object's",{"_index":1383,"title":{},"body":{"classes/Workflow.html":{}}}],["objects",{"_index":1385,"title":{},"body":{"classes/Workflow.html":{}}}],["observable",{"_index":923,"title":{},"body":{"injectables/JobsService.html":{},"classes/SocketDataService.html":{},"injectables/WizardStepperService.html":{}}}],["observable((observer",{"_index":983,"title":{},"body":{"classes/SocketDataService.html":{}}}],["observables",{"_index":714,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["observed",{"_index":378,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{}}}],["observer",{"_index":927,"title":{},"body":{"injectables/JobsService.html":{},"classes/SocketDataService.html":{}}}],["observer.next(msg",{"_index":985,"title":{},"body":{"classes/SocketDataService.html":{}}}],["occure",{"_index":1213,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["onclick",{"_index":304,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ondeleteclick",{"_index":1453,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["ondeleteclick(id",{"_index":1460,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["ondestroy",{"_index":284,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["one",{"_index":395,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"injectables/WizardParentStepperService.html":{},"classes/WorkflowListElement.html":{}}}],["ongetpostionclick",{"_index":1004,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["oninit",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["onnewmessage",{"_index":965,"title":{},"body":{"classes/SocketDataService.html":{}}}],["onnextclick",{"_index":305,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["onplayclick",{"_index":1454,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["onplayclick(id",{"_index":1464,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["onpreviousclick",{"_index":657,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["onresetclick",{"_index":306,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["onsaveclick",{"_index":307,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["onselect",{"_index":308,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["onselect(job",{"_index":351,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["onstepperbackclick",{"_index":1263,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["onsteppernextclick",{"_index":1264,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["onupdateclick",{"_index":1455,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["onupdateclick(id",{"_index":1466,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["opacity",{"_index":584,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["open",{"_index":1664,"title":{},"body":{"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["operations",{"_index":841,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["optional",{"_index":196,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["order",{"_index":274,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["out",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overrided",{"_index":1138,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["overrides",{"_index":685,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["overview",{"_index":1469,"title":{"overview.html":{}},"body":{"components/WorkflowTableComponent.html":{},"overview.html":{}}}],["p",{"_index":1603,"title":{},"body":{"index.html":{}}}],["package",{"_index":1528,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":523,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["page",{"_index":20,"title":{"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["param",{"_index":225,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["parameter",{"_index":1012,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["parameters",{"_index":173,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["parent",{"_index":598,"title":{},"body":{"classes/Base.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"coverage.html":{},"index.html":{}}}],["parent'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["parent.component",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["parent.component.css",{"_index":1196,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parent.component.html",{"_index":1197,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parent.component.ts",{"_index":1189,"title":{},"body":{"components/WizardParentComponent.html":{},"coverage.html":{}}}],["parent.component.ts:106",{"_index":1218,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parent.component.ts:25",{"_index":1222,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parent.component.ts:29",{"_index":1201,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parent.component.ts:46",{"_index":1214,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parent.component.ts:68",{"_index":1209,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parent.component.ts:80",{"_index":1205,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parent.component.ts:89",{"_index":1207,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parent/wizard",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"coverage.html":{}}}],["parentview",{"_index":1190,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["parseint(msg",{"_index":762,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["part",{"_index":1609,"title":{},"body":{"index.html":{}}}],["passages",{"_index":1592,"title":{},"body":{"index.html":{}}}],["passed",{"_index":191,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{}}}],["paste",{"_index":1658,"title":{},"body":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["path",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["pathmatch",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["persistently",{"_index":859,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["physically",{"_index":879,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["pipe",{"_index":328,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["placeholder",{"_index":580,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["play",{"_index":690,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["play_circle_outline",{"_index":791,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["pointer",{"_index":542,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardParentComponent.html":{}}}],["position",{"_index":543,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["possible",{"_index":1447,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["present",{"_index":990,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["presented",{"_index":889,"title":{},"body":{"injectables/HttpRequestService.html":{},"classes/WorkflowListElement.html":{}}}],["presents",{"_index":989,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["preview",{"_index":569,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["previous",{"_index":718,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["private",{"_index":177,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["procedure",{"_index":1559,"title":{},"body":{"index.html":{}}}],["program",{"_index":1560,"title":{},"body":{"index.html":{}}}],["programming",{"_index":1554,"title":{},"body":{"index.html":{}}}],["progress",{"_index":673,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/SocketDataService.html":{},"index.html":{}}}],["project",{"_index":1650,"title":{},"body":{"additional-documentation/steps-adding-new-method.html":{}}}],["properties",{"_index":176,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/introduction.html":{}}}],["property",{"_index":1257,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["protected",{"_index":750,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardJobComponent.html":{}}}],["provide",{"_index":1192,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["provided",{"_index":244,"title":{},"body":{"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"injectables/HttpRequestService.html":{}}}],["providedin",{"_index":894,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{}}}],["providers",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"components/WizardParentComponent.html":{},"overview.html":{}}}],["provides",{"_index":270,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/SocketDataService.html":{}}}],["public",{"_index":966,"title":{},"body":{"classes/SocketDataService.html":{},"classes/WorkflowListElement.html":{}}}],["radius",{"_index":550,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["reactiveformsmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":839,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["ready",{"_index":1615,"title":{},"body":{"index.html":{}}}],["receives",{"_index":701,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["receiving",{"_index":1374,"title":{},"body":{"classes/Workflow.html":{}}}],["redirecting",{"_index":315,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["redirects",{"_index":346,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["redirectto",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refresh",{"_index":501,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["refreshes",{"_index":340,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["regelung",{"_index":1419,"title":{},"body":{"classes/Workflow.html":{}}}],["relative",{"_index":544,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["release",{"_index":1116,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["release.component",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["release.component.css",{"_index":1117,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.html",{"_index":1118,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts",{"_index":1115,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{},"coverage.html":{}}}],["release.component.ts:23",{"_index":1129,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:27",{"_index":1123,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:31",{"_index":1122,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:35",{"_index":1124,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:39",{"_index":1125,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:43",{"_index":1126,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:47",{"_index":1127,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:51",{"_index":1128,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:55",{"_index":1130,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:59",{"_index":1119,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:76",{"_index":1120,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.component.ts:85",{"_index":1121,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["release.model",{"_index":1131,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{},"classes/Workflow.html":{}}}],["release.model.ts",{"_index":821,"title":{},"body":{"classes/GripperRelease.html":{},"coverage.html":{}}}],["release.model.ts:7",{"_index":822,"title":{},"body":{"classes/GripperRelease.html":{}}}],["release/wizard",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WizardGripperReleaseComponent.html":{},"coverage.html":{}}}],["represents",{"_index":1435,"title":{},"body":{"classes/WorkflowListElement.html":{}}}],["request",{"_index":693,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["request.service",{"_index":744,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["request.service.ts",{"_index":836,"title":{},"body":{"injectables/HttpRequestService.html":{},"coverage.html":{}}}],["request.service.ts:109",{"_index":875,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:116",{"_index":862,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:123",{"_index":868,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:130",{"_index":871,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:138",{"_index":873,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:20",{"_index":886,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:24",{"_index":891,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:28",{"_index":884,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:32",{"_index":855,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:50",{"_index":881,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:62",{"_index":857,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:74",{"_index":878,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:84",{"_index":883,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["request.service.ts:96",{"_index":864,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["requested",{"_index":870,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["requests",{"_index":323,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["required",{"_index":503,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["reset",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"components/ExecutionRunComponent.html":{},"components/WizardParentComponent.html":{},"overview.html":{}}}],["reset(stepper",{"_index":1217,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["resets",{"_index":331,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardParentComponent.html":{}}}],["resp",{"_index":866,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/WizardStepperService.html":{}}}],["respectively",{"_index":1651,"title":{},"body":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{}}}],["response",{"_index":296,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{}}}],["responsedata",{"_index":898,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["responsedata.workflows",{"_index":936,"title":{},"body":{"injectables/JobsService.html":{}}}],["responselistener",{"_index":919,"title":{},"body":{"injectables/JobsService.html":{}}}],["responsesub",{"_index":297,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["result",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["results",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["return",{"_index":239,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{}}}],["returns",{"_index":217,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["rgba(0",{"_index":573,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["right",{"_index":397,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["robot",{"_index":671,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["robotmethods",{"_index":530,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{}}}],["root'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["route",{"_index":1660,"title":{"additional-documentation/steps-adding-new-method/4.-add-route.html":{}},"body":{"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["router",{"_index":312,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["routermodule",{"_index":116,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":117,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{}}}],["routing",{"_index":358,"title":{"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["routing.module.ts",{"_index":113,"title":{},"body":{"modules/AppRoutingModule.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["routing/app",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["routing/redirecting",{"_index":381,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["row",{"_index":595,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["run",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ExecutionRunComponent.html":{},"components/WorkflowTableComponent.html":{},"index.html":{}}}],["run'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["run.component",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run.component.css",{"_index":637,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.html",{"_index":638,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts",{"_index":629,"title":{},"body":{"components/ExecutionRunComponent.html":{},"coverage.html":{}}}],["run.component.ts:101",{"_index":705,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:115",{"_index":689,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:132",{"_index":697,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:146",{"_index":702,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:161",{"_index":674,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:172",{"_index":680,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:183",{"_index":679,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:25",{"_index":722,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:29",{"_index":721,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:33",{"_index":725,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:37",{"_index":728,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:41",{"_index":727,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:45",{"_index":720,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:49",{"_index":668,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:78",{"_index":684,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:88",{"_index":709,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run.component.ts:94",{"_index":682,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["run/execution",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ExecutionRunComponent.html":{},"coverage.html":{}}}],["runonclick",{"_index":652,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["runworkflow",{"_index":851,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["rxjs",{"_index":408,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/SocketDataService.html":{},"components/WizardJobComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{},"dependencies.html":{}}}],["s",{"_index":1605,"title":{},"body":{"index.html":{}}}],["save",{"_index":699,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["savecreateonclick",{"_index":653,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["saved",{"_index":700,"title":{},"body":{"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{}}}],["saveupdateonclick",{"_index":654,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["saveworkflow",{"_index":852,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["saveworkflow(workflow",{"_index":880,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["saving",{"_index":634,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["screenshots",{"_index":1587,"title":{},"body":{"index.html":{}}}],["section",{"_index":801,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"additional-documentation/introduction.html":{}}}],["see",{"_index":1444,"title":{},"body":{"components/WorkflowTableComponent.html":{},"additional-documentation/introduction.html":{}}}],["selected",{"_index":349,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["selectedjob",{"_index":298,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["selectedjobs",{"_index":299,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["selection",{"_index":1613,"title":{},"body":{"index.html":{}}}],["selectnextjob",{"_index":309,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["selectnextjob(job",{"_index":355,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["send",{"_index":692,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/SocketDataService.html":{}}}],["sendmessage",{"_index":967,"title":{},"body":{"classes/SocketDataService.html":{}}}],["sendmessage(message",{"_index":975,"title":{},"body":{"classes/SocketDataService.html":{}}}],["sends",{"_index":858,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["sent",{"_index":210,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["service",{"_index":329,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"additional-documentation/introduction.html":{}}}],["set",{"_index":222,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{},"classes/Workflow.html":{}}}],["setactivationtimeout(value",{"_index":610,"title":{},"body":{"classes/Base.html":{}}}],["setcreated_at(value",{"_index":1397,"title":{},"body":{"classes/Workflow.html":{}}}],["setgoalpose(value",{"_index":218,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{}}}],["setid(value",{"_index":606,"title":{},"body":{"classes/Base.html":{},"classes/Workflow.html":{}}}],["setjointvalues(value",{"_index":251,"title":{},"body":{"classes/ArmJoint.html":{}}}],["setname(value",{"_index":614,"title":{},"body":{"classes/Base.html":{},"classes/Workflow.html":{}}}],["sets",{"_index":706,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardParentComponent.html":{}}}],["setter",{"_index":220,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{}}}],["settimeout",{"_index":770,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["settimeout(value",{"_index":263,"title":{},"body":{"classes/ArmTrajectory.html":{}}}],["settings",{"_index":1248,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["setworkflowprogress",{"_index":655,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["setworkflowprogress(msg",{"_index":704,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["shadow",{"_index":572,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["shadowed",{"_index":753,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["share",{"_index":867,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{}}}],["shared",{"_index":370,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["sharing",{"_index":316,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["show",{"_index":786,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["shown",{"_index":1641,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["shows",{"_index":630,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["showspinner",{"_index":656,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["simplechange",{"_index":400,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["simply",{"_index":1631,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["single",{"_index":275,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"classes/Workflow.html":{},"index.html":{}}}],["size",{"_index":562,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["sizing",{"_index":571,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["slider",{"_index":809,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["small",{"_index":563,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["snipets",{"_index":1643,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["socket",{"_index":696,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/SocketDataService.html":{},"dependencies.html":{}}}],["socket.io",{"_index":978,"title":{},"body":{"classes/SocketDataService.html":{},"dependencies.html":{}}}],["socketdataservice",{"_index":665,"title":{"classes/SocketDataService.html":{}},"body":{"components/ExecutionRunComponent.html":{},"classes/SocketDataService.html":{},"coverage.html":{}}}],["sockets/websocket.service",{"_index":745,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["solid",{"_index":538,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["specific",{"_index":1378,"title":{},"body":{"classes/Workflow.html":{}}}],["spinner",{"_index":666,"title":{},"body":{"components/ExecutionRunComponent.html":{},"dependencies.html":{}}}],["spinnerstyle",{"_index":814,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["spinnertext",{"_index":644,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["src/app/app",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/execution/execution",{"_index":628,"title":{},"body":{"components/ExecutionRunComponent.html":{},"coverage.html":{}}}],["src/app/execution/http",{"_index":835,"title":{},"body":{"injectables/HttpRequestService.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts",{"_index":824,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:14",{"_index":831,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:25",{"_index":832,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/jobs/available",{"_index":268,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["src/app/jobs/jobs.service.ts",{"_index":915,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/app/jobs/jobs.service.ts:16",{"_index":924,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/app/jobs/jobs.service.ts:21",{"_index":920,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/app/jobs/jobs.service.ts:32",{"_index":921,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/app/jobs/jobs.service.ts:44",{"_index":931,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/app/jobs/jobs.service.ts:51",{"_index":933,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/app/jobs/move.data.ts",{"_index":939,"title":{},"body":{"classes/Move.html":{},"coverage.html":{}}}],["src/app/jobs/move.data.ts:13",{"_index":941,"title":{},"body":{"classes/Move.html":{}}}],["src/app/jobs/move.data.ts:9",{"_index":942,"title":{},"body":{"classes/Move.html":{}}}],["src/app/model",{"_index":1654,"title":{},"body":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{}}}],["src/app/model/arm",{"_index":168,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"coverage.html":{}}}],["src/app/model/base",{"_index":622,"title":{},"body":{"classes/BaseMove.html":{},"coverage.html":{}}}],["src/app/model/base.model.ts",{"_index":596,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["src/app/model/base.model.ts:10",{"_index":602,"title":{},"body":{"classes/Base.html":{}}}],["src/app/model/base.model.ts:14",{"_index":603,"title":{},"body":{"classes/Base.html":{}}}],["src/app/model/base.model.ts:18",{"_index":601,"title":{},"body":{"classes/Base.html":{}}}],["src/app/model/base.model.ts:33",{"_index":605,"title":{},"body":{"classes/Base.html":{}}}],["src/app/model/base.model.ts:40",{"_index":607,"title":{},"body":{"classes/Base.html":{}}}],["src/app/model/base.model.ts:47",{"_index":609,"title":{},"body":{"classes/Base.html":{}}}],["src/app/model/base.model.ts:54",{"_index":611,"title":{},"body":{"classes/Base.html":{}}}],["src/app/model/base.model.ts:61",{"_index":613,"title":{},"body":{"classes/Base.html":{}}}],["src/app/model/base.model.ts:68",{"_index":615,"title":{},"body":{"classes/Base.html":{}}}],["src/app/model/gripper",{"_index":817,"title":{},"body":{"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"coverage.html":{}}}],["src/app/model/new",{"_index":945,"title":{},"body":{"classes/NewMethod.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{}}}],["src/app/model/workflow",{"_index":1432,"title":{},"body":{"classes/WorkflowListElement.html":{},"coverage.html":{}}}],["src/app/model/workflow.model.ts",{"_index":1342,"title":{},"body":{"classes/Workflow.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}}}],["src/app/model/workflow.model.ts:101",{"_index":1373,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:146",{"_index":1390,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:154",{"_index":1377,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:163",{"_index":1382,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:170",{"_index":1384,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:177",{"_index":1387,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:184",{"_index":1391,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:191",{"_index":1392,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:198",{"_index":1393,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:205",{"_index":1394,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:21",{"_index":1361,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:212",{"_index":1396,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:219",{"_index":1398,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:25",{"_index":1362,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:29",{"_index":1358,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:33",{"_index":1357,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/model/workflow.model.ts:52",{"_index":1364,"title":{},"body":{"classes/Workflow.html":{}}}],["src/app/no",{"_index":953,"title":{},"body":{"components/NoPageFoundComponent.html":{},"coverage.html":{}}}],["src/app/sockets/websocket.service.ts",{"_index":961,"title":{},"body":{"classes/SocketDataService.html":{},"coverage.html":{}}}],["src/app/sockets/websocket.service.ts:10",{"_index":971,"title":{},"body":{"classes/SocketDataService.html":{}}}],["src/app/sockets/websocket.service.ts:14",{"_index":968,"title":{},"body":{"classes/SocketDataService.html":{}}}],["src/app/sockets/websocket.service.ts:25",{"_index":976,"title":{},"body":{"classes/SocketDataService.html":{}}}],["src/app/sockets/websocket.service.ts:32",{"_index":972,"title":{},"body":{"classes/SocketDataService.html":{}}}],["src/app/wizard",{"_index":986,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["src/app/wizzard",{"_index":1666,"title":{},"body":{"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["src/app/workflow",{"_index":1441,"title":{},"body":{"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["stack",{"_index":1563,"title":{},"body":{"index.html":{}}}],["stands",{"_index":1564,"title":{},"body":{"index.html":{}}}],["started",{"_index":1549,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1507,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1221,"title":{},"body":{"components/WizardParentComponent.html":{},"index.html":{}}}],["status",{"_index":646,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{}}}],["statuslistener",{"_index":1278,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["statussub",{"_index":647,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["step",{"_index":1044,"title":{},"body":{"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["step/wizzard",{"_index":1667,"title":{},"body":{"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["stepacttimeout",{"_index":999,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["stepper",{"_index":672,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["stepper's",{"_index":1256,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["stepper.next",{"_index":1244,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["stepper.reset",{"_index":1240,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["stepper.selected.completed",{"_index":1246,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["stepper.selectedindex",{"_index":1243,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["stepper.service",{"_index":409,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["stepper.service.ts",{"_index":1254,"title":{},"body":{"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"coverage.html":{}}}],["stepper.service.ts:104",{"_index":1297,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:110",{"_index":1307,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:116",{"_index":1295,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:123",{"_index":1310,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:131",{"_index":1300,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:138",{"_index":1299,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:145",{"_index":1312,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:153",{"_index":1302,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:16",{"_index":1271,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["stepper.service.ts:160",{"_index":1301,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:167",{"_index":1314,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:20",{"_index":1270,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["stepper.service.ts:22",{"_index":1318,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:24",{"_index":1272,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["stepper.service.ts:26",{"_index":1319,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:28",{"_index":1265,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["stepper.service.ts:30",{"_index":1325,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:34",{"_index":1326,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:38",{"_index":1268,"title":{},"body":{"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:42",{"_index":1321,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:44",{"_index":1266,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["stepper.service.ts:46",{"_index":1323,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:50",{"_index":1294,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:59",{"_index":1306,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:66",{"_index":1303,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:72",{"_index":1304,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:80",{"_index":1315,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:89",{"_index":1317,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper.service.ts:97",{"_index":1298,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["stepper/wizard",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["stepper_global_options",{"_index":1193,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["steps",{"_index":1649,"title":{"additional-documentation/steps-adding-new-method.html":{}},"body":{"additional-documentation/steps-adding-new-method.html":{}}}],["storage",{"_index":362,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["store",{"_index":922,"title":{},"body":{"injectables/JobsService.html":{},"injectables/WizardStepperService.html":{}}}],["stored",{"_index":365,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["stores",{"_index":199,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["string",{"_index":212,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{}}}],["structure",{"_index":1610,"title":{},"body":{"index.html":{}}}],["stussub",{"_index":739,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["style",{"_index":532,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["styleurls",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["subject",{"_index":890,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"injectables/WizardStepperService.html":{}}}],["subjects",{"_index":925,"title":{},"body":{"injectables/JobsService.html":{}}}],["submitted",{"_index":420,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["subsbackvar",{"_index":1261,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["subscribe((name",{"_index":1230,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["subscribe((response",{"_index":436,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["subscribe((workflowlist",{"_index":1480,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["subscribe(counter",{"_index":446,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["subscribe(data",{"_index":1155,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["subscribe(jobsupdated",{"_index":442,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["subscribe(workflow",{"_index":450,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["subscription",{"_index":368,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardParentStepperService.html":{},"components/WorkflowTableComponent.html":{}}}],["subscriptions",{"_index":334,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["subsnextvar",{"_index":1262,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["super('armcartesian",{"_index":226,"title":{},"body":{"classes/ArmCartesian.html":{}}}],["super('armjoint",{"_index":253,"title":{},"body":{"classes/ArmJoint.html":{}}}],["super('armtrajecory",{"_index":265,"title":{},"body":{"classes/ArmTrajectory.html":{}}}],["super('basemove",{"_index":627,"title":{},"body":{"classes/BaseMove.html":{}}}],["super('grippergrip",{"_index":820,"title":{},"body":{"classes/GripperGrip.html":{}}}],["super('gripperrelease",{"_index":823,"title":{},"body":{"classes/GripperRelease.html":{}}}],["super('newmethod",{"_index":952,"title":{},"body":{"classes/NewMethod.html":{}}}],["super(router",{"_index":754,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["super.ngoninit",{"_index":755,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["support",{"_index":1616,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1617,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":481,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["synchronized",{"_index":369,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{}}}],["table",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["table.component",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["table.component.css",{"_index":1448,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.html",{"_index":1449,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts",{"_index":1442,"title":{},"body":{"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:118",{"_index":1461,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:132",{"_index":1465,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:159",{"_index":1468,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:24",{"_index":1477,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:30",{"_index":1474,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:34",{"_index":1476,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:40",{"_index":1475,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:44",{"_index":1472,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:48",{"_index":1456,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:66",{"_index":1459,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:77",{"_index":1458,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table.component.ts:89",{"_index":1467,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["table/workflow",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1527,"title":{},"body":{"coverage.html":{}}}],["teach",{"_index":1558,"title":{},"body":{"index.html":{}}}],["teaching",{"_index":1550,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["terminal",{"_index":1600,"title":{},"body":{"index.html":{}}}],["text",{"_index":558,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["therefore",{"_index":1633,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["this._activationtimeout",{"_index":617,"title":{},"body":{"classes/Base.html":{}}}],["this._created_at",{"_index":1402,"title":{},"body":{"classes/Workflow.html":{}}}],["this._goalpose",{"_index":231,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/NewMethod.html":{}}}],["this._id",{"_index":616,"title":{},"body":{"classes/Base.html":{},"classes/Workflow.html":{}}}],["this._jobsobjects",{"_index":1404,"title":{},"body":{"classes/Workflow.html":{}}}],["this._jobsobjects.length",{"_index":1430,"title":{},"body":{"classes/Workflow.html":{}}}],["this._jobsobjects.push(new",{"_index":1409,"title":{},"body":{"classes/Workflow.html":{}}}],["this._jobsobjects[count",{"_index":1427,"title":{},"body":{"classes/Workflow.html":{}}}],["this._jobsobjects[count].name",{"_index":1429,"title":{},"body":{"classes/Workflow.html":{}}}],["this._jointvalues",{"_index":254,"title":{},"body":{"classes/ArmJoint.html":{}}}],["this._name",{"_index":618,"title":{},"body":{"classes/Base.html":{},"classes/Workflow.html":{}}}],["this._response",{"_index":935,"title":{},"body":{"injectables/JobsService.html":{}}}],["this._responselistener",{"_index":938,"title":{},"body":{"injectables/JobsService.html":{}}}],["this._responselistener.next([...this._response",{"_index":937,"title":{},"body":{"injectables/JobsService.html":{}}}],["this._timeout",{"_index":266,"title":{},"body":{"classes/ArmTrajectory.html":{}}}],["this.activationtimeout",{"_index":229,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/NewMethod.html":{}}}],["this.armcartesian",{"_index":1028,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["this.armcartesian.activationtimeout",{"_index":1031,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["this.armcartesian.goalpose",{"_index":1033,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["this.basemove",{"_index":1089,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["this.basemove.activationtimeout",{"_index":1090,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["this.basemove.goalpose",{"_index":1091,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["this.copiedjobs",{"_index":439,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.counter",{"_index":447,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{}}}],["this.counterlistener.asobservable",{"_index":1334,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.counterlistener.next",{"_index":1335,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.counterlistener.next(this.counter",{"_index":1336,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.countersub",{"_index":444,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["this.countersub.unsubscribe",{"_index":464,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["this.datasource",{"_index":1481,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.eventemitterservice.invokebackfunction",{"_index":1234,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["this.eventemitterservice.invokenextfunction",{"_index":1229,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["this.eventemitterservice.onstepperbackclick",{"_index":780,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardJobComponent.html":{}}}],["this.eventemitterservice.onsteppernextclick",{"_index":772,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.eventemitterservice.subsbackvar",{"_index":1233,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["this.eventemitterservice.subsbackvar.unsubscribe",{"_index":1238,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["this.eventemitterservice.subsnextvar",{"_index":1228,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["this.eventemitterservice.subsnextvar.unsubscribe",{"_index":1237,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["this.getavailablejobs",{"_index":472,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.goalpose",{"_index":1032,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["this.goback(this.stepper",{"_index":1235,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["this.goforward(this.stepper",{"_index":1231,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["this.grippergrip",{"_index":1112,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["this.grippergrip.activationtimeout",{"_index":1113,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["this.gripperrelease",{"_index":1132,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["this.gripperrelease.activationtimeout",{"_index":1133,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["this.hidespinner",{"_index":766,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.http.post('http://localhost:3000/createworkflow",{"_index":901,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.http.post('http://localhost:3000/deleteworkflow/deleteone",{"_index":912,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.http.post('http://localhost:3000/playworkflow",{"_index":902,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.http.post('http://localhost:3000/readworkflow/readall",{"_index":906,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.http.post('http://localhost:3000/readworkflow/readone",{"_index":914,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.http.post('http://localhost:3000/robotdataservice/getavailablejobs",{"_index":934,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.http.post('http://localhost:3000/robotdataservice/getbaseposition",{"_index":913,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.http.post('http://localhost:3000/saveworkflow",{"_index":895,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.http.post('http://localhost:3000/updateworkflow",{"_index":905,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.httprequest.createworkflow(this.workflow",{"_index":778,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.httprequest.deleteworkflow(id).subscribe((data",{"_index":1496,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.httprequest.getallworkflows",{"_index":1478,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.httprequest.getworkflow(id).subscribe((data",{"_index":1485,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.httprequest.getworkflowlistupdatelistener",{"_index":1479,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.httprequest.runworkflow",{"_index":771,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.httprequest.updateworkflow(this.workflow",{"_index":769,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.id",{"_index":227,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/Move.html":{},"classes/NewMethod.html":{}}}],["this.invokebackfunction.emit",{"_index":1274,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["this.invokenextfunction.emit",{"_index":1273,"title":{},"body":{"injectables/WizardParentStepperService.html":{}}}],["this.isalreadysave",{"_index":777,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.isdisablednext",{"_index":478,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["this.isdisabledrun",{"_index":776,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.jobs",{"_index":1338,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.jobservice.getjobsfromserver",{"_index":431,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.jobservice.responselistener",{"_index":435,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.jobssub",{"_index":440,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.jobssub.unsubscribe",{"_index":463,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.jobsupdated",{"_index":443,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.jobsupdated.asobservable",{"_index":1337,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.jobsupdated.length",{"_index":468,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.jobsupdated.next([...this.jobs",{"_index":1339,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.link",{"_index":480,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["this.name",{"_index":453,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.newmethod",{"_index":1184,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["this.newmethod.activationtimeout",{"_index":1185,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["this.newmethod.goalpose",{"_index":1186,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["this.reset(this.stepper",{"_index":1239,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["this.response",{"_index":437,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.responsesub",{"_index":434,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.router.navigate(['jobs",{"_index":1484,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.router.navigate([this.link",{"_index":470,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["this.selectedjob",{"_index":467,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.selectedjobs",{"_index":438,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.selectnextjob(this.workflow.getjobname(0",{"_index":469,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WorkflowTableComponent.html":{}}}],["this.selectnextjob(this.workflow.getjobname(this.counter",{"_index":781,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardJobComponent.html":{}}}],["this.setworkflowprogress(msg",{"_index":758,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.showspinner",{"_index":767,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.socket",{"_index":980,"title":{},"body":{"classes/SocketDataService.html":{}}}],["this.socket.emit('new",{"_index":982,"title":{},"body":{"classes/SocketDataService.html":{}}}],["this.socket.on('message",{"_index":984,"title":{},"body":{"classes/SocketDataService.html":{}}}],["this.socketdataservice.onnewmessage().subscribe(msg",{"_index":756,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.socketdataservice.sendmessage(this.workflow.name",{"_index":768,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.spinner.hide",{"_index":760,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.spinner.show",{"_index":759,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.spinnertext",{"_index":764,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.status",{"_index":1156,"title":{},"body":{"components/WizardJobComponent.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{}}}],["this.statuslistener.asobservable",{"_index":1340,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.statuslistener.next(this.status",{"_index":1341,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.statussub",{"_index":1153,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["this.statussub.unsubscribe",{"_index":1159,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["this.valueacttimeout",{"_index":1030,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["this.wizardstepperservice.getcounter",{"_index":457,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["this.wizardstepperservice.getcounterlistener",{"_index":445,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["this.wizardstepperservice.getjobs",{"_index":455,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.wizardstepperservice.getjobslistener",{"_index":441,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.wizardstepperservice.getstatus",{"_index":1158,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["this.wizardstepperservice.getstatuslistener",{"_index":1154,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["this.wizardstepperservice.getworkflow",{"_index":452,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["this.wizardstepperservice.getworkflowitem",{"_index":1029,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["this.wizardstepperservice.getworkflowlistener",{"_index":449,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["this.wizardstepperservice.updatecount(0",{"_index":1493,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.wizardstepperservice.updatecount(this.counter",{"_index":456,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.wizardstepperservice.updatejob(this.selectedjobs",{"_index":473,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.wizardstepperservice.updatestatus(this.status",{"_index":1482,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.wizardstepperservice.updateworkflow(this.workflow",{"_index":477,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WorkflowTableComponent.html":{}}}],["this.wizardstepperservice.updateworkflowitem(this.armcartesian",{"_index":1034,"title":{},"body":{"components/WizardArmCartesianComponent.html":{}}}],["this.wizardstepperservice.updateworkflowitem(this.basemove",{"_index":1092,"title":{},"body":{"components/WizardBaseComponent.html":{}}}],["this.wizardstepperservice.updateworkflowitem(this.grippergrip",{"_index":1114,"title":{},"body":{"components/WizardGripperGripComponent.html":{}}}],["this.wizardstepperservice.updateworkflowitem(this.gripperrelease",{"_index":1134,"title":{},"body":{"components/WizardGripperReleaseComponent.html":{}}}],["this.wizardstepperservice.updateworkflowitem(this.newmethod",{"_index":1187,"title":{},"body":{"components/WizardNewMethodComponent.html":{}}}],["this.workflow",{"_index":451,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{}}}],["this.workflow.addjobs(this.jobsupdated",{"_index":476,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.workflow.addjobsformworkflow(workflow",{"_index":1492,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.workflow.created_at",{"_index":1487,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["this.workflow.getcurrentjob(this.counter",{"_index":1331,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.workflow.id",{"_index":900,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["this.workflow.id}).subscribe",{"_index":904,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.workflow.name",{"_index":454,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.workflow.updatejobs(item",{"_index":1333,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.workflowlist",{"_index":908,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["this.workflowlistener.asobservable",{"_index":1329,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.workflowlistener.next(this.workflow",{"_index":1332,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["this.workflowlistsub.asobservable",{"_index":911,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.workflowlistsub.next([...this.workflowlist",{"_index":909,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["this.workflowprogress",{"_index":761,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["this.workflowsub",{"_index":448,"title":{},"body":{"components/AvailableJobsComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["this.workflowsub.unsubscribe",{"_index":465,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardJobComponent.html":{}}}],["through",{"_index":367,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["thumblabel",{"_index":1045,"title":{},"body":{"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{}}}],["thumblabelacttimeout",{"_index":1000,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["time",{"_index":1370,"title":{},"body":{"classes/Workflow.html":{}}}],["timeout",{"_index":259,"title":{},"body":{"classes/ArmTrajectory.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["timeout(value",{"_index":267,"title":{},"body":{"classes/ArmTrajectory.html":{}}}],["titel",{"_index":1022,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["title",{"_index":1001,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["tool",{"_index":1575,"title":{},"body":{"index.html":{}}}],["top",{"_index":522,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["top:20px",{"_index":799,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["touched",{"_index":419,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["trajectory",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["trajectory.component",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["trajectory.component.css",{"_index":1057,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.html",{"_index":1058,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.ts",{"_index":1055,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{},"coverage.html":{}}}],["trajectory.component.ts:16",{"_index":1066,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.ts:20",{"_index":1060,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.ts:24",{"_index":1061,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.ts:28",{"_index":1062,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.ts:32",{"_index":1063,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.ts:36",{"_index":1064,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.ts:40",{"_index":1065,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.ts:44",{"_index":1067,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.component.ts:48",{"_index":1059,"title":{},"body":{"components/WizardArmTrajectoryComponent.html":{}}}],["trajectory.model",{"_index":1399,"title":{},"body":{"classes/Workflow.html":{}}}],["trajectory.model.ts",{"_index":257,"title":{},"body":{"classes/ArmTrajectory.html":{},"coverage.html":{}}}],["trajectory.model.ts:11",{"_index":260,"title":{},"body":{"classes/ArmTrajectory.html":{}}}],["trajectory.model.ts:25",{"_index":262,"title":{},"body":{"classes/ArmTrajectory.html":{}}}],["trajectory.model.ts:32",{"_index":264,"title":{},"body":{"classes/ArmTrajectory.html":{}}}],["trajectory/wizard",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WizardArmTrajectoryComponent.html":{},"coverage.html":{}}}],["transferarrayitem",{"_index":403,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["transform",{"_index":590,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["transition",{"_index":589,"title":{},"body":{"components/AvailableJobsComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["true",{"_index":371,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{}}}],["ts",{"_index":432,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["tsconfig.json",{"_index":1604,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":1545,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":751,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["tutorial",{"_index":1584,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["two",{"_index":1663,"title":{},"body":{"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["type",{"_index":195,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["typeof",{"_index":233,"title":{},"body":{"classes/ArmCartesian.html":{},"components/AvailableJobsComponent.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{}}}],["typysript",{"_index":1656,"title":{},"body":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["und",{"_index":698,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["undefined",{"_index":234,"title":{},"body":{"classes/ArmCartesian.html":{},"components/AvailableJobsComponent.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{}}}],["under",{"_index":359,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{},"index.html":{}}}],["understand",{"_index":1595,"title":{},"body":{"index.html":{}}}],["unsubscribes",{"_index":333,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["update",{"_index":779,"title":{"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}},"body":{"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["updatecount",{"_index":1290,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["updatecount(counter",{"_index":1309,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["updated",{"_index":681,"title":{},"body":{"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/Workflow.html":{},"index.html":{}}}],["updatejob",{"_index":1291,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["updatejob(jobs",{"_index":1311,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["updatejobs",{"_index":1355,"title":{},"body":{"classes/Workflow.html":{}}}],["updatejobs(jobs",{"_index":1389,"title":{},"body":{"classes/Workflow.html":{}}}],["updates",{"_index":713,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"classes/Workflow.html":{}}}],["updatestatus",{"_index":1292,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["updatestatus(status",{"_index":1313,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["updateworkflow",{"_index":853,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/WizardStepperService.html":{}}}],["updateworkflow(workflow",{"_index":882,"title":{},"body":{"injectables/HttpRequestService.html":{},"injectables/WizardStepperService.html":{}}}],["updateworkflowitem",{"_index":1293,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["updateworkflowitem(item",{"_index":1316,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["updating",{"_index":635,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["url",{"_index":964,"title":{},"body":{"classes/SocketDataService.html":{}}}],["use",{"_index":1210,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["used",{"_index":194,"title":{},"body":{"classes/ArmCartesian.html":{},"components/AvailableJobsComponent.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"injectables/JobsService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{},"index.html":{}}}],["used.compodoc",{"_index":1574,"title":{},"body":{"index.html":{}}}],["user",{"_index":1552,"title":{},"body":{"index.html":{}}}],["users",{"_index":1443,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["usevalue",{"_index":1194,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["using",{"_index":1642,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["validate/check",{"_index":391,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["validators",{"_index":413,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardParentComponent.html":{}}}],["validators.required",{"_index":389,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["value",{"_index":221,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"injectables/JobsService.html":{},"classes/NewMethod.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["valueacttimeout",{"_index":1002,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["values",{"_index":193,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"classes/GripperGrip.html":{},"classes/GripperRelease.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["variable",{"_index":387,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WorkflowTableComponent.html":{}}}],["variables",{"_index":332,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["vertical",{"_index":520,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["verticalacttimeout",{"_index":1003,"title":{},"body":{"components/WizardArmCartesianComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["via",{"_index":695,"title":{},"body":{"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["view",{"_index":271,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["viewchild",{"_index":1223,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["viewchild('stepper",{"_index":1220,"title":{},"body":{"components/WizardParentComponent.html":{}}}],["viewing",{"_index":963,"title":{},"body":{"classes/SocketDataService.html":{}}}],["void",{"_index":223,"title":{},"body":{"classes/ArmCartesian.html":{},"classes/ArmJoint.html":{},"classes/ArmTrajectory.html":{},"components/AvailableJobsComponent.html":{},"classes/Base.html":{},"classes/BaseMove.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"classes/NewMethod.html":{},"components/NoPageFoundComponent.html":{},"classes/SocketDataService.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"components/WorkflowTableComponent.html":{}}}],["want",{"_index":1601,"title":{},"body":{"index.html":{}}}],["way",{"_index":1629,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["web",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"classes/SocketDataService.html":{},"index.html":{}}}],["websocket",{"_index":688,"title":{},"body":{"components/ExecutionRunComponent.html":{},"classes/SocketDataService.html":{}}}],["wf",{"_index":1463,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["wf_id",{"_index":903,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["white",{"_index":529,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{}}}],["width",{"_index":511,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WorkflowTableComponent.html":{}}}],["within",{"_index":1652,"title":{},"body":{"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{}}}],["wizard",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"index.html":{},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{}}}],["wizard/run",{"_index":1498,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["wizardarmcartesiancomponent",{"_index":52,"title":{"components/WizardArmCartesianComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardarmjoinscomponent",{"_index":56,"title":{"components/WizardArmJoinsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardarmtrajectorycomponent",{"_index":58,"title":{"components/WizardArmTrajectoryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardbasecomponent",{"_index":61,"title":{"components/WizardBaseComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardgrippergripcomponent",{"_index":63,"title":{"components/WizardGripperGripComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardgripperreleasecomponent",{"_index":66,"title":{"components/WizardGripperReleaseComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardjobcomponent",{"_index":68,"title":{"components/WizardJobComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardjobcomponent:108",{"_index":716,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:129",{"_index":710,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:139",{"_index":719,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:21",{"_index":731,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:25",{"_index":740,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:29",{"_index":741,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:35",{"_index":729,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:39",{"_index":730,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:46",{"_index":732,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:50",{"_index":738,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:67",{"_index":711,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardjobcomponent:92",{"_index":712,"title":{},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["wizardnewmethodcomponent",{"_index":70,"title":{"components/WizardNewMethodComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/steps-adding-new-method/4.-add-route.html":{}}}],["wizardparentcomponent",{"_index":73,"title":{"components/WizardParentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardparentstepperservice",{"_index":664,"title":{"injectables/WizardParentStepperService.html":{}},"body":{"components/ExecutionRunComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardParentStepperService.html":{},"coverage.html":{}}}],["wizardstepperservice",{"_index":96,"title":{"injectables/WizardStepperService.html":{}},"body":{"modules/AppModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"injectables/WizardStepperService.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["worflowlistsub",{"_index":877,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["worflowpath",{"_index":1659,"title":{},"body":{"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}}}],["worflowprogess",{"_index":707,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["workflow",{"_index":76,"title":{"classes/Workflow.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpRequestService.html":{},"classes/Move.html":{},"classes/MyErrorStateMatcher.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"injectables/WizardStepperService.html":{},"classes/Workflow.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/steps-adding-new-method.html":{},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{}}}],["workflow(data._name",{"_index":1486,"title":{},"body":{"components/WorkflowTableComponent.html":{}}}],["workflow(this.name",{"_index":475,"title":{},"body":{"components/AvailableJobsComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["workflow.id",{"_index":784,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["workflow.name",{"_index":783,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["workflow.name}}workflow",{"_index":816,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["workflowlist",{"_index":842,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["workflowlistelement",{"_index":885,"title":{"classes/WorkflowListElement.html":{}},"body":{"injectables/HttpRequestService.html":{},"classes/WorkflowListElement.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{}}}],["workflowlistener",{"_index":1279,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["workflowlistsub",{"_index":843,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{}}}],["workflowlsit",{"_index":1305,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["workflowprogress",{"_index":645,"title":{},"body":{"components/ExecutionRunComponent.html":{}}}],["workflows",{"_index":865,"title":{},"body":{"injectables/HttpRequestService.html":{},"components/WorkflowTableComponent.html":{},"index.html":{}}}],["workflows_table",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["workflowsub",{"_index":300,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"injectables/HttpRequestService.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{}}}],["workflowtablecomponent",{"_index":75,"title":{"components/WorkflowTableComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"components/HeaderComponent.html":{},"components/NoPageFoundComponent.html":{},"components/WizardArmCartesianComponent.html":{},"components/WizardArmJoinsComponent.html":{},"components/WizardArmTrajectoryComponent.html":{},"components/WizardBaseComponent.html":{},"components/WizardGripperGripComponent.html":{},"components/WizardGripperReleaseComponent.html":{},"components/WizardJobComponent.html":{},"components/WizardNewMethodComponent.html":{},"components/WizardParentComponent.html":{},"components/WorkflowTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["workflow}).subscribe",{"_index":897,"title":{},"body":{"injectables/HttpRequestService.html":{}}}],["workflwo",{"_index":1275,"title":{},"body":{"injectables/WizardStepperService.html":{}}}],["worklow",{"_index":1345,"title":{},"body":{"classes/Workflow.html":{},"classes/WorkflowListElement.html":{}}}],["works",{"_index":1162,"title":{},"body":{"components/WizardJobComponent.html":{}}}],["worktable",{"_index":1438,"title":{},"body":{"classes/WorkflowListElement.html":{}}}],["wurde",{"_index":461,"title":{},"body":{"components/AvailableJobsComponent.html":{},"components/ExecutionRunComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/WizardParentComponent.html":{}}}],["zone.js",{"_index":1547,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        root component\nbootstrap —the root component that Angular creates and inserts into the index.html host web page\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n/**\n * root component\n * bootstrap —the root component that Angular creates and inserts into the index.html host web page\n */\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n\n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAvailableJobsComponent\n\nAvailableJobsComponent\n\nAppModule -->\n\nAvailableJobsComponent->AppModule\n\n\n\n\n\nExecutionRunComponent\n\nExecutionRunComponent\n\nAppModule -->\n\nExecutionRunComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nNoPageFoundComponent\n\nNoPageFoundComponent\n\nAppModule -->\n\nNoPageFoundComponent->AppModule\n\n\n\n\n\nWizardArmCartesianComponent\n\nWizardArmCartesianComponent\n\nAppModule -->\n\nWizardArmCartesianComponent->AppModule\n\n\n\n\n\nWizardArmJoinsComponent\n\nWizardArmJoinsComponent\n\nAppModule -->\n\nWizardArmJoinsComponent->AppModule\n\n\n\n\n\nWizardArmTrajectoryComponent\n\nWizardArmTrajectoryComponent\n\nAppModule -->\n\nWizardArmTrajectoryComponent->AppModule\n\n\n\n\n\nWizardBaseComponent\n\nWizardBaseComponent\n\nAppModule -->\n\nWizardBaseComponent->AppModule\n\n\n\n\n\nWizardGripperGripComponent\n\nWizardGripperGripComponent\n\nAppModule -->\n\nWizardGripperGripComponent->AppModule\n\n\n\n\n\nWizardGripperReleaseComponent\n\nWizardGripperReleaseComponent\n\nAppModule -->\n\nWizardGripperReleaseComponent->AppModule\n\n\n\n\n\nWizardJobComponent\n\nWizardJobComponent\n\nAppModule -->\n\nWizardJobComponent->AppModule\n\n\n\n\n\nWizardNewMethodComponent\n\nWizardNewMethodComponent\n\nAppModule -->\n\nWizardNewMethodComponent->AppModule\n\n\n\n\n\nWizardParentComponent\n\nWizardParentComponent\n\nAppModule -->\n\nWizardParentComponent->AppModule\n\n\n\n\n\nWorkflowTableComponent\n\nWorkflowTableComponent\n\nAppModule -->\n\nWorkflowTableComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWizardStepperService\n\nWizardStepperService\n\nAppModule -->\n\nWizardStepperService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AvailableJobsComponent\n                        \n                        \n                            ExecutionRunComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NoPageFoundComponent\n                        \n                        \n                            WizardArmCartesianComponent\n                        \n                        \n                            WizardArmJoinsComponent\n                        \n                        \n                            WizardArmTrajectoryComponent\n                        \n                        \n                            WizardBaseComponent\n                        \n                        \n                            WizardGripperGripComponent\n                        \n                        \n                            WizardGripperReleaseComponent\n                        \n                        \n                            WizardJobComponent\n                        \n                        \n                            WizardNewMethodComponent\n                        \n                        \n                            WizardParentComponent\n                        \n                        \n                            WorkflowTableComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            WizardStepperService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'; // \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AvailableJobsComponent } from '../jobs/available-jobs/available-jobs.component';\nimport { NoPageFoundComponent } from '../no-page-found/no-page-found.component';\nimport { WizardParentComponent } from '../wizard-stepper/wizard-parent/wizard-parent.component';\nimport { WizardGripperGripComponent } from '../wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component';\nimport {WizardGripperReleaseComponent} from '../wizard-stepper/wizard-gripper-release/wizard-gripper-release.component';\nimport {WizardArmTrajectoryComponent} from '../wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component';\nimport {WizardArmJoinsComponent} from '../wizard-stepper/wizard-arm-joins/wizard-arm-joins.component';\nimport {WizardArmCartesianComponent} from '../wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component';\nimport {WizardBaseComponent} from '../wizard-stepper/wizard-base/wizard-base.component';\nimport {ExecutionRunComponent} from '../execution/execution-run/execution-run.component';\nimport {WorkflowTableComponent} from '../workflow-table/workflow-table.component';\n/**\n * you must import new method component\n */\nimport {WizardNewMethodComponent} from '../wizard-stepper/wizard-new-method/wizard-new-method.component';\n/**\n * you must add the path \"new_method\" and connnect to component \"WizardNewMethodComponent\"\n */\nconst routes: Routes = [\n  {path: 'workflows_table', component: WorkflowTableComponent},\n  {path: '', redirectTo: '/workflows_table', pathMatch: 'full'},\n  {path: 'jobs', component: AvailableJobsComponent},\n  {path: 'wizard', component: WizardParentComponent,\n    children: [{\n        path: 'new_method_path',\n        component: WizardNewMethodComponent\n      },\n      {\n        path: 'gripper_grip',\n        component: WizardGripperGripComponent\n      },\n      {\n        path: 'gripper_release',\n        component: WizardGripperReleaseComponent\n      },\n      {\n        path: 'arm_trajectory',\n        component: WizardArmTrajectoryComponent\n      },\n      {\n        path: 'arm_joints',\n        component: WizardArmJoinsComponent\n      },\n      {\n        path: 'arm_cartesian',\n        component: WizardArmCartesianComponent\n      },\n      {\n        path: 'base',\n        component: WizardBaseComponent\n      },\n      {\n        path: 'run',\n        component: ExecutionRunComponent\n      }\n    ]\n  },\n  {path: '**', component: NoPageFoundComponent}\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArmCartesian.html":{"url":"classes/ArmCartesian.html","title":"class - ArmCartesian","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArmCartesian\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/arm-cartesian.model.ts\n        \n\n            \n                Description\n            \n            \n                This class/model extends Base\nIt contains all parameters and methods for ArmCartesian\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _goalPose\n                            \n                            \n                                    Private\n                                _activationTimeout\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    goalPose\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/arm-cartesian.model.ts:11\n                            \n                        \n\n                \n                    \n                            constructor calls constructor of Base\nif id and activationTimout is not passed, default values are used.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _goalPose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/arm-cartesian.model.ts:11\n                            \n                        \n\n                \n                    \n                        to stores cartesian coordinates\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activationTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:18\n\n                            \n                        \n\n                \n                    \n                        according to API each method/job has activationTimeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:10\n\n                            \n                        \n\n                \n                    \n                        id will be sent from backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:14\n\n                            \n                        \n\n                \n                    \n                        name of method/job\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        goalPose\n                    \n                \n\n                \n                    \n                        getgoalPose()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/arm-cartesian.model.ts:38\n                                \n                            \n                    \n                        \n                                Getter for _goalPose\n\n\n                                \n                                \n                                \n                                    Returns :     number[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setgoalPose(value: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/arm-cartesian.model.ts:31\n                                \n                            \n                    \n                        \n                                Setter for _goalPose\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Set cartesian coordinates\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Base} from './base.model';\n/**\n * This class/model extends Base\n *\n * It contains all parameters and methods for ArmCartesian\n */\nexport class ArmCartesian extends Base {\n  /**\n   * to stores cartesian coordinates\n   */\n  private _goalPose: number [];\n  /**\n   * constructor calls constructor of Base\n   *\n   * if id and activationTimout is not passed, default values are used.\n   * @param {any} data\n   */\n  constructor(data: any) {\n    super('ArmCartesian');\n    this.id = data._id;\n    this.activationTimeout = data._activationTimeout;\n    this._goalPose = data._goalPose;\n    this.id = (typeof this.id === 'undefined') ? 0 : this.id ;\n    this.activationTimeout = (typeof this.activationTimeout === 'undefined') ? 50 : this.activationTimeout;\n    console.log(this._goalPose);\n  }\n  /**\n   * Setter for _goalPose\n   * @param {number} value Set cartesian coordinates\n   */\n  set goalPose(value: number[]) {\n    this._goalPose = value;\n  }\n  /**\n   * Getter for _goalPose\n   * @returns The _goalPose\n   */\n  get goalPose(): number[] {\n    return this._goalPose;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArmJoint.html":{"url":"classes/ArmJoint.html","title":"class - ArmJoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArmJoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/arm-joint.model.ts\n        \n\n            \n                Description\n            \n            \n                This class/model extends Base\nThis class has to be adjusted - mistakes in provided API\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _jointValues\n                            \n                            \n                                    Private\n                                _activationTimeout\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    jointValues\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/model/arm-joint.model.ts:11\n                            \n                        \n\n                \n                    \n                            constructor calls constructor of Base\ndefault constructor has to be adjusted\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _jointValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/arm-joint.model.ts:11\n                            \n                        \n\n                \n                    \n                        to stores _jointVales according to API\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activationTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:18\n\n                            \n                        \n\n                \n                    \n                        according to API each method/job has activationTimeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:10\n\n                            \n                        \n\n                \n                    \n                        id will be sent from backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:14\n\n                            \n                        \n\n                \n                    \n                        name of method/job\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        jointValues\n                    \n                \n\n                \n                    \n                        getjointValues()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/arm-joint.model.ts:25\n                                \n                            \n                    \n                        \n                                Getter for _jointValues\n\n\n                                \n                                \n                                \n                                    Returns :     number[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setjointValues(value: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/arm-joint.model.ts:32\n                                \n                            \n                    \n                        \n                                Setter for _jointValues\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Set _jointValues\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Base} from './base.model';\n/**\n * This class/model extends Base\n *\n * This class has to be adjusted - mistakes in provided API\n */\nexport class ArmJoint extends Base {\n  /**\n   * to stores _jointVales according to API\n   */\n  private _jointValues: number[];\n  /**\n   * constructor calls constructor of Base\n   *\n   * default constructor has to be adjusted\n   */\n  constructor() {\n    super('ArmJoint');\n    this._jointValues = [0, 0, 0, 0];\n  }\n  /**\n   * Getter for _jointValues\n   * @returns The _jointValues\n   */\n  get jointValues(): number[] {\n    return this._jointValues;\n  }\n  /**\n   * Setter for _jointValues\n   * @param {number} value Set _jointValues\n   */\n  set jointValues(value: number[]) {\n    this._jointValues = value;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArmTrajectory.html":{"url":"classes/ArmTrajectory.html","title":"class - ArmTrajectory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArmTrajectory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/arm-trajectory.model.ts\n        \n\n            \n                Description\n            \n            \n                This class/model extends Base\nThis class has to be adjusted - mistakes in provided API\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _timeout\n                            \n                            \n                                    Private\n                                _activationTimeout\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/model/arm-trajectory.model.ts:11\n                            \n                        \n\n                \n                    \n                            constructor calls constructor of Base\ndefault constructor has to be adjusted\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/arm-trajectory.model.ts:11\n                            \n                        \n\n                \n                    \n                        to stores _timeout according to API\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activationTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:18\n\n                            \n                        \n\n                \n                    \n                        according to API each method/job has activationTimeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:10\n\n                            \n                        \n\n                \n                    \n                        id will be sent from backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:14\n\n                            \n                        \n\n                \n                    \n                        name of method/job\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/arm-trajectory.model.ts:25\n                                \n                            \n                    \n                        \n                                Getter for _timeout\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        settimeout(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/arm-trajectory.model.ts:32\n                                \n                            \n                    \n                        \n                                Setter for _timeout\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Set _timeout\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Base} from './base.model';\n/**\n * This class/model extends Base\n *\n * This class has to be adjusted - mistakes in provided API\n */\nexport class ArmTrajectory extends Base {\n  /**\n   * to stores _timeout according to API\n   */\n  private _timeout: number;\n  /**\n   * constructor calls constructor of Base\n   *\n   * default constructor has to be adjusted\n   */\n  constructor() {\n    super('ArmTrajecory');\n    this._timeout = 0;\n  }\n  /**\n   * Getter for _timeout\n   * @returns The _timeout\n   */\n  get timeout(): number {\n    return this._timeout;\n  }\n  /**\n   * Setter for _timeout\n   * @param {number} value Set _timeout\n   */\n  set timeout(value: number) {\n    this._timeout = value;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AvailableJobsComponent.html":{"url":"components/AvailableJobsComponent.html","title":"component - AvailableJobsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AvailableJobsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/jobs/available-jobs/available-jobs.component.ts\n\n\n    \n        Description\n    \n    \n        This component provides the view for drag&drop the choosen methods (jobs).\nThe order of the single jobs (methods) can be defined and a name for the workflow has to be entered.\nFor drag and drop Angular Material CDK https://material.angular.io/cdk/drag-drop/overview was used.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-available-jobs\n            \n\n            \n                styleUrls\n                ./available-jobs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./available-jobs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                copiedJobs\n                            \n                            \n                                counter\n                            \n                            \n                                counterSub\n                            \n                            \n                                isDisabledNext\n                            \n                            \n                                    Private\n                                jobsSub\n                            \n                            \n                                jobsUpdated\n                            \n                            \n                                link\n                            \n                            \n                                matcher\n                            \n                            \n                                name\n                            \n                            \n                                nameFormControl\n                            \n                            \n                                    Private\n                                response\n                            \n                            \n                                    Private\n                                responseSub\n                            \n                            \n                                selectedJob\n                            \n                            \n                                selectedJobs\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                getAvailableJobs\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onResetClick\n                            \n                            \n                                onSaveClick\n                            \n                            \n                                onSelect\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jobService: JobsService, router: Router, wizardStepperService: WizardStepperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/jobs/available-jobs/available-jobs.component.ts:106\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jobService\n                                                  \n                                                        \n                                                                        JobsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For redirecting\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Workflow Information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drop\n                        \n                        \n                    \n                \n            \n            \n                \ndrop(event: CdkDragDrop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:274\n                \n            \n\n\n            \n                \n                    Drag&Drop from Angular Material https://material.angular.io/cdk/drag-drop/overview\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CdkDragDrop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAvailableJobs\n                        \n                        \n                    \n                \n            \n            \n                \ngetAvailableJobs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:180\n                \n            \n\n\n            \n                \n                    requests available Jobs from backend\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:162\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nresets variables and unsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:122\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:197\n                \n            \n\n\n            \n                \n                    refreshes available Jobs from backend\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:186\n                \n            \n\n\n            \n                \n                    choose 1st job in workflow list and redirects to this job (job configurator)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onResetClick\n                        \n                        \n                    \n                \n            \n            \n                \nonResetClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:203\n                \n            \n\n\n            \n                \n                    resets selected jobs\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSaveClick\n                        \n                        \n                    \n                \n            \n            \n                \nonSaveClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:211\n                \n            \n\n\n            \n                \n                    stores selected list of jobs in wizardStepperService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect(job: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:174\n                \n            \n\n\n            \n                \n                    stores selected jobe name for Drag&Drop\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Jobname of of selected job\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:226\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copiedJobs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:68\n                            \n                        \n\n                \n                    \n                        used for interim storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:102\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:106\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabledNext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:56\n                            \n                        \n\n                \n                    \n                        used in view to enable and disable Next button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            jobsSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:92\n                            \n                        \n\n                \n                    \n                        Subscription for observed jobsSub -> synchronized and shared list of jobs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jobsUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:88\n                            \n                        \n\n                \n                    \n                        locally stored list of jobs -> for drag&drop in view\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:96\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MyErrorStateMatcher()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:48\n                            \n                        \n\n                \n                    \n                        used in view to handel error if name of workflow is not entered\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:52\n                            \n                        \n\n                \n                    \n                        in this variable name of workflow is stored\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl('', [\n    Validators.required,\n  ])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:42\n                            \n                        \n\n                \n                    \n                        used in view to validate/check if name of workflow is entered\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            response\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:72\n                            \n                        \n\n                \n                    \n                        locally stored response\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            responseSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Subscription\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:76\n                            \n                        \n\n                \n                    \n                        Subscription for observed responseSub -> synchronized and shared response\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedJob\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:60\n                            \n                        \n\n                \n                    \n                        used in view for one selected job - Drag&Drop\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedJobs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:64\n                            \n                        \n\n                \n                    \n                        used in view for table on the right - selected jobs list\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:80\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:84\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit, OnDestroy, SimpleChange} from '@angular/core';\nimport { JobsService} from '../jobs.service';\nimport {CdkDragDrop, moveItemInArray, transferArrayItem, copyArrayItem} from '@angular/cdk/drag-drop';\nimport {Move} from '../move.data';\nimport {Subscription} from 'rxjs';\nimport {Router} from '@angular/router';\nimport { WizardStepperService} from '../../wizard-stepper/wizard-stepper.service';\nimport {Workflow} from '../../model/workflow.model';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material';\n\n/**\n * Error when invalid control is dirty, touched, or submitted.\n */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  /**\n   * constructor\n   * @param {FormControl} control\n   * @param {FormGroupDirective} form\n   * @returns True if it is an error\n   */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n/**\n * This component provides the view for drag&drop the choosen methods (jobs).\n * The order of the single jobs (methods) can be defined and a name for the workflow has to be entered.\n *\n * For drag and drop Angular Material CDK {@link https://material.angular.io/cdk/drag-drop/overview} was used.\n */\n@Component({\n  selector: 'app-available-jobs',\n  templateUrl: './available-jobs.component.html',\n  styleUrls: ['./available-jobs.component.css']\n})\nexport class AvailableJobsComponent implements OnInit, OnDestroy {\n  /**\n   * used in view to validate/check if name of workflow is entered\n   */\n  nameFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  /**\n   * used in view to handel error if name of workflow is not entered\n   */\n  matcher = new MyErrorStateMatcher();\n  /**\n   * in this variable name of workflow is stored\n   */\n  name = '';\n  /**\n   * used in view to enable and disable Next button\n   */\n  isDisabledNext = true;\n  /**\n   * used in view for one selected job - Drag&Drop\n   */\n  selectedJob: any;\n  /**\n   * used in view for table on the right - selected jobs list\n   */\n  selectedJobs: string[];\n  /**\n   * used for interim storage\n   */\n  copiedJobs: string[];\n  /**\n   * locally stored response\n   */\n  private response: string[];\n  /**\n   * Subscription for observed responseSub -> synchronized and shared response\n   */\n  private responseSub = Subscription;\n  /**\n   * locally stored workflow\n   */\n  workflow: Workflow;\n  /**\n   * Subscription for observed workflowSub -> synchronized and shared workflow\n   */\n  private workflowSub: Subscription;\n  /**\n   * locally stored list of jobs -> for drag&drop in view\n   */\n  jobsUpdated: string[] = [];\n  /**\n   * Subscription for observed jobsSub -> synchronized and shared list of jobs\n   */\n  private jobsSub: Subscription;\n  /**\n   * string used for routing/redirecting\n   */\n  link = 'wizard/';\n  /**\n   * locally stored counter\n   *\n   * index for navigating through wizard\n   */\n  counter: number;\n  /**\n   * Subscription for counterSub -> synchronized and shared counter\n   */\n  counterSub: Subscription;\n  /**\n   * constructor\n   * @param {JobsService} jobService\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   */\n  constructor(private jobService: JobsService,\n              private router: Router,\n              private wizardStepperService: WizardStepperService) { }\n  /**\n   * ngOnInit is a lifecycle hook\n   * - executed after constructor\n   *\n   * declaration of all necessary variables for this component\n   */\n  ngOnInit() {\n    this.jobService.getJobsFromServer();\n    // @ts-ignore\n    this.responseSub = this.jobService.responseListener\n      .subscribe((response: string[]) => {\n      this.response = response;\n    });\n    this.selectedJobs = [];\n    this.copiedJobs = [...this.selectedJobs];\n\n    this.jobsSub = this.wizardStepperService.getJobsListener()\n      .subscribe(jobsUpdated => {\n        this.jobsUpdated = jobsUpdated;\n      });\n\n    this.counterSub = this.wizardStepperService.getCounterListener()\n      .subscribe(counter => {\n        this.counter = counter;\n      });\n    this.workflowSub = this.wizardStepperService.getWorkflowListener()\n      .subscribe(workflow => {\n        this.workflow = workflow;\n      });\n\n    this.workflow = this.wizardStepperService.getWorkflow();\n    this.name = typeof this.workflow === 'undefined' ? '' : this.workflow.name;\n    this.jobsUpdated = this.wizardStepperService.getJobs();\n    this.selectedJobs = this.wizardStepperService.getJobs();\n    this.wizardStepperService.updateCount(this.counter = 0);\n    this.counter = this.wizardStepperService.getCounter();\n\n    console.log(this.workflow);\n    console.log(this.counter);\n    console.log('OnInit wurde ausgeführt');\n  }\n  /**\n   * ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\n   *\n   * resets variables and unsubscribes Subscriptions\n   */\n  ngOnDestroy() {\n    this.selectedJobs = [];\n    this.copiedJobs = [...this.selectedJobs];\n    this.jobsSub.unsubscribe();\n    this.counterSub.unsubscribe();\n    this.workflowSub.unsubscribe();\n    console.log('OnDestroy wurde ausgeführt');\n  }\n  /**\n   * stores selected jobe name for Drag&Drop\n   * @param {any} job Jobname of of selected job\n   */\n  onSelect(job: any): void {\n    this.selectedJob = job;\n  }\n  /**\n   * requests available Jobs from backend\n   */\n  getAvailableJobs(): void {\n    this.jobService.getJobsFromServer();\n  }\n  /**\n   * choose 1st job in workflow list and redirects to this job (job configurator)\n   */\n  onNextClick(): void {\n    if (this.jobsUpdated.length > 0) {\n      this.selectNextJob(this.workflow.getJobName(0));\n      this.router.navigate([this.link]);\n    } else {\n      alert('no jobs selected');\n    }\n  }\n  /**\n   * refreshes available Jobs from backend\n   */\n  onClick() {\n    this.getAvailableJobs();\n  }\n  /**\n   * resets selected jobs\n   */\n  onResetClick() {\n    this.selectedJobs = [];\n    this.wizardStepperService.updateJob(this.selectedJobs);\n    console.log(this.jobsUpdated);\n  }\n  /**\n   * stores selected list of jobs in wizardStepperService\n   */\n  onSaveClick() {\n    if (this.jobsUpdated.length > 0) {\n      this.workflow = new Workflow(this.name);\n      this.workflow.addJobs(this.jobsUpdated);\n      this.wizardStepperService.updateWorkflow(this.workflow);\n      this.isDisabledNext = false;\n      console.log(this.workflow);\n    } else {\n      alert('no jobs selected');\n    }\n  }\n  /**\n   * stores 1st job's routing-link under link\n   * @param {string} job Name of 1st job in selected workflow\n   */\n  selectNextJob(job: string) {\n    this.link = 'wizard/';\n    switch (job) {\n        /**\n         * enter new case for 'NewMethod' with 'new_method_path\n         */\n        case 'NewMethod': {\n          this.link += 'new_method_path';\n          break;\n        }\n        case 'GripperGrip': {\n          this.link += 'gripper_grip';\n          break;\n        }\n        case 'MoveArmOnTrajectory': {\n          this.link += 'arm_trajectory';\n          break;\n        }\n        case 'CustomWorkflow': {\n          this.link += 'arm_trajectory';\n          break;\n        }\n        case 'MoveArmJointsWorkflow': {\n          this.link += 'arm_joints';\n          break;\n        }\n        case 'BaseMove': {\n          this.link += 'base';\n          break;\n        }\n        case 'ArmCartesian': {\n          this.link += 'arm_cartesian';\n          break;\n        }\n        case 'GripperRelease': {\n          this.link += 'gripper_release';\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    console.log(this.link);\n  }\n  /**\n   * Drag&Drop from Angular Material {@link https://material.angular.io/cdk/drag-drop/overview}\n   * @param {CdkDragDrop} event\n   */\n  drop(event: CdkDragDrop) {\n    if (event.previousContainer.id === event.container.id) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      copyArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex);\n      this.getAvailableJobs();\n    }\n    this.wizardStepperService.updateJob(this.selectedJobs);\n    console.log(this.jobsUpdated.length);\n    console.log(this.counter);\n  }\n}\n\n    \n\n    \n        \n\n\n  Available Methods\n    \n      refresh\n    \n  \n\n\n\n\n  \n\n    \n\n      {{i}}{{move}}\n    \n\n  \n\n\n\n\n  \n    Selected Methods\n  \n\n  \n    \n      \n        \n        Enter Name\n        \n          Name is required\n        \n      \n    \n\n    \n    \n\n      \n        {{i}} {{move}}\n      \n    \n\n  \n  \n    \n      \n        delete\n      \n      \n        done\n      \n      \n      \n        navigate_next\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./available-jobs.component.css\n                \n                /* AvailableJobsComponent's private CSS styles */\n.example-container {\n  width: 300px;\n  max-width: 100%;\n  margin: 10px 10px 10px 10px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 1rem;\n}\n\n\n.selected {\n  background-color: #CFD8DC !important;\n  color: white;\n}\n.robotmethods {\n  margin: 0 0 2em 0;\n  list-style-type: none;\n  padding: 5px;\n  width: 18em;\n  border: 1px solid #EEE;\n}\n.robotmethods li {\n  cursor: pointer;\n  position: relative;\n  left: 0;\n  background-color: #EEE;\n  margin: .5em;\n  padding: .3em 0;\n  height: 1.8em;\n  border-radius: 4px;\n}\n.robotmethods li.selected:hover {\n  background-color: #BBD8DC !important;\n  color: white;\n}\n.robotmethods li:hover {\n  color: #607D8B;\n  background-color: #DDD;\n  left: .1em;\n}\n.robotmethods .text {\n  position: relative;\n  top: -3px;\n}\n.robotmethods .badge {\n  display: inline-block;\n  font-size: small;\n  color: white;\n  padding: 0.8em 0.7em 0 0.7em;\n  background-color:#405061;\n  line-height: 1em;\n  position: relative;\n  left: -1px;\n  top: -4px;\n  height: 1.8em;\n  margin-right: .8em;\n  border-radius: 4px 0 0 4px;\n}\n\n.cdk-drag-preview {\n  box-sizing: border-box;\n  border-radius: 4px;\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),\n  0 8px 10px 1px rgba(0, 0, 0, 0.14),\n  0 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.cdk-drag-placeholder {\n  background: #607D8B;\n  padding: 20px;\n  text-indent: -9999px;\n  opacity: 0;\n}\n\n/* Animate an item that has been dropped. */\n.cdk-drag-animating {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n.example-button-row button {\n  margin-right: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Available Methods          refresh                  {{i}}{{move}}            Selected Methods                              Enter Name                  Name is required                                        {{i}} {{move}}                                delete                    done                          navigate_next            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AvailableJobsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/base.model.ts\n        \n\n            \n                Description\n            \n            \n                This class/model is the abstract parent class of all Job models\nIt contains the parameters each method has a least\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _activationTimeout\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    activationTimeout\n                                \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/base.model.ts:18\n                            \n                        \n\n                \n                    \n                            constructor with default values for _id and _activationTimeout\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The name of the method\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activationTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/base.model.ts:18\n                            \n                        \n\n                \n                    \n                        according to API each method/job has activationTimeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/base.model.ts:10\n                            \n                        \n\n                \n                    \n                        id will be sent from backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/base.model.ts:14\n                            \n                        \n\n                \n                    \n                        name of method/job\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/base.model.ts:33\n                                \n                            \n                    \n                        \n                                Getter for _id\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setid(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/base.model.ts:40\n                                \n                            \n                    \n                        \n                                Setter for _id\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Set ID\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        activationTimeout\n                    \n                \n\n                \n                    \n                        getactivationTimeout()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/base.model.ts:47\n                                \n                            \n                    \n                        \n                                Getter for _activationTimeout\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setactivationTimeout(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/base.model.ts:54\n                                \n                            \n                    \n                        \n                                Setter for _activationTimeout\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Set _activationTimeout\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/base.model.ts:61\n                                \n                            \n                    \n                        \n                                Getter for _name\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/base.model.ts:68\n                                \n                            \n                    \n                        \n                                Setter for _name\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Set _name\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        export abstract class Base {\n  /**\n   * id will be sent from backend\n   */\n  private _id: number;\n  /**\n   * name of method/job\n   */\n  private _name: string;\n  /**\n   * according to API each method/job has activationTimeout\n   */\n  private _activationTimeout: number;\n\n  /**\n   * constructor with default values for _id and _activationTimeout\n   * @param {string} name The name of the method\n   */\n  constructor(name: string) {\n    this._id = 0;\n    this._activationTimeout = 50;\n    this._name = name;\n  }\n  /**\n   * Getter for _id\n   * @returns The _id\n   */\n  get id(): number {\n    return this._id;\n  }\n  /**\n   * Setter for _id\n   * @param {number} value Set ID\n   */\n  set id(value: number) {\n    this._id = value;\n  }\n  /**\n   * Getter for _activationTimeout\n   * @returns The _activationTimeout\n   */\n  get activationTimeout(): number {\n    return this._activationTimeout;\n  }\n  /**\n   * Setter for _activationTimeout\n   * @param {number} value Set _activationTimeout\n   */\n  set activationTimeout(value: number) {\n    this._activationTimeout = value;\n  }\n  /**\n   * Getter for _name\n   * @returns The _name\n   */\n  get name(): string {\n    return this._name;\n  }\n  /**\n   * Setter for _name\n   * @param {number} value Set _name\n   */\n  set name(value: string) {\n    this._name = value;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMove.html":{"url":"classes/BaseMove.html","title":"class - BaseMove","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMove\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/base-move.model.ts\n        \n\n            \n                Description\n            \n            \n                This class/model extends Base\nIt contains all parameters and methods for BaseMove\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _goalPose\n                            \n                            \n                                    Private\n                                _activationTimeout\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    goalPose\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/base-move.model.ts:11\n                            \n                        \n\n                \n                    \n                            constructor calls constructor of Base\nif id and activationTimout is not passed, default values are used.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _goalPose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/base-move.model.ts:11\n                            \n                        \n\n                \n                    \n                        to stores cartesian coordinates\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activationTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:18\n\n                            \n                        \n\n                \n                    \n                        according to API each method/job has activationTimeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:10\n\n                            \n                        \n\n                \n                    \n                        id will be sent from backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:14\n\n                            \n                        \n\n                \n                    \n                        name of method/job\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        goalPose\n                    \n                \n\n                \n                    \n                        getgoalPose()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/base-move.model.ts:38\n                                \n                            \n                    \n                        \n                                Getter for _goalPose\n\n\n                                \n                                \n                                \n                                    Returns :     number[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setgoalPose(value: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/base-move.model.ts:31\n                                \n                            \n                    \n                        \n                                Setter for _goalPose\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Set cartesian coordinates\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Base} from './base.model';\n/**\n * This class/model extends Base\n *\n * It contains all parameters and methods for BaseMove\n */\nexport class BaseMove extends Base {\n  /**\n   * to stores cartesian coordinates\n   */\n  private _goalPose: number [];\n  /**\n   * constructor calls constructor of Base\n   *\n   * if id and activationTimout is not passed, default values are used.\n   * @param {any} data\n   */\n  constructor(data: any) {\n    super('BaseMove');\n    this.id = data._id;\n    this.activationTimeout = data._activationTimeout;\n    this._goalPose = data._goalPose;\n    this.id = (typeof this.id === 'undefined') ? 0 : this.id ;\n    this.activationTimeout = (typeof this.activationTimeout === 'undefined') ? 50 : this.activationTimeout;\n    console.log(this._goalPose);\n  }\n  /**\n   * Setter for _goalPose\n   * @param {number} value Set cartesian coordinates\n   */\n  set goalPose(value: number[]) {\n    this._goalPose = value;\n  }\n  /**\n   * Getter for _goalPose\n   * @returns The _goalPose\n   */\n  get goalPose(): number[] {\n    return this._goalPose;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExecutionRunComponent.html":{"url":"components/ExecutionRunComponent.html","title":"component - ExecutionRunComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ExecutionRunComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/execution/execution-run/execution-run.component.ts\n\n\n    \n        Description\n    \n    \n        This component shows the configurated workflow and list all containing jobs.\nIt communicates with backend for saving, updating, and executing the workflow\n\n    \n\n    \n        Extends\n    \n    \n                WizardJobComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-execution-run\n            \n\n            \n                styleUrls\n                ./execution-run.component.css\n            \n\n\n\n            \n                templateUrl\n                ./execution-run.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displaySpinner\n                            \n                            \n                                isAlreadySave\n                            \n                            \n                                isDisabledRun\n                            \n                            \n                                isLoading\n                            \n                            \n                                message\n                            \n                            \n                                spinnerText\n                            \n                            \n                                workflowProgress\n                            \n                            \n                                counter\n                            \n                            \n                                    Private\n                                counterSub\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                    Private\n                                statusSub\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backCreateOnClick\n                            \n                            \n                                backRunOnClick\n                            \n                            \n                                backUpdateOnClick\n                            \n                            \n                                hideSpinner\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                runOnClick\n                            \n                            \n                                saveCreateOnClick\n                            \n                            \n                                saveUpdateOnClick\n                            \n                            \n                                setWorkflowProgress\n                            \n                            \n                                showSpinner\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onPreviousClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, http: HttpClient, httpRequest: HttpRequestService, eventEmitterService: WizardParentStepperService, SocketDataService: SocketDataService, spinner: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/execution/execution-run/execution-run.component.ts:49\n                            \n                        \n\n                \n                    \n                            constructor - calls constructor of parent WizardJobComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For redirecting\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Workflow Information\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        httpRequest\n                                                  \n                                                        \n                                                                        HttpRequestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For getting actual position from robot arm\n\n                                                        \n                                                \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Angular Material Stepper View\n\n                                                        \n                                                \n                                                \n                                                        SocketDataService\n                                                  \n                                                        \n                                                                        SocketDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For getting actual progress from backend\n\n                                                        \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Progress Spinner\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            backCreateOnClick\n                        \n                        \n                    \n                \n            \n            \n                \nbackCreateOnClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:161\n                \n            \n\n\n            \n                \n                    When 1st creation and clicked on Back button.\nredirects accordingly and reset counter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            backRunOnClick\n                        \n                        \n                    \n                \n            \n            \n                \nbackRunOnClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:183\n                \n            \n\n\n            \n                \n                    When executing Workflow and clicked on Back button.\nredirects accordingly and reset counter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            backUpdateOnClick\n                        \n                        \n                    \n                \n            \n            \n                \nbackUpdateOnClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:172\n                \n            \n\n\n            \n                \n                    When updated Workflow and clicked on Back button.\nredirects accordingly and reset counter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideSpinner\n                        \n                        \n                    \n                \n            \n            \n                \nhideSpinner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:94\n                \n            \n\n\n            \n                \n                    hides spinner in view\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:78\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook - executed after constructor\noverrides parent ngOninit() declares additional necessary variables for this component (WebSocket for Spinner)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runOnClick\n                        \n                        \n                    \n                \n            \n            \n                \nrunOnClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:115\n                \n            \n\n\n            \n                \n                    When clicked on Play button.\nActivates spinner,\ncommunicates with backend -> send execution request and\nask for progress via socket\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveCreateOnClick\n                        \n                        \n                    \n                \n            \n            \n                \nsaveCreateOnClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:132\n                \n            \n\n\n            \n                \n                    When 1st creation und clicked on Save button.\nCommunicates with backend -> send workflow to be saved and\nreceives workflow ID from backend\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveUpdateOnClick\n                        \n                        \n                    \n                \n            \n            \n                \nsaveUpdateOnClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:146\n                \n            \n\n\n            \n                \n                    When already stored Workflow and clicked on Save button.\nCommunicates with backend -> send workflow to be updated and\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setWorkflowProgress\n                        \n                        \n                    \n                \n            \n            \n                \nsetWorkflowProgress(msg)\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:101\n                \n            \n\n\n            \n                \n                    Sets worflowProgess for spinner\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSpinner\n                        \n                        \n                    \n                \n            \n            \n                \nshowSpinner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/execution-run/execution-run.component.ts:88\n                \n            \n\n\n            \n                \n                    activates spinner in view\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:129\n\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nunsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:67\n\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:92\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:108\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Oberservables\nbefore redirects to \"previous\" wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:139\n\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displaySpinner\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/execution-run/execution-run.component.ts:45\n                            \n                        \n\n                \n                    \n                        status for spinner\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAlreadySave\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/execution-run/execution-run.component.ts:29\n                            \n                        \n\n                \n                    \n                        status if already saved in backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabledRun\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/execution-run/execution-run.component.ts:25\n                            \n                        \n\n                \n                    \n                        before workflow ist not saved run button not displayed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/execution-run/execution-run.component.ts:33\n                            \n                        \n\n                \n                    \n                        status for progress spinner\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/execution-run/execution-run.component.ts:49\n                            \n                        \n\n                \n                    \n                        massage for websocket\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spinnerText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/execution-run/execution-run.component.ts:41\n                            \n                        \n\n                \n                    \n                        displayed text of spinner\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflowProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/execution-run/execution-run.component.ts:37\n                            \n                        \n\n                \n                    \n                        status for progress spinner\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:35\n\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:39\n\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:21\n\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:46\n\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:50\n\n                            \n                        \n\n                \n                    \n                        Subscription for stusSub -> synchronized and shared status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:25\n\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:29\n\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WizardStepperService} from '../../wizard-stepper/wizard-stepper.service';\nimport {WizardJobComponent} from '../../wizard-stepper/wizard-job/wizard-job.component';\nimport {HttpRequestService} from '../http-request.service';\nimport {HttpClient} from '@angular/common/http';\nimport {WizardParentStepperService} from '../../wizard-stepper/wizard-parent/wizard-parent-stepper.service';\nimport {SocketDataService} from '../../sockets/websocket.service';\nimport {NgxSpinnerService} from 'ngx-spinner';\n/**\n * This component shows the configurated workflow and list all containing jobs.\n *\n * It communicates with backend for saving, updating, and executing the workflow\n */\n@Component({\n  selector: 'app-execution-run',\n  templateUrl: './execution-run.component.html',\n  styleUrls: ['./execution-run.component.css']\n})\nexport class ExecutionRunComponent extends WizardJobComponent implements OnInit, OnDestroy {\n\n  /**\n   * before workflow ist not saved run button not displayed\n   */\n  isDisabledRun = true;\n  /**\n   * status if already saved in backend\n   */\n  isAlreadySave = false;\n  /**\n   * status for progress spinner\n   */\n  isLoading = false;\n  /**\n   * status for progress spinner\n   */\n  workflowProgress = 0;\n  /**\n   * displayed text of spinner\n   */\n  spinnerText: string;\n  /**\n   * status for spinner\n   */\n  displaySpinner = false;\n  /**\n   * massage for websocket\n   */\n  message: string;\n  // messages: string[] = [];\n  // connection;\n\n  /**\n   * constructor - calls constructor of parent WizardJobComponent\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   * @param {HttpRequestService} httpRequest For getting actual position from robot arm\n   * @param {WizardParentStepperService} eventEmitterService For Sharing Angular Material Stepper View\n   * @param {SocketDataService} SocketDataService For getting actual progress from backend\n   * @param {NgxSpinnerService} spinner For Progress Spinner\n   */\n  constructor(protected router: Router,\n              protected wizardStepperService: WizardStepperService,\n              private http: HttpClient,\n              private httpRequest: HttpRequestService,\n              protected eventEmitterService: WizardParentStepperService,\n              // tslint:disable-next-line:no-shadowed-variable\n              private SocketDataService: SocketDataService,\n              private spinner: NgxSpinnerService\n  ) {\n    super(router, wizardStepperService, eventEmitterService);\n  }\n  /**\n   * ngOnInit is a lifecycle hook - executed after constructor\n   *\n   * overrides parent ngOninit() declares additional necessary variables for this component (WebSocket for Spinner)\n   */\n  ngOnInit() {\n    super.ngOnInit();\n    this.SocketDataService.onNewMessage().subscribe(msg => {\n      console.log('Workflow Progress: ' + msg);\n      this.setWorkflowProgress(msg);\n    });\n  }\n  /**\n   * activates spinner in view\n   */\n  showSpinner() {\n    this.spinner.show();\n  }\n  /**\n   * hides spinner in view\n   */\n  hideSpinner(){\n    this.spinner.hide();\n  }\n  /**\n   * Sets worflowProgess for spinner\n   * @param {any} msg\n   */\n  setWorkflowProgress(msg) {\n    this.workflowProgress = parseInt(msg, 10);\n    this.spinnerText = 'Executing Workflow! Finished: ' + this.workflowProgress +' %';\n    if (this.workflowProgress === 100) {\n      this.hideSpinner();\n      this.workflowProgress = 0;\n    }\n  }\n  /**\n   * When clicked on Play button.\n   * Activates spinner,\n   * communicates with backend -> send execution request and\n   * ask for progress via socket\n   */\n  runOnClick() {\n    this.showSpinner();\n    this.spinnerText = 'Executing Workflow! Finished: 0%';\n    this.SocketDataService.sendMessage(this.workflow.name);\n    this.httpRequest.updateWorkflow(this.workflow);\n    setTimeout(() => {\n      this.httpRequest.runWorkflow();\n      this.eventEmitterService.onStepperNextClick();\n      console.log('Next wurde ausgeführt');\n      console.log('Hello from setTimeout');\n    }, 5000);\n  }\n  /**\n   * When 1st creation und clicked on Save button.\n   * Communicates with backend -> send workflow to be saved and\n   * receives workflow ID from backend\n   */\n  saveCreateOnClick() {\n    this.eventEmitterService.onStepperNextClick();\n    this.isDisabledRun = false;\n    if (this.isAlreadySave === false) {\n      this.httpRequest.createWorkflow(this.workflow);\n      this.isAlreadySave = true;\n    } else {\n    }\n    console.log('Next Create wurde ausgeführt');\n  }\n  /**\n   * When already stored Workflow and clicked on Save button.\n   * Communicates with backend -> send workflow to be updated and\n   */\n  saveUpdateOnClick() {\n    this.eventEmitterService.onStepperNextClick();\n    this.isDisabledRun = false;\n    if (this.isAlreadySave === false) {\n      this.httpRequest.updateWorkflow(this.workflow);\n      this.isAlreadySave = true;\n    } else {\n    }\n    console.log('Next Update wurde ausgeführt');\n  }\n  /**\n   * When 1st creation and clicked on Back button.\n   *\n   * redirects accordingly and reset counter\n   */\n  backCreateOnClick() {\n    this.eventEmitterService.onStepperBackClick();\n    this.selectNextJob(this.workflow.getJobName(this.counter));\n    this.router.navigate([this.link]);\n    console.log('Back Create wurde ausgeführt');\n  }\n  /**\n   * When updated Workflow and clicked on Back button.\n   *\n   * redirects accordingly and reset counter\n   */\n  backUpdateOnClick() {\n    this.eventEmitterService.onStepperBackClick();\n    this.selectNextJob(this.workflow.getJobName(this.counter));\n    this.router.navigate([this.link]);\n    console.log('Back Update wurde ausgeführt');\n  }\n  /**\n   * When executing Workflow and clicked on Back button.\n   *\n   * redirects accordingly and reset counter\n   */\n  backRunOnClick() {\n    this.link = '';\n    this.router.navigate([this.link]);\n  }\n}\n\n    \n\n    \n        Workflow Name: {{workflow.name}}\nWorkflow ID: {{workflow.id}}\n\n  \n\n    \n      \n        {{job.name}}\n      \n      \n        Show Parameters\n      \n    \n    \n      Activation Timeout:\n      \n    \n     Goal Position:\n      \n      {{job.goalPose}}\n     Goal Position:\n      \n      {{job.goalPose}}\n\n  \n\n\n\n\n  \n    \n      navigate_before\n    \n    \n    \n      done\n    \n    \n      play_circle_outline\n    \n  \n\n  \n    \n      navigate_before\n    \n    \n    \n      save\n    \n    \n      play_circle_outline\n    \n  \n\n  \n    \n      navigate_before\n    \n    \n    \n      play_circle_outline\n    \n  \n\n\n\n   {{spinnerText}}\n\n\n\n\n    \n\n    \n                \n                    ./execution-run.component.css\n                \n                .example-container {\n  width: 600px;\n  max-width: 100%;\n  margin: 10px 10px 10px 10px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 1rem;\n}\n\nh1, h2, h3, h4, h5, h6{\n  margin-top:20px;\n  margin-bottom:10px;\n  margin-left: 10px;\n}\n\n.selected {\n  background-color: #CFD8DC !important;\n  color: white;\n}\n.robotmethods {\n  margin: 0 0 2em 0;\n  list-style-type: none;\n  padding: 5px;\n  width: 18em;\n  /*border: 1px solid #EEE;*/\n}\n.robotmethods li {\n  cursor: pointer;\n  position: relative;\n  left: 0;\n  background-color: #EEE;\n  margin: .5em;\n  padding: .3em 0;\n  height: 1.8em;\n  border-radius: 4px;\n}\n\n.robotmethods .text {\n  position: relative;\n  top: -3px;\n}\n.robotmethods .badge {\n  display: inline-block;\n  font-size: small;\n  color: white;\n  padding: 0.8em 0.7em 0 0.7em;\n  background-color:#405061;\n  line-height: 1em;\n  position: relative;\n  left: -1px;\n  top: -4px;\n  height: 1.8em;\n  margin-right: .8em;\n  border-radius: 4px 0 0 4px;\n}\n\n.example-h2 {\n  margin: 10px;\n}\n\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n\n.example-margin {\n  margin: 30px;\n}\n\n.mat-slider-horizontal {\n  width: 100px;\n}\n\n.fxFlex{\n  flex: 100 1 auto;\n}\n\n.spinnerStyle{\n\n  width: 40%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Workflow Name: {{workflow.name}}Workflow ID: {{workflow.id}}                    {{job.name}}                    Show Parameters                    Activation Timeout:               Goal Position:            {{job.goalPose}}     Goal Position:            {{job.goalPose}}              navigate_before                  done              play_circle_outline                  navigate_before                  save              play_circle_outline                  navigate_before                  play_circle_outline         {{spinnerText}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExecutionRunComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GripperGrip.html":{"url":"classes/GripperGrip.html","title":"class - GripperGrip","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GripperGrip\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/gripper-grip.model.ts\n        \n\n            \n                Description\n            \n            \n                This class/model extends Base\nIt contains all parameters and methods for GripperGrip\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _activationTimeout\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/gripper-grip.model.ts:7\n                            \n                        \n\n                \n                    \n                            constructor calls constructor of Base\nif id and activationTimout is not passed, default values are used.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activationTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:18\n\n                            \n                        \n\n                \n                    \n                        according to API each method/job has activationTimeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:10\n\n                            \n                        \n\n                \n                    \n                        id will be sent from backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:14\n\n                            \n                        \n\n                \n                    \n                        name of method/job\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Base} from './base.model';\n/**\n * This class/model extends Base\n *\n * It contains all parameters and methods for GripperGrip\n */\nexport class GripperGrip extends Base {\n  /**\n   * constructor calls constructor of Base\n   *\n   * if id and activationTimout is not passed, default values are used.\n   * @param {any} data\n   */\n  constructor(data: any) {\n    super('GripperGrip');\n    this.id = data._id;\n    this.activationTimeout = data._activationTimeout;\n    this.id = (typeof this.id === 'undefined') ? 0 : this.id ;\n    this.activationTimeout = (typeof this.activationTimeout === 'undefined') ? 50 : this.activationTimeout;\n  }\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GripperRelease.html":{"url":"classes/GripperRelease.html","title":"class - GripperRelease","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GripperRelease\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/gripper-release.model.ts\n        \n\n            \n                Description\n            \n            \n                This class/model extends Base\nIt contains all parameters and methods for GripperRelease\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _activationTimeout\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/gripper-release.model.ts:7\n                            \n                        \n\n                \n                    \n                            constructor calls constructor of Base\nif id and activationTimout is not passed, default values are used.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activationTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:18\n\n                            \n                        \n\n                \n                    \n                        according to API each method/job has activationTimeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:10\n\n                            \n                        \n\n                \n                    \n                        id will be sent from backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:14\n\n                            \n                        \n\n                \n                    \n                        name of method/job\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Base} from './base.model';\n/**\n * This class/model extends Base\n *\n * It contains all parameters and methods for GripperRelease\n */\nexport class GripperRelease extends Base {\n  /**\n   * constructor calls constructor of Base\n   *\n   * if id and activationTimout is not passed, default values are used.\n   * @param {any} data\n   */\n  constructor(data: any) {\n    super('GripperRelease');\n    this.id = data._id;\n    this.activationTimeout = data._activationTimeout;\n    this.id = (typeof this.id === 'undefined') ? 0 : this.id ;\n    this.activationTimeout = (typeof this.activationTimeout === 'undefined') ? 50 : this.activationTimeout;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Header component\ndisplays \"home\" icon button\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:14\n                            \n                        \n\n                \n                    \n                            default constructor\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:25\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\nexecuted after constructor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Header component\n * displays \"home\" icon button\n */\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\n\nexport class HeaderComponent implements OnInit {\n\n  /**\n   * default constructor\n   */\n  constructor() { }\n\n  /**\n   * ngOnInit is a lifecycle hook\n   * executed after constructor\n   */\n  ngOnInit() { }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n         home \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     home             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpRequestService.html":{"url":"injectables/HttpRequestService.html","title":"injectable - HttpRequestService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpRequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/execution/http-request.service.ts\n        \n\n            \n                Description\n            \n            \n                this service provides the communication with backend.\nThe communication for all CRUD (CREATE, READ, UPDATE, DELETE) + Execute(Run) operations are provided.\nThe communication with backend is via HTTP\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                workflow\n                            \n                            \n                                workflowList\n                            \n                            \n                                    Private\n                                workflowListSub\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createWorkflow\n                            \n                            \n                                deleteWorkflow\n                            \n                            \n                                getAllWorkflows\n                            \n                            \n                                getArmPosition\n                            \n                            \n                                getBasePosition\n                            \n                            \n                                getWorkflow\n                            \n                            \n                                getWorkflowListUpdateListener\n                            \n                            \n                                runWorkflow\n                            \n                            \n                                saveWorkflow\n                            \n                            \n                                updateWorkflow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, wizardStepperService: WizardStepperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/execution/http-request.service.ts:32\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for for communication with backend\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for sharing workflow information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createWorkflow\n                        \n                        \n                    \n                \n            \n            \n                \ncreateWorkflow(workflow: Workflow)\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:62\n                \n            \n\n\n            \n                \n                    Sends workflow to backend to be stored persistently – (Backend - CREATE workflow in DB)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workflow\n                                    \n                                                Workflow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteWorkflow\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteWorkflow(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:116\n                \n            \n\n\n            \n                \n                    Sends workflow id to backend to be deleted – (Backend - DELETE workflow in DB)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID of workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllWorkflows\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllWorkflows()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:96\n                \n            \n\n\n            \n                \n                    Requests all workflow saved in backend – (Backend - READ all workflow in DB)\nStores response (all workflows) in workflowList locally resp. workflowListSub to share\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getArmPosition\n                        \n                        \n                    \n                \n            \n            \n                \ngetArmPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:123\n                \n            \n\n\n            \n                \n                    Requests current arm position from backend\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The requested arm position\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBasePosition\n                        \n                        \n                    \n                \n            \n            \n                \ngetBasePosition()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:130\n                \n            \n\n\n            \n                \n                    Requests current base position from backend\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The requested base position\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWorkflow\n                        \n                        \n                    \n                \n            \n            \n                \ngetWorkflow(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:138\n                \n            \n\n\n            \n                \n                    Requests the workflow belonging to id from backend\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID from workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The requested workflow\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWorkflowListUpdateListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetWorkflowListUpdateListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:109\n                \n            \n\n\n            \n                \n                    Getter for oberservable worflowListSub\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The worflowListSub\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runWorkflow\n                        \n                        \n                    \n                \n            \n            \n                \nrunWorkflow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:74\n                \n            \n\n\n            \n                \n                    Sends workflow to backend to be executed physically\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveWorkflow\n                        \n                        \n                    \n                \n            \n            \n                \nsaveWorkflow(workflow: Workflow)\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:50\n                \n            \n\n\n            \n                \n                    Sends workflow to backend to be updated – (Backend - UPDATE workflow in DB)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workflow\n                                    \n                                                Workflow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateWorkflow\n                        \n                        \n                    \n                \n            \n            \n                \nupdateWorkflow(workflow: Workflow)\n                \n            \n\n\n            \n                \n                    Defined in src/app/execution/http-request.service.ts:84\n                \n            \n\n\n            \n                \n                    Sends workflow to backend to be updated – (Backend - UPDATE workflow in DB)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workflow\n                                    \n                                                Workflow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Sends workflow to backend to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/http-request.service.ts:28\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflowList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WorkflowListElement[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/http-request.service.ts:20\n                            \n                        \n\n                \n                    \n                        local array of all Workflows presented in Workflow table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowListSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/http-request.service.ts:24\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowListSub -> synchronized and shared WorkflowListElement Array\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/execution/http-request.service.ts:32\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Workflow} from '../model/workflow.model';\nimport {WizardStepperService} from '../wizard-stepper/wizard-stepper.service';\nimport {Subscription} from 'rxjs';\nimport {Subject} from 'rxjs';\nimport {WorkflowListElement} from '../model/workflow-list-element.model';\n/**\n * this service provides the communication with backend.\n * The communication for all CRUD (CREATE, READ, UPDATE, DELETE) + Execute(Run) operations are provided.\n * The communication with backend is via HTTP\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpRequestService {\n  /**\n   * local array of all Workflows presented in Workflow table\n   */\n  workflowList: WorkflowListElement[] = [];\n  /**\n   * Subscription for observed workflowListSub -> synchronized and shared WorkflowListElement Array\n   */\n  private workflowListSub = new Subject();\n  /**\n   * locally stored workflow\n   */\n  workflow: Workflow;\n  /**\n   * Subscription for observed workflowSub -> synchronized and shared workflow\n   */\n  private workflowSub: Subscription;\n  /**\n   * constructor\n   * @param {HttpClient} http Service for for communication with backend\n   * @param {WizardStepperService} wizardStepperService Service for sharing workflow information\n   */\n  constructor(private http: HttpClient,\n              private wizardStepperService: WizardStepperService) {\n    this.workflowSub = this.wizardStepperService.getWorkflowListener()\n      .subscribe(workflow => {\n        this.workflow = workflow;\n      });\n    this.workflow = this.wizardStepperService.getWorkflow();\n  }\n  /**\n   * Sends workflow to backend to be updated – (Backend - UPDATE workflow in DB)\n   * @param {Workflow} workflow\n   */\n  saveWorkflow(workflow: Workflow) {\n    this.http.post('http://localhost:3000/saveWorkflow', {jsondata: workflow}).subscribe(\n      (responseData) => {\n        console.log(responseData);\n        this.workflow.id = responseData + '';\n        this.wizardStepperService.updateWorkflow(this.workflow);\n      });\n  }\n  /**\n   * Sends workflow to backend to be stored persistently – (Backend - CREATE workflow in DB)\n   * @param {Workflow} workflow\n   */\n  createWorkflow(workflow: Workflow) {\n    this.http.post('http://localhost:3000/createWorkflow', {jsondata: workflow}).subscribe(\n      (responseData) => {\n        console.log(responseData);\n        this.workflow.id = responseData + '';\n        this.wizardStepperService.updateWorkflow(this.workflow);\n      });\n  }\n  /**\n   * Sends workflow to backend to be executed physically\n   * @param {Workflow} workflow\n   */\n  runWorkflow() {\n    this.http.post('http://localhost:3000/playWorkflow', {wf_id: this.workflow.id}).subscribe(\n      (responseData) => {\n        console.log(responseData);\n      });\n  }\n  /**\n   * Sends workflow to backend to be updated – (Backend - UPDATE workflow in DB)\n   * @param {Workflow} workflow Sends workflow to backend to be updated\n   */\n  updateWorkflow(workflow: Workflow) {\n    console.log(this.workflow);\n    this.http.post('http://localhost:3000/updateWorkflow', {jsondata: workflow}).subscribe(\n      (responseData) => {\n        console.log(responseData);\n      });\n  }\n  /**\n   * Requests all workflow saved in backend – (Backend - READ all workflow in DB)\n   *\n   * Stores response (all workflows) in workflowList locally resp. workflowListSub to share\n   */\n  getAllWorkflows() {\n    this.http.post('http://localhost:3000/readWorkflow/readAll', null).subscribe(\n      (responseData) => {\n        this.workflowList = responseData;\n        this.workflowListSub.next([...this.workflowList]);\n        console.log(responseData);\n        console.log(this.workflowList);\n      });\n  }\n  /**\n   * Getter for oberservable worflowListSub\n   * @returns The worflowListSub\n   */\n  getWorkflowListUpdateListener() {\n    return this.workflowListSub.asObservable();\n  }\n  /**\n   * Sends workflow id to backend to be deleted – (Backend - DELETE workflow in DB)\n   * @param {number} id ID of workflow\n   */\n  deleteWorkflow(id: number) {\n    return this.http.post('http://localhost:3000/deleteWorkflow/deleteOne', {wf_id: id});\n  }\n  /**\n   * Requests current arm position from backend\n   * @returns The requested arm position\n   */\n  getArmPosition() {\n    return this.http.post('http://localhost:3000/RobotDataService/getBasePosition', null);\n  }\n  /**\n   * Requests current base position from backend\n   * @returns The requested base position\n   */\n  getBasePosition() {\n    return this.http.post('http://localhost:3000/RobotDataService/getBasePosition', null);\n  }\n  /**\n   * Requests the workflow belonging to id from backend\n   * @param {number} id ID from workflow\n   * @returns The requested workflow\n   */\n  getWorkflow(id: number) {\n    return this.http.post('http://localhost:3000/readWorkflow/readOne', {wf_id: id});\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/jobs/jobs.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is only used in available-jobs component.\nRequests available jobs (methods) from backend and\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _response\n                            \n                            \n                                    Private\n                                _responseListener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getJobsFromServer\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    responseListener\n                                \n                                \n                                    response\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/jobs/jobs.service.ts:21\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for for communication with backend\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getJobsFromServer\n                        \n                        \n                    \n                \n            \n            \n                \ngetJobsFromServer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/jobs.service.ts:32\n                \n            \n\n\n            \n                \n                    requests available jobs (methods) from backend and store them locally and observable\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The list of available jobs (methods)\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _response\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/jobs.service.ts:16\n                            \n                        \n\n                \n                    \n                        locally stored response from backend in array\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _responseListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/jobs.service.ts:21\n                            \n                        \n\n                \n                    \n                        Subjects are both observer and observable.\nhere to share the response between components\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        responseListener\n                    \n                \n\n                \n                    \n                        getresponseListener()\n                    \n                \n                            \n                                \n                                    Defined in src/app/jobs/jobs.service.ts:44\n                                \n                            \n                    \n                        \n                                Getter for responseListener\n\n\n                                \n                                \n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        response\n                    \n                \n\n                \n                    \n                        getresponse()\n                    \n                \n                            \n                                \n                                    Defined in src/app/jobs/jobs.service.ts:51\n                                \n                            \n                    \n                        \n                                Getter for response\n\n\n                                \n                                \n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Subject} from 'rxjs';\n/**\n * This service is only used in available-jobs component.\n *\n * Requests available jobs (methods) from backend and\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobsService {\n  /**\n   * locally stored response from backend in array\n   */\n  private _response: string[];\n  /**\n   * Subjects are both observer and observable.\n   * here to share the response between components\n   */\n  private _responseListener = new Subject();\n  /**\n   * constructor\n   * @param {HttpClient} http Service for for communication with backend\n   */\n  constructor(private http: HttpClient) {\n  }\n  /**\n   * requests available jobs (methods) from backend and store them locally and observable\n   * @returns The list of available jobs (methods)\n   */\n  getJobsFromServer() {\n    return this.http.post('http://localhost:3000/RobotDataService/getAvailableJobs', null).subscribe(\n      (responseData) => {\n        this._response = responseData.workflows;\n        this._responseListener.next([...this._response]);\n        console.log(responseData);\n      });\n  }\n  /**\n   * Getter for responseListener\n   * @returns The responseListener - list of available jobs\n   */\n  get responseListener(): Subject {\n    return this._responseListener;\n  }\n  /**\n   * Getter for response\n   * @returns The response - list of available jobs\n   */\n  get response(): string[] {\n    return this._response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Move.html":{"url":"classes/Move.html","title":"class - Move","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Move\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/jobs/move.data.ts\n        \n\n            \n                Description\n            \n            \n                This class is only used for\nDrag&Drop from Angular Material https://material.angular.io/cdk/drag-drop/overview\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, workflow: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/jobs/move.data.ts:13\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID\n\n                                                        \n                                                \n                                                \n                                                        workflow\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The displayed name of Methods\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/move.data.ts:9\n                            \n                        \n\n                \n                    \n                        id -> index 1 to number of methods\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/jobs/move.data.ts:13\n                            \n                        \n\n                \n                    \n                        name of displayed methods for Drag&Drop\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Move {\n  /**\n   * id -> index 1 to number of methods\n   */\n  id: number;\n  /**\n   * name of displayed methods for Drag&Drop\n   */\n  name: string;\n  /**\n   * constructor\n   * @param {number} id ID\n   * @param {any} workflow The displayed name of Methods\n   */\n  constructor(id: number, workflow: any) {\n    this.id = id;\n    this.name = workflow;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyErrorStateMatcher.html":{"url":"classes/MyErrorStateMatcher.html","title":"class - MyErrorStateMatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyErrorStateMatcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/jobs/available-jobs/available-jobs.component.ts\n        \n\n            \n                Description\n            \n            \n                Error when invalid control is dirty, touched, or submitted.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ErrorStateMatcher\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isErrorState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isErrorState\n                        \n                        \n                    \n                \n            \n            \n                \nisErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/jobs/available-jobs/available-jobs.component.ts:22\n                \n            \n\n\n            \n                \n                    constructor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                            FormGroupDirective | NgForm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if it is an error\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Component, OnInit, OnDestroy, SimpleChange} from '@angular/core';\nimport { JobsService} from '../jobs.service';\nimport {CdkDragDrop, moveItemInArray, transferArrayItem, copyArrayItem} from '@angular/cdk/drag-drop';\nimport {Move} from '../move.data';\nimport {Subscription} from 'rxjs';\nimport {Router} from '@angular/router';\nimport { WizardStepperService} from '../../wizard-stepper/wizard-stepper.service';\nimport {Workflow} from '../../model/workflow.model';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material';\n\n/**\n * Error when invalid control is dirty, touched, or submitted.\n */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  /**\n   * constructor\n   * @param {FormControl} control\n   * @param {FormGroupDirective} form\n   * @returns True if it is an error\n   */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n/**\n * This component provides the view for drag&drop the choosen methods (jobs).\n * The order of the single jobs (methods) can be defined and a name for the workflow has to be entered.\n *\n * For drag and drop Angular Material CDK {@link https://material.angular.io/cdk/drag-drop/overview} was used.\n */\n@Component({\n  selector: 'app-available-jobs',\n  templateUrl: './available-jobs.component.html',\n  styleUrls: ['./available-jobs.component.css']\n})\nexport class AvailableJobsComponent implements OnInit, OnDestroy {\n  /**\n   * used in view to validate/check if name of workflow is entered\n   */\n  nameFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  /**\n   * used in view to handel error if name of workflow is not entered\n   */\n  matcher = new MyErrorStateMatcher();\n  /**\n   * in this variable name of workflow is stored\n   */\n  name = '';\n  /**\n   * used in view to enable and disable Next button\n   */\n  isDisabledNext = true;\n  /**\n   * used in view for one selected job - Drag&Drop\n   */\n  selectedJob: any;\n  /**\n   * used in view for table on the right - selected jobs list\n   */\n  selectedJobs: string[];\n  /**\n   * used for interim storage\n   */\n  copiedJobs: string[];\n  /**\n   * locally stored response\n   */\n  private response: string[];\n  /**\n   * Subscription for observed responseSub -> synchronized and shared response\n   */\n  private responseSub = Subscription;\n  /**\n   * locally stored workflow\n   */\n  workflow: Workflow;\n  /**\n   * Subscription for observed workflowSub -> synchronized and shared workflow\n   */\n  private workflowSub: Subscription;\n  /**\n   * locally stored list of jobs -> for drag&drop in view\n   */\n  jobsUpdated: string[] = [];\n  /**\n   * Subscription for observed jobsSub -> synchronized and shared list of jobs\n   */\n  private jobsSub: Subscription;\n  /**\n   * string used for routing/redirecting\n   */\n  link = 'wizard/';\n  /**\n   * locally stored counter\n   *\n   * index for navigating through wizard\n   */\n  counter: number;\n  /**\n   * Subscription for counterSub -> synchronized and shared counter\n   */\n  counterSub: Subscription;\n  /**\n   * constructor\n   * @param {JobsService} jobService\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   */\n  constructor(private jobService: JobsService,\n              private router: Router,\n              private wizardStepperService: WizardStepperService) { }\n  /**\n   * ngOnInit is a lifecycle hook\n   * - executed after constructor\n   *\n   * declaration of all necessary variables for this component\n   */\n  ngOnInit() {\n    this.jobService.getJobsFromServer();\n    // @ts-ignore\n    this.responseSub = this.jobService.responseListener\n      .subscribe((response: string[]) => {\n      this.response = response;\n    });\n    this.selectedJobs = [];\n    this.copiedJobs = [...this.selectedJobs];\n\n    this.jobsSub = this.wizardStepperService.getJobsListener()\n      .subscribe(jobsUpdated => {\n        this.jobsUpdated = jobsUpdated;\n      });\n\n    this.counterSub = this.wizardStepperService.getCounterListener()\n      .subscribe(counter => {\n        this.counter = counter;\n      });\n    this.workflowSub = this.wizardStepperService.getWorkflowListener()\n      .subscribe(workflow => {\n        this.workflow = workflow;\n      });\n\n    this.workflow = this.wizardStepperService.getWorkflow();\n    this.name = typeof this.workflow === 'undefined' ? '' : this.workflow.name;\n    this.jobsUpdated = this.wizardStepperService.getJobs();\n    this.selectedJobs = this.wizardStepperService.getJobs();\n    this.wizardStepperService.updateCount(this.counter = 0);\n    this.counter = this.wizardStepperService.getCounter();\n\n    console.log(this.workflow);\n    console.log(this.counter);\n    console.log('OnInit wurde ausgeführt');\n  }\n  /**\n   * ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\n   *\n   * resets variables and unsubscribes Subscriptions\n   */\n  ngOnDestroy() {\n    this.selectedJobs = [];\n    this.copiedJobs = [...this.selectedJobs];\n    this.jobsSub.unsubscribe();\n    this.counterSub.unsubscribe();\n    this.workflowSub.unsubscribe();\n    console.log('OnDestroy wurde ausgeführt');\n  }\n  /**\n   * stores selected jobe name for Drag&Drop\n   * @param {any} job Jobname of of selected job\n   */\n  onSelect(job: any): void {\n    this.selectedJob = job;\n  }\n  /**\n   * requests available Jobs from backend\n   */\n  getAvailableJobs(): void {\n    this.jobService.getJobsFromServer();\n  }\n  /**\n   * choose 1st job in workflow list and redirects to this job (job configurator)\n   */\n  onNextClick(): void {\n    if (this.jobsUpdated.length > 0) {\n      this.selectNextJob(this.workflow.getJobName(0));\n      this.router.navigate([this.link]);\n    } else {\n      alert('no jobs selected');\n    }\n  }\n  /**\n   * refreshes available Jobs from backend\n   */\n  onClick() {\n    this.getAvailableJobs();\n  }\n  /**\n   * resets selected jobs\n   */\n  onResetClick() {\n    this.selectedJobs = [];\n    this.wizardStepperService.updateJob(this.selectedJobs);\n    console.log(this.jobsUpdated);\n  }\n  /**\n   * stores selected list of jobs in wizardStepperService\n   */\n  onSaveClick() {\n    if (this.jobsUpdated.length > 0) {\n      this.workflow = new Workflow(this.name);\n      this.workflow.addJobs(this.jobsUpdated);\n      this.wizardStepperService.updateWorkflow(this.workflow);\n      this.isDisabledNext = false;\n      console.log(this.workflow);\n    } else {\n      alert('no jobs selected');\n    }\n  }\n  /**\n   * stores 1st job's routing-link under link\n   * @param {string} job Name of 1st job in selected workflow\n   */\n  selectNextJob(job: string) {\n    this.link = 'wizard/';\n    switch (job) {\n        /**\n         * enter new case for 'NewMethod' with 'new_method_path\n         */\n        case 'NewMethod': {\n          this.link += 'new_method_path';\n          break;\n        }\n        case 'GripperGrip': {\n          this.link += 'gripper_grip';\n          break;\n        }\n        case 'MoveArmOnTrajectory': {\n          this.link += 'arm_trajectory';\n          break;\n        }\n        case 'CustomWorkflow': {\n          this.link += 'arm_trajectory';\n          break;\n        }\n        case 'MoveArmJointsWorkflow': {\n          this.link += 'arm_joints';\n          break;\n        }\n        case 'BaseMove': {\n          this.link += 'base';\n          break;\n        }\n        case 'ArmCartesian': {\n          this.link += 'arm_cartesian';\n          break;\n        }\n        case 'GripperRelease': {\n          this.link += 'gripper_release';\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    console.log(this.link);\n  }\n  /**\n   * Drag&Drop from Angular Material {@link https://material.angular.io/cdk/drag-drop/overview}\n   * @param {CdkDragDrop} event\n   */\n  drop(event: CdkDragDrop) {\n    if (event.previousContainer.id === event.container.id) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      copyArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex);\n      this.getAvailableJobs();\n    }\n    this.wizardStepperService.updateJob(this.selectedJobs);\n    console.log(this.jobsUpdated.length);\n    console.log(this.counter);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewMethod.html":{"url":"classes/NewMethod.html","title":"class - NewMethod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewMethod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/new-method.model.ts\n        \n\n            \n                Description\n            \n            \n                The new class/model must extend Base!\nAll other parameters and methods can be changed for NewMethod\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _goalPose\n                            \n                            \n                                    Private\n                                _activationTimeout\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    goalPose\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/new-method.model.ts:11\n                            \n                        \n\n                \n                    \n                            constructor calls constructor of Base\nonly example - has to be adjusted to NewMethod\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _goalPose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/new-method.model.ts:11\n                            \n                        \n\n                \n                    \n                        only example - has be adjusted to NewMethod\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activationTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:18\n\n                            \n                        \n\n                \n                    \n                        according to API each method/job has activationTimeout\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:10\n\n                            \n                        \n\n                \n                    \n                        id will be sent from backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:14\n\n                            \n                        \n\n                \n                    \n                        name of method/job\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        goalPose\n                    \n                \n\n                \n                    \n                        getgoalPose()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/new-method.model.ts:38\n                                \n                            \n                    \n                        \n                                Getter for e.g. _goalPose - has be adjusted to NewMethod\n\n\n                                \n                                \n                                \n                                    Returns :     number[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setgoalPose(value: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/new-method.model.ts:31\n                                \n                            \n                    \n                        \n                                Setter for e.g. _goalPose - has be adjusted to NewMethod\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Base} from './base.model';\n/**\n * The new class/model must extend Base!\n *\n * All other parameters and methods can be changed for NewMethod\n */\nexport class NewMethod extends Base {\n  /**\n   * only example - has be adjusted to NewMethod\n   */\n  private _goalPose: number [];\n  /**\n   * constructor calls constructor of Base\n   *\n   * only example - has to be adjusted to NewMethod\n   * @param {any} data\n   */\n  constructor(data: any) {\n    super('NewMethod');\n    this.id = data._id;\n    this.activationTimeout = data._activationTimeout;\n    this._goalPose = data._goalPose;\n    this.id = (typeof this.id === 'undefined') ? 0 : this.id ;\n    this.activationTimeout = (typeof this.activationTimeout === 'undefined') ? 50 : this.activationTimeout;\n    console.log(this._goalPose);\n  }\n  /**\n   * Setter for e.g. _goalPose - has be adjusted to NewMethod\n   * @param {number} value\n   */\n  set goalPose(value: number[]) {\n    this._goalPose = value;\n  }\n  /**\n   * Getter for e.g. _goalPose - has be adjusted to NewMethod\n   * @returns The _goalPose\n   */\n  get goalPose(): number[] {\n    return this._goalPose;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoPageFoundComponent.html":{"url":"components/NoPageFoundComponent.html","title":"component - NoPageFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoPageFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/no-page-found/no-page-found.component.ts\n\n\n    \n        Description\n    \n    \n        This component indicates that page was not found\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-no-page-found\n            \n\n            \n                styleUrls\n                ./no-page-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./no-page-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/no-page-found/no-page-found.component.ts:12\n                            \n                        \n\n                \n                    \n                            The default \"constructor\"\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/no-page-found/no-page-found.component.ts:23\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\nexecuted after constructor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * This component indicates that page was not found\n */\n\n@Component({\n  selector: 'app-no-page-found',\n  templateUrl: './no-page-found.component.html',\n  styleUrls: ['./no-page-found.component.css']\n})\nexport class NoPageFoundComponent implements OnInit {\n\n  /**\n   * The default \"constructor\"\n   */\n  constructor() { }\n\n  /**\n   * ngOnInit is a lifecycle hook\n   * executed after constructor\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        This page could not be found!\n\n    \n\n    \n                \n                    ./no-page-found.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'This page could not be found!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NoPageFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SocketDataService.html":{"url":"classes/SocketDataService.html","title":"class - SocketDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SocketDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/sockets/websocket.service.ts\n        \n\n            \n                Description\n            \n            \n                This service provides a websocket needed for viewing progress of backend\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                socket\n                            \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNewMessage\n                            \n                            \n                                    Public\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/sockets/websocket.service.ts:14\n                            \n                        \n\n                \n                    \n                            default constructor - instantiate socket\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            socket\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/sockets/websocket.service.ts:14\n                            \n                        \n\n                \n                    \n                        web socket\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:3030'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sockets/websocket.service.ts:10\n                            \n                        \n\n                \n                    \n                        url\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNewMessage\n                        \n                        \n                    \n                \n            \n            \n                \nonNewMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/sockets/websocket.service.ts:32\n                \n            \n\n\n            \n                \n                    if status change of obeservable\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The Execution Status Msg\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/sockets/websocket.service.ts:25\n                \n            \n\n\n            \n                \n                    not used, but you can send a message to the socket\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as io from 'socket.io-client';\nimport {Observable, Observer} from 'rxjs';\n/**\n * This service provides a websocket needed for viewing progress of backend\n */\nexport class SocketDataService {\n  /**\n   * url\n   */\n  private url = 'http://localhost:3030';\n  /**\n   * web socket\n   */\n  private socket;\n  /**\n   * default constructor - instantiate socket\n   */\n  constructor() {\n    this.socket = io(this.url);\n  }\n  /**\n   * not used, but you can send a message to the socket\n   * @param {any} message The message\n   */\n  public sendMessage(message) {\n    this.socket.emit('new-message', message);\n  }\n  /**\n   * if status change of obeservable\n   * @returns The Execution Status Msg\n   */\n  onNewMessage() {\n    return new Observable((observer) => {\n      this.socket.on('message', msg => {\n        observer.next(msg);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardArmCartesianComponent.html":{"url":"components/WizardArmCartesianComponent.html","title":"component - WizardArmCartesianComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardArmCartesianComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts\n\n\n    \n        Description\n    \n    \n        This component is a Child Component of \"Wizard-Job\".\nIt presents the view of method ArmCartesian in the configurator (\"Wizard-Parent\").\nTo present and enter values Angular Material Design Components where used in the view\nhttps://material.angular.io/components/categories\n\n    \n\n    \n        Extends\n    \n    \n                WizardJobComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wizard-arm-cartesian\n            \n\n            \n                styleUrls\n                ./wizard-arm-cartesian.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wizard-arm-cartesian.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                armCartesian\n                            \n                            \n                                disabledActTimeout\n                            \n                            \n                                goalPose\n                            \n                            \n                                invertActTimeout\n                            \n                            \n                                isDisabledNext\n                            \n                            \n                                maxActTimeout\n                            \n                            \n                                minActTimeout\n                            \n                            \n                                stepActTimeout\n                            \n                            \n                                thumbLabelActTimeout\n                            \n                            \n                                title\n                            \n                            \n                                valueActTimeout\n                            \n                            \n                                verticalActTimeout\n                            \n                            \n                                counter\n                            \n                            \n                                    Private\n                                counterSub\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                    Private\n                                statusSub\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onGetPostionClick\n                            \n                            \n                                onNextClick\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onPreviousClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, eventEmitterService: WizardParentStepperService, httpRequest: HttpRequestService)\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:68\n                            \n                        \n\n                \n                    \n                            constructor - calls constructor of parent WizardJobComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For redirecting\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Workflow Information\n\n                                                        \n                                                \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Angular Material Stepper View\n\n                                                        \n                                                \n                                                \n                                                        httpRequest\n                                                  \n                                                        \n                                                                        HttpRequestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For getting actual position from robot arm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:87\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook - executed after constructor\noverrides parent ngOninit() declares additional necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onGetPostionClick\n                        \n                        \n                    \n                \n            \n            \n                \nonGetPostionClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:115\n                \n            \n\n\n            \n                \n                    requests actual position form backend and stores the value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:97\n                \n            \n\n\n            \n                \n                    overrides parent onNextClick() - updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:129\n\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nunsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:67\n\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:92\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:108\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Oberservables\nbefore redirects to \"previous\" wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:139\n\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            armCartesian\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ArmCartesian\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:28\n                            \n                        \n\n                \n                    \n                        local instance of ArmCartesian\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabledActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:32\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goalPose\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invertActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:36\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabledNext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:68\n                            \n                        \n\n                \n                    \n                        next button - parameter for Angular Material Button  https://material.angular.io/components/button/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:40\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:44\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:48\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbLabelActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:52\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Arm Cartesian'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:24\n                            \n                        \n\n                \n                    \n                        displayed titel of the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:56\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verticalActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts:60\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:35\n\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:39\n\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:21\n\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:46\n\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:50\n\n                            \n                        \n\n                \n                    \n                        Subscription for stusSub -> synchronized and shared status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:25\n\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:29\n\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WizardStepperService} from '../wizard-stepper.service';\nimport {WizardJobComponent} from '../wizard-job/wizard-job.component';\nimport {ArmCartesian} from '../../model/arm-cartesian.model';\nimport {WizardParentStepperService} from '../wizard-parent/wizard-parent-stepper.service';\nimport {HttpRequestService} from '../../execution/http-request.service';\n/**\n * This component is a Child Component of \"Wizard-Job\".\n *\n * It presents the view of method ArmCartesian in the configurator (\"Wizard-Parent\").\n * To present and enter values Angular Material Design Components where used in the view\n * {@link https://material.angular.io/components/categories}\n */\n@Component({\n  selector: 'app-wizard-arm-cartesian',\n  templateUrl: './wizard-arm-cartesian.component.html',\n  styleUrls: ['./wizard-arm-cartesian.component.css']\n})\nexport class WizardArmCartesianComponent extends WizardJobComponent implements OnInit,  OnDestroy {\n  /**\n   * displayed titel of the component\n   */\n  title = 'Arm Cartesian';\n  /**\n   * local instance of ArmCartesian\n   */\n  armCartesian: ArmCartesian;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  disabledActTimeout = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  invertActTimeout = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  maxActTimeout = 100;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  minActTimeout = 0;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  stepActTimeout = 1;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  thumbLabelActTimeout = true;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  valueActTimeout = 50;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  verticalActTimeout = false;\n  /*\n   * cartesian coordinates of robot component\n   */\n  goalPose;\n  /**\n   * next button - parameter for Angular Material Button  {@link https://material.angular.io/components/button/overview}\n   */\n  isDisabledNext = true;\n  /**\n   * constructor - calls constructor of parent WizardJobComponent\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   * @param {WizardParentStepperService} eventEmitterService For Sharing Angular Material Stepper View\n   * @param {HttpRequestService} httpRequest For getting actual position from robot arm\n   */\n  constructor(router: Router,\n              wizardStepperService: WizardStepperService,\n              eventEmitterService: WizardParentStepperService,\n              private httpRequest: HttpRequestService) {\n    super(router, wizardStepperService, eventEmitterService);\n  }\n  /**\n   * ngOnInit is a lifecycle hook - executed after constructor\n   *\n   * overrides parent ngOninit() declares additional necessary variables for this component\n   */\n  ngOnInit() {\n    super.ngOnInit();\n    this.armCartesian = this.wizardStepperService.getWorkflowItem() as ArmCartesian;\n    this.valueActTimeout = this.armCartesian.activationTimeout;\n    this.goalPose = this.armCartesian.goalPose;\n  }\n  /**\n   * overrides parent onNextClick() - updates all necessary variables and Observables\n   * before redirects to next wizard job component\n   */\n  onNextClick(): void {\n    this.armCartesian.activationTimeout = this.valueActTimeout;\n    this.wizardStepperService.updateWorkflowItem(this.armCartesian);\n    if (this.counter   {\n        this.armCartesian.goalPose = [];\n        this.armCartesian.goalPose = responseData;\n        this.goalPose = this.armCartesian.goalPose;\n        this.isDisabledNext = false;\n        console.log(this.armCartesian.goalPose);\n      });\n  }\n}\n\n    \n\n    \n        {{title}}\n\n  Activation Timeout\n  \n    \n      \n      \n      \n        \n        Timeout\n      \n    \n  \n\n\n\n  Goal Position\n  \n\n  \n  \n    \n      my_location\n    \n    {{goalPose}}\n  \n\n\n\n  \n    \n      navigate_before\n    \n    \n    \n      navigate_next\n    \n    \n      navigate_next\n    \n  \n\n\n    \n\n    \n                \n                    ./wizard-arm-cartesian.component.css\n                \n                .example-container {\n  width: 600px;\n  max-width: 100%;\n  margin: 10px 10px 10px 10px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 1rem;\n}\nh1, h2, h3, h4, h5, h6{\n  margin-top:20px;\n  margin-bottom:10px;\n  margin-left: 10px;\n}\n.example-h2 {\n  margin: 10px;\n}\n\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n\n.example-margin {\n  margin: 30px;\n}\n\n.mat-slider-horizontal {\n  width: 100px;\n}\n\n.fxFlex{\n  flex: 100 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}  Activation Timeout                                        Timeout              Goal Position                my_location        {{goalPose}}              navigate_before                  navigate_next              navigate_next      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardArmCartesianComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardArmJoinsComponent.html":{"url":"components/WizardArmJoinsComponent.html","title":"component - WizardArmJoinsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardArmJoinsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts\n\n\n\n    \n        Extends\n    \n    \n                WizardJobComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wizard-arm-joins\n            \n\n            \n                styleUrls\n                ./wizard-arm-joins.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wizard-arm-joins.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                invert\n                            \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                step\n                            \n                            \n                                thumbLabel\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                            \n                                vertical\n                            \n                            \n                                counter\n                            \n                            \n                                    Private\n                                counterSub\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                    Private\n                                statusSub\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onPreviousClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, eventEmitterService: WizardParentStepperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:129\n\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nunsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:67\n\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:92\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:108\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Oberservables\nbefore redirects to \"previous\" wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:139\n\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:20\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invert\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:24\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:28\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            min\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:32\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            step\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:36\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:40\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Arm Joins'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:16\n                            \n                        \n\n                \n                    \n                        displayed titel of the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:44\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vertical\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts:48\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:35\n\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:39\n\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:21\n\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:46\n\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:50\n\n                            \n                        \n\n                \n                    \n                        Subscription for stusSub -> synchronized and shared status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:25\n\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:29\n\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WizardStepperService} from '../wizard-stepper.service';\nimport {WizardJobComponent} from '../wizard-job/wizard-job.component';\nimport {WizardParentStepperService} from '../wizard-parent/wizard-parent-stepper.service';\n\n@Component({\n  selector: 'app-wizard-arm-joins',\n  templateUrl: './wizard-arm-joins.component.html',\n  styleUrls: ['./wizard-arm-joins.component.css']\n})\nexport class WizardArmJoinsComponent extends WizardJobComponent implements OnInit, OnDestroy {\n  /**\n   * displayed titel of the component\n   */\n  title = 'Arm Joins';\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  disabled = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  invert = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  max = 100;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  min = 0;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  step = 1;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  thumbLabel = true;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  value = 50;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  vertical = false;\n\n  constructor(router: Router,\n              wizardStepperService: WizardStepperService,\n              eventEmitterService: WizardParentStepperService) {\n    super(router, wizardStepperService, eventEmitterService);\n  }\n}\n\n    \n\n    \n        {{title}}\n\n  Activation Timeout\n  \n    \n      \n      \n\n      \n        \n        Timeout\n      \n    \n  \n\n\n\n  \n    \n      navigate_before\n    \n    \n    \n      navigate_next\n    \n  \n\n\n    \n\n    \n                \n                    ./wizard-arm-joins.component.css\n                \n                .example-container {\n  width: 600px;\n  max-width: 100%;\n  margin: 10px 10px 10px 10px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 1rem;\n}\nh1, h2, h3, h4, h5, h6{\n  margin-top:20px;\n  margin-bottom:10px;\n  margin-left: 10px;\n}\n.example-h2 {\n  margin: 10px;\n}\n\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n\n.example-margin {\n  margin: 30px;\n}\n\n.mat-slider-horizontal {\n  width: 100px;\n}\n\n.fxFlex{\n  flex: 100 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}  Activation Timeout                                        Timeout                        navigate_before                  navigate_next      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardArmJoinsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardArmTrajectoryComponent.html":{"url":"components/WizardArmTrajectoryComponent.html","title":"component - WizardArmTrajectoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardArmTrajectoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts\n\n\n\n    \n        Extends\n    \n    \n                WizardJobComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wizard-arm-trajectory-movement\n            \n\n            \n                styleUrls\n                ./wizard-arm-trajectory.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wizard-arm-trajectory.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                invert\n                            \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                step\n                            \n                            \n                                thumbLabel\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                            \n                                vertical\n                            \n                            \n                                counter\n                            \n                            \n                                    Private\n                                counterSub\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                    Private\n                                statusSub\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onPreviousClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, eventEmitterService: WizardParentStepperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:129\n\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nunsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:67\n\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:92\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:108\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Oberservables\nbefore redirects to \"previous\" wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:139\n\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:20\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invert\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:24\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:28\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            min\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:32\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            step\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:36\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:40\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Arm Trajectory'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:16\n                            \n                        \n\n                \n                    \n                        displayed titel of the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:44\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vertical\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts:48\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:35\n\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:39\n\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:21\n\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:46\n\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:50\n\n                            \n                        \n\n                \n                    \n                        Subscription for stusSub -> synchronized and shared status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:25\n\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:29\n\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WizardStepperService} from '../wizard-stepper.service';\nimport {WizardJobComponent} from '../wizard-job/wizard-job.component';\nimport {WizardParentStepperService} from '../wizard-parent/wizard-parent-stepper.service';\n\n@Component({\n  selector: 'app-wizard-arm-trajectory-movement',\n  templateUrl: './wizard-arm-trajectory.component.html',\n  styleUrls: ['./wizard-arm-trajectory.component.css']\n})\nexport class WizardArmTrajectoryComponent extends WizardJobComponent implements OnInit, OnDestroy {\n  /**\n   * displayed titel of the component\n   */\n  title = 'Arm Trajectory';\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  disabled = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  invert = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  max = 100;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  min = 0;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  step = 1;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  thumbLabel = true;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  value = 50;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  vertical = false;\n\n  constructor(router: Router,\n              wizardStepperService: WizardStepperService,\n              eventEmitterService: WizardParentStepperService) {\n    super(router, wizardStepperService, eventEmitterService);\n  }\n}\n\n    \n\n    \n        {{title}}\n\n  Activation Timeout\n  \n\n    \n      \n      \n\n      \n        \n        Timeout\n      \n    \n  \n\n\n\n  \n    \n      navigate_before\n    \n    \n    \n      navigate_next\n    \n  \n\n\n    \n\n    \n                \n                    ./wizard-arm-trajectory.component.css\n                \n                .example-container {\n  width: 600px;\n  max-width: 100%;\n  margin: 10px 10px 10px 10px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 1rem;\n}\nh1, h2, h3, h4, h5, h6{\n  margin-top:20px;\n  margin-bottom:10px;\n  margin-left: 10px;\n}\n.example-h2 {\n  margin: 10px;\n}\n\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n\n.example-margin {\n  margin: 30px;\n}\n\n.mat-slider-horizontal {\n  width: 100px;\n}\n\n.fxFlex{\n  flex: 100 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}  Activation Timeout                                        Timeout                        navigate_before                  navigate_next      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardArmTrajectoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardBaseComponent.html":{"url":"components/WizardBaseComponent.html","title":"component - WizardBaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardBaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wizard-stepper/wizard-base/wizard-base.component.ts\n\n\n    \n        Description\n    \n    \n        This component is a Child Component of \"Wizard-Job\".\nIt presents the view of method MoveBase in the configurator (\"Wizard-Parent\").\nTo present and enter values Angular Material Design Components where used in the view\nhttps://material.angular.io/components/categories\n\n    \n\n    \n        Extends\n    \n    \n                WizardJobComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wizard-base\n            \n\n            \n                styleUrls\n                ./wizard-base.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wizard-base.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseMove\n                            \n                            \n                                disabledActTimeout\n                            \n                            \n                                goalPose\n                            \n                            \n                                invertActTimeout\n                            \n                            \n                                isDisabledNext\n                            \n                            \n                                maxActTimeout\n                            \n                            \n                                minActTimeout\n                            \n                            \n                                stepActTimeout\n                            \n                            \n                                thumbLabelActTimeout\n                            \n                            \n                                title\n                            \n                            \n                                valueActTimeout\n                            \n                            \n                                verticalActTimeout\n                            \n                            \n                                counter\n                            \n                            \n                                    Private\n                                counterSub\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                    Private\n                                statusSub\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onGetPostionClick\n                            \n                            \n                                onNextClick\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onPreviousClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, eventEmitterService: WizardParentStepperService, httpRequest: HttpRequestService)\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:68\n                            \n                        \n\n                \n                    \n                            constructor - calls constructor of parent WizardJobComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For redirecting\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Workflow Information\n\n                                                        \n                                                \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Angular Material Stepper View\n\n                                                        \n                                                \n                                                \n                                                        httpRequest\n                                                  \n                                                        \n                                                                        HttpRequestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For getting actual position from robot arm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:87\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook - executed after constructor\noverrides parent ngOninit() declares additional necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onGetPostionClick\n                        \n                        \n                    \n                \n            \n            \n                \nonGetPostionClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:115\n                \n            \n\n\n            \n                \n                    requests actual position form backend and stores the value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:97\n                \n            \n\n\n            \n                \n                    overrides parent onNextClick() - updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:129\n\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nunsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:67\n\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:92\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:108\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Oberservables\nbefore redirects to \"previous\" wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:139\n\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseMove\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseMove\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:28\n                            \n                        \n\n                \n                    \n                        local instance of BaseMove\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabledActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:32\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goalPose\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invertActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:36\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabledNext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:68\n                            \n                        \n\n                \n                    \n                        next button - parameter for Angular Material Button  https://material.angular.io/components/button/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:40\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:44\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:48\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbLabelActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:52\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Base Movement'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:24\n                            \n                        \n\n                \n                    \n                        displayed titel of the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:56\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verticalActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-base/wizard-base.component.ts:60\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:35\n\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:39\n\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:21\n\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:46\n\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:50\n\n                            \n                        \n\n                \n                    \n                        Subscription for stusSub -> synchronized and shared status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:25\n\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:29\n\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WizardStepperService} from '../wizard-stepper.service';\nimport {WizardJobComponent} from '../wizard-job/wizard-job.component';\nimport {BaseMove} from '../../model/base-move.model';\nimport {WizardParentStepperService} from '../wizard-parent/wizard-parent-stepper.service';\nimport {HttpRequestService} from '../../execution/http-request.service';\n/**\n * This component is a Child Component of \"Wizard-Job\".\n *\n * It presents the view of method MoveBase in the configurator (\"Wizard-Parent\").\n * To present and enter values Angular Material Design Components where used in the view\n * {@link https://material.angular.io/components/categories}\n */\n@Component({\n  selector: 'app-wizard-base',\n  templateUrl: './wizard-base.component.html',\n  styleUrls: ['./wizard-base.component.css']\n})\nexport class WizardBaseComponent extends WizardJobComponent implements OnInit, OnDestroy {\n  /**\n   * displayed titel of the component\n   */\n  title = 'Base Movement';\n  /**\n   * local instance of BaseMove\n   */\n  baseMove: BaseMove;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  disabledActTimeout = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  invertActTimeout = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  maxActTimeout = 100;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  minActTimeout = 0;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  stepActTimeout = 1;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  thumbLabelActTimeout = true;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  valueActTimeout = 50;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  verticalActTimeout = false;\n  /*\n   * cartesian coordinates of robot component\n   */\n  goalPose;\n  /**\n   * next button - parameter for Angular Material Button  {@link https://material.angular.io/components/button/overview}\n   */\n  isDisabledNext = true;\n  /**\n   * constructor - calls constructor of parent WizardJobComponent\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   * @param {WizardParentStepperService} eventEmitterService For Sharing Angular Material Stepper View\n   * @param {HttpRequestService} httpRequest For getting actual position from robot arm\n   */\n  constructor(router: Router,\n              wizardStepperService: WizardStepperService,\n              eventEmitterService: WizardParentStepperService,\n              private httpRequest: HttpRequestService) {\n    super(router, wizardStepperService, eventEmitterService);\n  }\n  /**\n   * ngOnInit is a lifecycle hook - executed after constructor\n   *\n   * overrides parent ngOninit() declares additional necessary variables for this component\n   */\n  ngOnInit() {\n    super.ngOnInit();\n    this.baseMove = this.wizardStepperService.getWorkflowItem() as BaseMove;\n    this.valueActTimeout = this.baseMove.activationTimeout;\n    this.goalPose = this.baseMove.goalPose;\n  }\n  /**\n   * overrides parent onNextClick() - updates all necessary variables and Observables\n   * before redirects to next wizard job component\n   */\n  onNextClick(): void {\n    this.baseMove.activationTimeout = this.valueActTimeout;\n    this.wizardStepperService.updateWorkflowItem(this.baseMove);\n    if (this.counter   {\n        this.baseMove.goalPose = [];\n        this.baseMove.goalPose = responseData;\n        this.goalPose = this.baseMove.goalPose;\n        this.isDisabledNext = false;\n        console.log(this.baseMove.goalPose);\n      });\n  }\n  }\n\n    \n\n    \n        {{title}}\n\n  Activation Timeout\n  \n    \n      \n      \n      \n        \n        Timeout\n      \n    \n  \n\n\n\n  Goal Position\n  \n\n  \n  \n    \n      my_location\n    \n    {{goalPose}}\n  \n\n\n\n  \n    \n      navigate_before\n    \n    \n\n    \n      navigate_next\n    \n    \n      navigate_next\n    \n  \n\n\n    \n\n    \n                \n                    ./wizard-base.component.css\n                \n                .example-container {\n  width: 600px;\n  max-width: 100%;\n  margin: 10px 10px 10px 10px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 1rem;\n}\nh1, h2, h3, h4, h5, h6{\n  margin-top:20px;\n  margin-bottom:10px;\n  margin-left: 10px;\n}\n.example-h2 {\n  margin: 10px;\n}\n\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n\n.example-margin {\n  margin: 30px;\n}\n\n.mat-slider-horizontal {\n  width: 100px;\n}\n\n.fxFlex{\n  flex: 100 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}  Activation Timeout                                        Timeout              Goal Position                my_location        {{goalPose}}              navigate_before                  navigate_next              navigate_next      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardBaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardGripperGripComponent.html":{"url":"components/WizardGripperGripComponent.html","title":"component - WizardGripperGripComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardGripperGripComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts\n\n\n    \n        Description\n    \n    \n        This component is a Child Component of \"Wizard-Job\".\nIt presents the view of method GripperGrip in the configurator (\"Wizard-Parent\").\nTo present and enter values Angular Material Design Components where used in the view\nhttps://material.angular.io/components/categories\n\n    \n\n    \n        Extends\n    \n    \n                WizardJobComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wizard-gripper-grip\n            \n\n            \n                styleUrls\n                ./wizard-gripper-grip.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wizard-gripper-grip.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabledActTimeout\n                            \n                            \n                                gripperGrip\n                            \n                            \n                                invertActTimeout\n                            \n                            \n                                maxActTimeout\n                            \n                            \n                                minActTimeout\n                            \n                            \n                                stepActTimeout\n                            \n                            \n                                thumbLabelActTimeout\n                            \n                            \n                                title\n                            \n                            \n                                valueActTimeout\n                            \n                            \n                                verticalActTimeout\n                            \n                            \n                                counter\n                            \n                            \n                                    Private\n                                counterSub\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                    Private\n                                statusSub\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onPreviousClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, eventEmitterService: WizardParentStepperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:59\n                            \n                        \n\n                \n                    \n                            constructor - calls constructor of parent WizardJobComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For redirecting\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Workflow Information\n\n                                                        \n                                                \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Angular Material Stepper View\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:76\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook - executed after constructor\noverrides parent ngOninit() declares additional necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:85\n                \n            \n\n\n            \n                \n                    overrides parent onNextClick() - updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:129\n\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nunsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:67\n\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:92\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:108\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Oberservables\nbefore redirects to \"previous\" wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:139\n\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabledActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:31\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gripperGrip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GripperGrip\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:27\n                            \n                        \n\n                \n                    \n                        local instance of GripperGrip\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invertActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:35\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:39\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:43\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:47\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbLabelActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:51\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Gripper Grip'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:23\n                            \n                        \n\n                \n                    \n                        displayed titel of the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:55\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verticalActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts:59\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:35\n\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:39\n\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:21\n\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:46\n\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:50\n\n                            \n                        \n\n                \n                    \n                        Subscription for stusSub -> synchronized and shared status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:25\n\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:29\n\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WizardStepperService} from '../wizard-stepper.service';\nimport {WizardJobComponent} from '../wizard-job/wizard-job.component';\nimport {GripperGrip} from '../../model/gripper-grip.model';\nimport {WizardParentStepperService} from '../wizard-parent/wizard-parent-stepper.service';\n/**\n * This component is a Child Component of \"Wizard-Job\".\n *\n * It presents the view of method GripperGrip in the configurator (\"Wizard-Parent\").\n * To present and enter values Angular Material Design Components where used in the view\n * {@link https://material.angular.io/components/categories}\n */\n@Component({\n  selector: 'app-wizard-gripper-grip',\n  templateUrl: './wizard-gripper-grip.component.html',\n  styleUrls: ['./wizard-gripper-grip.component.css']\n})\nexport class WizardGripperGripComponent extends WizardJobComponent implements OnInit, OnDestroy {\n  /**\n   * displayed titel of the component\n   */\n  title = 'Gripper Grip';\n  /**\n   * local instance of GripperGrip\n   */\n  gripperGrip: GripperGrip;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  disabledActTimeout = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  invertActTimeout = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  maxActTimeout = 100;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  minActTimeout = 0;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  stepActTimeout = 1;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  thumbLabelActTimeout = true;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  valueActTimeout = 50;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  verticalActTimeout = false;\n  /**\n   * constructor - calls constructor of parent WizardJobComponent\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   * @param {WizardParentStepperService} eventEmitterService For Sharing Angular Material Stepper View\n   */\n  constructor(router: Router,\n              wizardStepperService: WizardStepperService,\n              eventEmitterService: WizardParentStepperService) {\n    super(router, wizardStepperService, eventEmitterService);\n  }\n  /**\n   * ngOnInit is a lifecycle hook - executed after constructor\n   *\n   * overrides parent ngOninit() declares additional necessary variables for this component\n   */\n  ngOnInit() {\n    super.ngOnInit();\n    this.gripperGrip = this.wizardStepperService.getWorkflowItem() as GripperGrip;\n    this.valueActTimeout = this.gripperGrip.activationTimeout;\n  }\n  /**\n   * overrides parent onNextClick() - updates all necessary variables and Observables\n   * before redirects to next wizard job component\n   */\n  onNextClick(): void {\n    this.gripperGrip.activationTimeout = this.valueActTimeout;\n    this.wizardStepperService.updateWorkflowItem(this.gripperGrip);\n    if (this.counter \n    \n\n    \n        {{title}}\n\n  Activation Timeout\n  \n\n    \n      \n      \n\n      \n        \n        Timeout\n      \n    \n  \n\n\n\n  \n\n    \n      navigate_before\n    \n    \n    \n      navigate_next\n    \n  \n\n\n    \n\n    \n                \n                    ./wizard-gripper-grip.component.css\n                \n                .example-container {\n  width: 600px;\n  max-width: 100%;\n  margin: 10px 10px 10px 10px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 1rem;\n}\nh1, h2, h3, h4, h5, h6{\n  margin-top:20px;\n  margin-bottom:10px;\n  margin-left: 10px;\n}\n.example-h2 {\n  margin: 10px;\n}\n\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n\n.example-margin {\n  margin: 30px;\n}\n\n.mat-slider-horizontal {\n  width: 100px;\n}\n\n.fxFlex{\n  flex: 100 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}  Activation Timeout                                        Timeout                        navigate_before                  navigate_next      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardGripperGripComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardGripperReleaseComponent.html":{"url":"components/WizardGripperReleaseComponent.html","title":"component - WizardGripperReleaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardGripperReleaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts\n\n\n    \n        Description\n    \n    \n        This component is a Child Component of \"Wizard-Job\".\nIt presents the view of method GripperRelease in the configurator (\"Wizard-Parent\").\nTo present and enter values Angular Material Design Components where used in the view\nhttps://material.angular.io/components/categories\n\n    \n\n    \n        Extends\n    \n    \n                WizardJobComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wizard-gripper-release\n            \n\n            \n                styleUrls\n                ./wizard-gripper-release.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wizard-gripper-release.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabledActTimeout\n                            \n                            \n                                gripperRelease\n                            \n                            \n                                invertActTimeout\n                            \n                            \n                                maxActTimeout\n                            \n                            \n                                minActTimeout\n                            \n                            \n                                stepActTimeout\n                            \n                            \n                                thumbLabelActTimeout\n                            \n                            \n                                title\n                            \n                            \n                                valueActTimeout\n                            \n                            \n                                verticalActTimeout\n                            \n                            \n                                counter\n                            \n                            \n                                    Private\n                                counterSub\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                    Private\n                                statusSub\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onPreviousClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, eventEmitterService: WizardParentStepperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:59\n                            \n                        \n\n                \n                    \n                            constructor - calls constructor of parent WizardJobComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For redirecting\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Workflow Information\n\n                                                        \n                                                \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Angular Material Stepper View\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:76\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook - executed after constructor\noverrides parent ngOninit() declares additional necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:85\n                \n            \n\n\n            \n                \n                    overrides parent onNextClick() - updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:129\n\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nunsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:67\n\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:92\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:108\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Oberservables\nbefore redirects to \"previous\" wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:139\n\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabledActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:31\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gripperRelease\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GripperRelease\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:27\n                            \n                        \n\n                \n                    \n                        local instance of GripperRelease\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invertActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:35\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:39\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:43\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:47\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbLabelActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:51\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Gripper Release'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:23\n                            \n                        \n\n                \n                    \n                        displayed titel of the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:55\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verticalActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts:59\n                            \n                        \n\n                \n                    \n                        view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:35\n\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:39\n\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:21\n\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:46\n\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:50\n\n                            \n                        \n\n                \n                    \n                        Subscription for stusSub -> synchronized and shared status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:25\n\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:29\n\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WizardStepperService} from '../wizard-stepper.service';\nimport {WizardJobComponent} from '../wizard-job/wizard-job.component';\nimport {GripperRelease} from '../../model/gripper-release.model';\nimport {WizardParentStepperService} from '../wizard-parent/wizard-parent-stepper.service';\n/**\n * This component is a Child Component of \"Wizard-Job\".\n *\n * It presents the view of method GripperRelease in the configurator (\"Wizard-Parent\").\n * To present and enter values Angular Material Design Components where used in the view\n * {@link https://material.angular.io/components/categories}\n */\n@Component({\n  selector: 'app-wizard-gripper-release',\n  templateUrl: './wizard-gripper-release.component.html',\n  styleUrls: ['./wizard-gripper-release.component.css']\n})\nexport class WizardGripperReleaseComponent extends WizardJobComponent implements OnInit, OnDestroy {\n  /**\n   * displayed titel of the component\n   */\n  title = 'Gripper Release';\n  /**\n   * local instance of GripperRelease\n   */\n  gripperRelease: GripperRelease;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  disabledActTimeout = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  invertActTimeout = false;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  maxActTimeout = 100;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  minActTimeout = 0;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  stepActTimeout = 1;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  thumbLabelActTimeout = true;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  valueActTimeout = 50;\n  /**\n   * view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  verticalActTimeout = false;\n  /**\n   * constructor - calls constructor of parent WizardJobComponent\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   * @param {WizardParentStepperService} eventEmitterService For Sharing Angular Material Stepper View\n   */\n  constructor(router: Router,\n              wizardStepperService: WizardStepperService,\n              eventEmitterService: WizardParentStepperService) {\n    super(router, wizardStepperService, eventEmitterService);\n  }\n  /**\n   * ngOnInit is a lifecycle hook - executed after constructor\n   *\n   * overrides parent ngOninit() declares additional necessary variables for this component\n   */\n  ngOnInit() {\n    super.ngOnInit();\n    this.gripperRelease = this.wizardStepperService.getWorkflowItem() as GripperRelease;\n    this.valueActTimeout = this.gripperRelease.activationTimeout;\n  }\n  /**\n   * overrides parent onNextClick() - updates all necessary variables and Observables\n   * before redirects to next wizard job component\n   */\n  onNextClick(): void {\n    this.gripperRelease.activationTimeout = this.valueActTimeout;\n    this.wizardStepperService.updateWorkflowItem(this.gripperRelease);\n    if (this.counter \n    \n\n    \n        {{title}}\n\n  Activation Timeout\n  \n\n    \n      \n      \n\n      \n        \n        Timeout\n      \n    \n  \n\n\n\n  \n    \n      navigate_before\n    \n    \n    \n      navigate_next\n    \n  \n\n\n    \n\n    \n                \n                    ./wizard-gripper-release.component.css\n                \n                .example-container {\n  width: 600px;\n  max-width: 100%;\n  margin: 10px 10px 10px 10px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 1rem;\n}\nh1, h2, h3, h4, h5, h6{\n  margin-top:20px;\n  margin-bottom:10px;\n  margin-left: 10px;\n}\n\n.example-h2 {\n  margin: 10px;\n}\n\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n\n.example-margin {\n  margin: 30px;\n}\n\n.mat-slider-horizontal {\n  width: 100px;\n}\n\n.fxFlex{\n  flex: 100 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}  Activation Timeout                                        Timeout                        navigate_before                  navigate_next      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardGripperReleaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardJobComponent.html":{"url":"components/WizardJobComponent.html","title":"component - WizardJobComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardJobComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wizard-stepper/wizard-job/wizard-job.component.ts\n\n\n    \n        Description\n    \n    \n        This component is the Parent Component of all \"Wizard\" Components e.g. WizardGripperGripComponent. It contains\nall basic functionalities, which may be overrided by the Child Components\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wizard-job\n            \n\n            \n                styleUrls\n                ./wizard-job.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wizard-job.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                counter\n                            \n                            \n                                    Private\n                                counterSub\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                    Private\n                                statusSub\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onPreviousClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, eventEmitterService: WizardParentStepperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:50\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For redirecting\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Workflow Information\n\n                                                        \n                                                \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Angular Material Stepper View\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:129\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nunsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:67\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:92\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:108\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Oberservables\nbefore redirects to \"previous\" wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:139\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:35\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:39\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:21\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:46\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:50\n                            \n                        \n\n                \n                    \n                        Subscription for stusSub -> synchronized and shared status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:25\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-job/wizard-job.component.ts:29\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WizardStepperService} from '../wizard-stepper.service';\nimport {Subscription} from 'rxjs';\nimport {Workflow} from '../../model/workflow.model';\nimport {WizardParentStepperService} from '../wizard-parent/wizard-parent-stepper.service';\n\n/**\n * This component is the Parent Component of all \"Wizard\" Components e.g. WizardGripperGripComponent. It contains\n * all basic functionalities, which may be overrided by the Child Components\n */\n@Component({\n  selector: 'app-wizard-job',\n  templateUrl: './wizard-job.component.html',\n  styleUrls: ['./wizard-job.component.css']\n})\nexport class WizardJobComponent implements OnInit, OnDestroy {\n  /**\n   * string used for routing/redirecting\n   */\n  link = 'wizard/';\n  /**\n   * locally stored workflow\n   */\n  workflow: Workflow;\n  /**\n   * Subscription for observed workflowSub -> synchronized and shared workflow\n   */\n  private workflowSub: Subscription;\n  /**\n   * locally stored counter\n   *\n   * index for navigating through wizard\n   */\n  counter: number;\n  /**\n   * Subscription for counterSub -> synchronized and shared counter\n   */\n  private counterSub: Subscription;\n\n  /**\n   * locally stored status e.g. 'create'\n   *\n   * important to navigate through wizard via back and forward buttons\n   */\n  status: string;\n  /**\n   * Subscription for stusSub -> synchronized and shared status\n   */\n  private statusSub: Subscription;\n\n  /**\n   * constructor\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   * @param {WizardParentStepperService} eventEmitterService For Sharing Angular Material Stepper View\n   */\n  constructor(protected router: Router,\n              protected wizardStepperService: WizardStepperService,\n              protected eventEmitterService: WizardParentStepperService  ) { }\n  /**\n   * ngOnInit is a lifecycle hook\n   * - executed after constructor\n   *\n   * declaration of all necessary variables for this component\n   */\n  ngOnInit() {\n    this.counterSub = this.wizardStepperService.getCounterListener()\n      .subscribe(counter => {\n        this.counter = counter;\n      });\n    this.workflowSub = this.wizardStepperService.getWorkflowListener()\n      .subscribe(workflow => {\n        this.workflow = workflow;\n      });\n    this.statusSub = this.wizardStepperService.getStatusListener()\n      .subscribe(data => {\n        this.status = data;\n        console.log(this.status);\n      });\n    this.status = this.wizardStepperService.getStatus();\n    this.workflow = this.wizardStepperService.getWorkflow();\n    this.counter = this.wizardStepperService.getCounter();\n    console.log(this.status);\n    console.log(this.counter);\n    console.log(this.workflow);\n  }\n  /**\n   * updates all necessary variables and Observables\n   * before redirects to next wizard job component\n   */\n  onNextClick(): void {\n    if (this.counter = 0) {\n      this.selectNextJob(this.workflow.getJobName(this.counter));\n      this.router.navigate([this.link]);\n    } else if (this.status === 'create') {\n      this.link = 'jobs';\n      this.router.navigate([this.link]);\n      this.eventEmitterService.onStepperBackClick();\n    } else {\n      this.link = '';\n      this.router.navigate([this.link]);\n      this.eventEmitterService.onStepperBackClick();\n    }\n  }\n\n  /**\n   * ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\n   *\n   * unsubscribes Subscriptions\n   */\n  ngOnDestroy() {\n    this.counterSub.unsubscribe();\n    this.workflowSub.unsubscribe();\n    this.statusSub.unsubscribe();\n    console.log('Destroy Job ausgeführt');\n  }\n  /**\n   * stores 1st job's routing-link under link\n   * @param {string} job Name of 1st job in selected workflow\n   */\n  selectNextJob(job: string) {\n    this.link = 'wizard/';\n    switch (job) {\n      /**\n       * enter new case for 'NewMethod' with 'new_method_path\n       */\n      case 'NewMethod': {\n        this.link += 'new_method_path';\n        break;\n      }\n      case 'GripperGrip': {\n        this.link += 'gripper_grip';\n        break;\n      }\n      case 'MoveArmOnTrajectoryWorkflow': {\n        this.link += 'arm_trajectory';\n        break;\n      }\n      case 'CustomWorkflow': {\n        this.link += 'arm_trajectory';\n        break;\n      }\n      case 'MoveArmJointsWorkflow': {\n        this.link += 'arm_joints';\n        break;\n      }\n      case 'BaseMove': {\n        this.link += 'base';\n        break;\n      }\n      case 'ArmCartesian': {\n        this.link += 'arm_cartesian';\n        break;\n      }\n      case 'GripperRelease': {\n        this.link += 'gripper_release';\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n    console.log(this.link);\n  }\n}\n\n    \n\n    \n        wizard-job works!\n\n    \n\n    \n                \n                    ./wizard-job.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'wizard-job works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardJobComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardNewMethodComponent.html":{"url":"components/WizardNewMethodComponent.html","title":"component - WizardNewMethodComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardNewMethodComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts\n\n\n    \n        Description\n    \n    \n        This component is a Child Component of \"Wizard-Job\".\nIt presents the view of new the method to be added in the configurator (\"Wizard-Parent\").\nE.g. to present and enter values Angular Material Design Components where used in the view\nhttps://material.angular.io/components/categories\n\n    \n\n    \n        Extends\n    \n    \n                WizardJobComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wizard-new-method\n            \n\n            \n                styleUrls\n                ./wizard-new-method.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wizard-new-method.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabledActTimeout\n                            \n                            \n                                goalPose\n                            \n                            \n                                invertActTimeout\n                            \n                            \n                                isDisabledNext\n                            \n                            \n                                maxActTimeout\n                            \n                            \n                                minActTimeout\n                            \n                            \n                                newMethod\n                            \n                            \n                                stepActTimeout\n                            \n                            \n                                thumbLabelActTimeout\n                            \n                            \n                                title\n                            \n                            \n                                valueActTimeout\n                            \n                            \n                                verticalActTimeout\n                            \n                            \n                                counter\n                            \n                            \n                                    Private\n                                counterSub\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                    Private\n                                statusSub\n                            \n                            \n                                workflow\n                            \n                            \n                                    Private\n                                workflowSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onGetPostionClick\n                            \n                            \n                                onNextClick\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextClick\n                            \n                            \n                                onPreviousClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, eventEmitterService: WizardParentStepperService, httpRequest: HttpRequestService)\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:71\n                            \n                        \n\n                \n                    \n                            constructor - calls constructor of parent WizardJobComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For redirecting\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Workflow Information\n\n                                                        \n                                                \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Angular Material Stepper View\n\n                                                        \n                                                \n                                                \n                                                        httpRequest\n                                                  \n                                                        \n                                                                        HttpRequestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For getting actual position from robot arm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:90\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook - executed after constructor\noverrides parent ngOninit() declares additional necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onGetPostionClick\n                        \n                        \n                    \n                \n            \n            \n                \nonGetPostionClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:118\n                \n            \n\n\n            \n                \n                    requests actual position form backend and stores the value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:100\n                \n            \n\n\n            \n                \n                    overrides parent onNextClick() - updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:129\n\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook - is called when a directive, pipe, or service is destroyed\nunsubscribes Subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:67\n\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:92\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Observables\nbefore redirects to next wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPreviousClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:108\n\n                \n            \n\n\n            \n                \n                    updates all necessary variables and Oberservables\nbefore redirects to \"previous\" wizard job component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WizardJobComponent\n\n                \n            \n            \n                \n                        Defined in         WizardJobComponent:139\n\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of 1st job in selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabledActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:35\n                            \n                        \n\n                \n                    \n                        e.g. view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goalPose\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invertActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:39\n                            \n                        \n\n                \n                    \n                        e.g. view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabledNext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:71\n                            \n                        \n\n                \n                    \n                        next button - parameter for Angular Material Button  https://material.angular.io/components/button/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:43\n                            \n                        \n\n                \n                    \n                        e.g. view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:47\n                            \n                        \n\n                \n                    \n                        e.g. view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMethod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewMethod\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:31\n                            \n                        \n\n                \n                    \n                        local instance of NewMethod\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:51\n                            \n                        \n\n                \n                    \n                        e.g. view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbLabelActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:55\n                            \n                        \n\n                \n                    \n                        e.g. view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'New Method'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:27\n                            \n                        \n\n                \n                    \n                        displayed titel of the new component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:59\n                            \n                        \n\n                \n                    \n                        e.g. view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verticalActTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts:63\n                            \n                        \n\n                \n                    \n                        e.g. view parameter for Angular Material Slider https://material.angular.io/components/slider/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:35\n\n                            \n                        \n\n                \n                    \n                        locally stored counter\nindex for navigating through wizard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:39\n\n                            \n                        \n\n                \n                    \n                        Subscription for counterSub -> synchronized and shared counter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wizard/'\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:21\n\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:46\n\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:50\n\n                            \n                        \n\n                \n                    \n                        Subscription for stusSub -> synchronized and shared status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:25\n\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WizardJobComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         WizardJobComponent:29\n\n                            \n                        \n\n                \n                    \n                        Subscription for observed workflowSub -> synchronized and shared workflow\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WizardStepperService} from '../wizard-stepper.service';\nimport {WizardJobComponent} from '../wizard-job/wizard-job.component';\nimport {WizardParentStepperService} from '../wizard-parent/wizard-parent-stepper.service';\nimport {HttpRequestService} from '../../execution/http-request.service';\nimport {NewMethod} from '../../model/new-method.model';\n/**\n * This component is a Child Component of \"Wizard-Job\".\n *\n * It presents the view of new the method to be added in the configurator (\"Wizard-Parent\").\n * E.g. to present and enter values Angular Material Design Components where used in the view\n * {@link https://material.angular.io/components/categories}\n */\n@Component({\n  selector: 'app-wizard-new-method',\n  templateUrl: './wizard-new-method.component.html',\n  styleUrls: ['./wizard-new-method.component.css']\n})\nexport class WizardNewMethodComponent extends WizardJobComponent implements OnInit,  OnDestroy {\n  /**\n   * displayed titel of the new component\n   */\n  title = 'New Method';\n  /**\n   * local instance of NewMethod\n   */\n  newMethod: NewMethod;\n  /**\n   * e.g. view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  disabledActTimeout = false;\n  /**\n   * e.g. view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  invertActTimeout = false;\n  /**\n   * e.g. view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  maxActTimeout = 100;\n  /**\n   * e.g. view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  minActTimeout = 0;\n  /**\n   * e.g. view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  stepActTimeout = 1;\n  /**\n   * e.g. view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  thumbLabelActTimeout = true;\n  /**\n   * e.g. view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  valueActTimeout = 50;\n  /**\n   * e.g. view parameter for Angular Material Slider {@link https://material.angular.io/components/slider/overview}\n   */\n  verticalActTimeout = false;\n  /*\n   * cartesian coordinates of robot component\n   */\n  goalPose;\n  /**\n   * next button - parameter for Angular Material Button  {@link https://material.angular.io/components/button/overview}\n   */\n  isDisabledNext = true;\n  /**\n   * constructor - calls constructor of parent WizardJobComponent\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   * @param {WizardParentStepperService} eventEmitterService For Sharing Angular Material Stepper View\n   * @param {HttpRequestService} httpRequest For getting actual position from robot arm\n   */\n  constructor(router: Router,\n              wizardStepperService: WizardStepperService,\n              eventEmitterService: WizardParentStepperService,\n              private httpRequest: HttpRequestService) {\n    super(router, wizardStepperService, eventEmitterService);\n  }\n  /**\n   * ngOnInit is a lifecycle hook - executed after constructor\n   *\n   * overrides parent ngOninit() declares additional necessary variables for this component\n   */\n  ngOnInit() {\n    super.ngOnInit();\n    this.newMethod = this.wizardStepperService.getWorkflowItem() as NewMethod;\n    this.valueActTimeout = this.newMethod.activationTimeout;\n    this.goalPose = this.newMethod.goalPose;\n  }\n  /**\n   * overrides parent onNextClick() - updates all necessary variables and Observables\n   * before redirects to next wizard job component\n   */\n  onNextClick(): void {\n    this.newMethod.activationTimeout = this.valueActTimeout;\n    this.wizardStepperService.updateWorkflowItem(this.newMethod);\n    if (this.counter   {\n        this.newMethod.goalPose = [];\n        this.newMethod.goalPose = responseData;\n        this.goalPose = this.newMethod.goalPose;\n        this.isDisabledNext = false;\n        console.log(this.newMethod.goalPose);\n      });\n  }\n}\n\n    \n\n    \n        {{title}}\n\n  Activation Timeout\n  \n    \n      \n      \n      \n        \n        Timeout\n      \n    \n  \n\n\n\n  Goal Position\n  \n\n  \n  \n    \n      my_location\n    \n    {{goalPose}}\n  \n\n\n\n  \n    \n      navigate_before\n    \n    \n    \n      navigate_next\n    \n    \n      navigate_next\n    \n  \n\n\n    \n\n    \n                \n                    ./wizard-new-method.component.css\n                \n                .example-container {\n  width: 600px;\n  max-width: 100%;\n  margin: 10px 10px 10px 10px;\n  display: inline-block;\n  vertical-align: top;\n  padding: 1rem;\n}\nh1, h2, h3, h4, h5, h6{\n  margin-top:20px;\n  margin-bottom:10px;\n  margin-left: 10px;\n}\n.example-h2 {\n  margin: 10px;\n}\n\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n\n.example-margin {\n  margin: 30px;\n}\n\n.mat-slider-horizontal {\n  width: 100px;\n}\n\n.fxFlex{\n  flex: 100 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}  Activation Timeout                                        Timeout              Goal Position                my_location        {{goalPose}}              navigate_before                  navigate_next              navigate_next      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardNewMethodComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardParentComponent.html":{"url":"components/WizardParentComponent.html","title":"component - WizardParentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardParentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts\n\n\n    \n        Description\n    \n    \n        This component is the ParentView in the \"Workflow Configurator\".\nThe view of the component contains the \"wizard-stepper\" https://material.angular.io/components/stepper/overview\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }\n}\n                \n            \n\n\n            \n                selector\n                app-wizard-parent\n            \n\n            \n                styleUrls\n                ./wizard-parent.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wizard-parent.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stepper\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                goForward\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventEmitterService: WizardParentStepperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts:29\n                            \n                        \n\n                \n                    \n                            constructor needs eventEmitterService for\nAngular Material Stepper https://material.angular.io/components/stepper/overview\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventEmitterService\n                                                  \n                                                        \n                                                                        WizardParentStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goBack\n                        \n                        \n                    \n                \n            \n            \n                \ngoBack(stepper: MatStepper)\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts:80\n                \n            \n\n\n            \n                \n                    resets stepper\nAngular Material Stepper https://material.angular.io/components/stepper/overview\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stepper\n                                    \n                                            MatStepper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goForward\n                        \n                        \n                    \n                \n            \n            \n                \ngoForward(stepper: MatStepper)\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts:89\n                \n            \n\n\n            \n                \n                    checks next step of stepper and sets current step true\nAngular Material Stepper https://material.angular.io/components/stepper/overview\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stepper\n                                    \n                                            MatStepper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts:68\n                \n            \n\n\n            \n                \n                    ngOnDestroy is a lifecycle hook\nis called when a directive, pipe, or service is destroyed\nUse for any custom cleanup that needs to occure when the instance is destroyed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts:46\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\nexecuted after constructor\ninvokes next and back function of\nAngular Material Stepper https://material.angular.io/components/stepper/overview\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset(stepper: MatStepper)\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts:106\n                \n            \n\n\n            \n                \n                    resets stepper\nAngular Material Stepper https://material.angular.io/components/stepper/overview\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stepper\n                                    \n                                            MatStepper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('stepper', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts:29\n                            \n                        \n\n                \n                    \n                        Angular Material Stepper https://material.angular.io/components/stepper/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Workflow Configurator'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts:25\n                            \n                        \n\n                \n                    \n                        titel in view\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {STEPPER_GLOBAL_OPTIONS} from '@angular/cdk/stepper';\nimport { MatStepper } from '@angular/material';\nimport {WizardParentStepperService} from './wizard-parent-stepper.service';\n\n/**\n * This component is the ParentView in the \"Workflow Configurator\".\n * The view of the component contains the \"wizard-stepper\" {@link https://material.angular.io/components/stepper/overview}\n */\n@Component({\n  selector: 'app-wizard-parent',\n  templateUrl: './wizard-parent.component.html',\n  styleUrls: ['./wizard-parent.component.css'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue:\n      {displayDefaultIndicatorType: false}\n  }]\n})\nexport class WizardParentComponent implements OnInit, OnDestroy {\n\n  /**\n   * titel in view\n   */\n  title = 'Workflow Configurator';\n  /**\n   * Angular Material Stepper {@link https://material.angular.io/components/stepper/overview}\n   */\n  @ViewChild('stepper', {static: true}) stepper: MatStepper;\n\n  /**\n   * constructor needs eventEmitterService for\n   * Angular Material Stepper {@link https://material.angular.io/components/stepper/overview}\n   * @param {WizardParentStepperService} eventEmitterService\n   */\n  constructor(private eventEmitterService: WizardParentStepperService) {\n  }\n\n  /**\n   * ngOnInit is a lifecycle hook\n   * executed after constructor\n   *\n   * invokes next and back function of\n   * Angular Material Stepper {@link https://material.angular.io/components/stepper/overview}\n   */\n  ngOnInit() {\n    console.log(this.eventEmitterService.subsNextVar);\n      this.eventEmitterService.subsNextVar = this.eventEmitterService.invokeNextFunction\n        .subscribe((name: string) => {\n        this.goForward(this.stepper);\n        console.log(this.stepper);\n      });\n      this.eventEmitterService.subsBackVar = this.eventEmitterService.invokeBackFunction\n        .subscribe((name: string) => {\n          this.goBack(this.stepper);\n          console.log(this.stepper);\n        });\n    console.log(this.eventEmitterService.subsNextVar);\n    console.log('OnInit wurde ausgführt');\n  }\n  /**\n   * ngOnDestroy is a lifecycle hook\n   *\n   * is called when a directive, pipe, or service is destroyed\n   *\n   * Use for any custom cleanup that needs to occure when the instance is destroyed\n   */\n  ngOnDestroy() {\n    this.eventEmitterService.subsNextVar.unsubscribe();\n    this.eventEmitterService.subsBackVar.unsubscribe();\n    this.reset(this.stepper);\n    console.log('OnDestroy wurde ausgeführt');\n  }\n  /**\n   * resets stepper\n   *\n   * Angular Material Stepper {@link https://material.angular.io/components/stepper/overview}\n   * @param {MatStepper} stepper\n   */\n  goBack(stepper: MatStepper) {\n    stepper.reset();\n    console.log('GoBAck wurde ausgefürht');\n  }\n  /**\n   * checks next step of stepper and sets current step true\n   * Angular Material Stepper {@link https://material.angular.io/components/stepper/overview}\n   * @param {MatStepper} stepper\n   */\n  goForward(stepper: MatStepper) {\n    if (stepper.selectedIndex  {\n        stepper.next();\n      }, 1);\n    } else if (stepper.selectedIndex === 2) {\n      stepper.selected.completed = true;\n    }\n    console.log('Forward wurde ausgefürht');\n  }\n  /**\n   * resets stepper\n   *\n   * Angular Material Stepper {@link https://material.angular.io/components/stepper/overview}\n   * @param {MatStepper} stepper\n   */\n  reset(stepper: MatStepper) {\n    stepper.reset();\n  }\n\n}\n\n    \n\n    \n        \n\n   settings \n  \n  {{title}}\n  \n\n\n\n\n  \n  \n  \n  \n  \n  \n  \n  \n    call_end\n  \n  \n    forum\n  \n\n\n\n\n    \n\n    \n                \n                    ./wizard-parent.component.css\n                \n                ::ng-deep .mat-horizontal-stepper-header{\n  pointer-events: none !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   settings     {{title}}                      call_end        forum  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardParentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WizardParentStepperService.html":{"url":"injectables/WizardParentStepperService.html","title":"injectable - WizardParentStepperService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WizardParentStepperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/wizard-stepper/wizard-parent/wizard-parent-stepper.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is only for the Angular Material Stepper https://material.angular.io/components/stepper/overview\nThe service changes the stepper's property and  keeps them synchronized\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                invokeBackFunction\n                            \n                            \n                                invokeNextFunction\n                            \n                            \n                                subsBackVar\n                            \n                            \n                                subsNextVar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onStepperBackClick\n                            \n                            \n                                onStepperNextClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-parent/wizard-parent-stepper.service.ts:28\n                            \n                        \n\n                \n                    \n                            default constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onStepperBackClick\n                        \n                        \n                    \n                \n            \n            \n                \nonStepperBackClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent-stepper.service.ts:44\n                \n            \n\n\n            \n                \n                    to go one step back in stepper\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onStepperNextClick\n                        \n                        \n                    \n                \n            \n            \n                \nonStepperNextClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent-stepper.service.ts:38\n                \n            \n\n\n            \n                \n                    to go to next step in stepper\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeBackFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent-stepper.service.ts:20\n                            \n                        \n\n                \n                    \n                        EventEmitter for Back\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invokeNextFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent-stepper.service.ts:16\n                            \n                        \n\n                \n                    \n                        EventEmitter for Next\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsBackVar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent-stepper.service.ts:28\n                            \n                        \n\n                \n                    \n                        Subscription for Back\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subsNextVar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-parent/wizard-parent-stepper.service.ts:24\n                            \n                        \n\n                \n                    \n                        Subscription for Next\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\n/**\n * This service is only for the Angular Material Stepper {@link https://material.angular.io/components/stepper/overview}\n *\n * The service changes the stepper's property and  keeps them synchronized\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WizardParentStepperService {\n  /**\n   * EventEmitter for Next\n   */\n  invokeNextFunction = new EventEmitter();\n  /**\n   * EventEmitter for Back\n   */\n  invokeBackFunction = new EventEmitter();\n  /**\n   * Subscription for Next\n   */\n  subsNextVar: Subscription;\n  /**\n   * Subscription for Back\n   */\n  subsBackVar: Subscription;\n\n  /**\n   * default constructor\n   */\n  constructor() { }\n\n  /**\n   * to go to next step in stepper\n   */\n  onStepperNextClick() {\n    this.invokeNextFunction.emit();\n  }\n  /**\n   * to go one step back in stepper\n   */\n  onStepperBackClick() {\n    this.invokeBackFunction.emit();\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WizardStepperService.html":{"url":"injectables/WizardStepperService.html","title":"injectable - WizardStepperService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WizardStepperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/wizard-stepper/wizard-stepper.service.ts\n        \n\n            \n                Description\n            \n            \n                this service keeps\n\nworkflow (list of jobs with all parameters)\ncounter (index of current job in workflwo displayed)\njobs (list of job names in workflow)\n\nsynchronized\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                counter\n                            \n                            \n                                    Private\n                                counterListener\n                            \n                            \n                                    Private\n                                jobs\n                            \n                            \n                                    Private\n                                jobsUpdated\n                            \n                            \n                                    Private\n                                status\n                            \n                            \n                                    Private\n                                statusListener\n                            \n                            \n                                    Private\n                                workflow\n                            \n                            \n                                    Private\n                                workflowListener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseCount\n                            \n                            \n                                getCounter\n                            \n                            \n                                getCounterListener\n                            \n                            \n                                getJobs\n                            \n                            \n                                getJobsListener\n                            \n                            \n                                getStatus\n                            \n                            \n                                getStatusListener\n                            \n                            \n                                getWorkflow\n                            \n                            \n                                getWorkflowItem\n                            \n                            \n                                getWorkflowListener\n                            \n                            \n                                increaseCount\n                            \n                            \n                                updateCount\n                            \n                            \n                                updateJob\n                            \n                            \n                                updateStatus\n                            \n                            \n                                updateWorkflow\n                            \n                            \n                                updateWorkflowItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/wizard-stepper/wizard-stepper.service.ts:50\n                            \n                        \n\n                \n                    \n                            default constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decreaseCount\n                        \n                        \n                    \n                \n            \n            \n                \ndecreaseCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:116\n                \n            \n\n\n            \n                \n                    decreases counterListener\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCounter\n                        \n                        \n                    \n                \n            \n            \n                \ngetCounter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:104\n                \n            \n\n\n            \n                \n                    Getter for locally stored counter\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The locally stored counter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCounterListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetCounterListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:97\n                \n            \n\n\n            \n                \n                    Getter for counterListener from Observable\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The counterListener from Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getJobs\n                        \n                        \n                    \n                \n            \n            \n                \ngetJobs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:138\n                \n            \n\n\n            \n                \n                    Getter for locally store jobs\n\n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        The locally stored jobs\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getJobsListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetJobsListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:131\n                \n            \n\n\n            \n                \n                    Getter for jobsUpdated from Observable\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The jobsUpdated from Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStatus\n                        \n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:160\n                \n            \n\n\n            \n                \n                    Getter for locally stored status\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The locally stored status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStatusListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetStatusListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:153\n                \n            \n\n\n            \n                \n                    Getter for statusListener from Observable\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The statusListener from Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWorkflow\n                        \n                        \n                    \n                \n            \n            \n                \ngetWorkflow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:66\n                \n            \n\n\n            \n                \n                    Getter for locally stored workflow\n\n\n                    \n                    \n                    \n                        Returns :         Workflow\n\n                    \n                    \n                        The locally stored workflow\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWorkflowItem\n                        \n                        \n                    \n                \n            \n            \n                \ngetWorkflowItem()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Base\n\n                    \n                    \n                        The locally stored \"current\" job in workflowlsit\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWorkflowListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetWorkflowListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:59\n                \n            \n\n\n            \n                \n                    Getter for workflowListener from Observable\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The workflowListener from Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            increaseCount\n                        \n                        \n                    \n                \n            \n            \n                \nincreaseCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:110\n                \n            \n\n\n            \n                \n                    increases counterListener\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCount\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCount(counter: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:123\n                \n            \n\n\n            \n                \n                    Setter for local and observed counter resp. counterListener\n\n@param {number} counter\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    counter\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateJob\n                        \n                        \n                    \n                \n            \n            \n                \nupdateJob(jobs: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:145\n                \n            \n\n\n            \n                \n                    Setter for local and observed jobs resp. jobsUpdated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jobs\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateStatus\n                        \n                        \n                    \n                \n            \n            \n                \nupdateStatus(status: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:167\n                \n            \n\n\n            \n                \n                    Setter for local and observed status\n\n@param {string} status\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateWorkflow\n                        \n                        \n                    \n                \n            \n            \n                \nupdateWorkflow(workflow: Workflow)\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:80\n                \n            \n\n\n            \n                \n                    Setter for local and observed workflow resp. workflowListener\n\n@param {Workflow} workflow\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workflow\n                                    \n                                                Workflow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateWorkflowItem\n                        \n                        \n                    \n                \n            \n            \n                \nupdateWorkflowItem(item: Base)\n                \n            \n\n\n            \n                \n                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:89\n                \n            \n\n\n            \n                \n                    Setter for local and observed jobs\n\n@param {Base} item\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Base\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:22\n                            \n                        \n\n                \n                    \n                        index of current displayed job\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counterListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:26\n                            \n                        \n\n                \n                    \n                        listens current index of displayed job\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            jobs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:38\n                            \n                        \n\n                \n                    \n                        name array jobs in workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            jobsUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:42\n                            \n                        \n\n                \n                    \n                        listen to update of jobs array\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:46\n                            \n                        \n\n                \n                    \n                        which status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:50\n                            \n                        \n\n                \n                    \n                        status listener\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:30\n                            \n                        \n\n                \n                    \n                        locally Workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            workflowListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/wizard-stepper/wizard-stepper.service.ts:34\n                            \n                        \n\n                \n                    \n                        Workflow Listener\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {Workflow} from '../model/workflow.model';\nimport {Base} from '../model/base.model';\n\n/**\n * this service keeps\n * 1. workflow (list of jobs with all parameters)\n * 2. counter (index of current job in workflwo displayed)\n * 3. jobs (list of job names in workflow)\n *\n * synchronized\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class WizardStepperService {\n  /**\n   * index of current displayed job\n   */\n  private counter: number;\n  /**\n   * listens current index of displayed job\n   */\n  private counterListener = new Subject();\n  /**\n   * locally Workflow\n   */\n  private workflow: Workflow;\n  /**\n   * Workflow Listener\n   */\n  private workflowListener = new Subject();\n  /**\n   * name array jobs in workflow\n   */\n  private jobs: string[] = [];\n  /**\n   * listen to update of jobs array\n   */\n  private jobsUpdated = new Subject();\n  /**\n   * which status\n   */\n  private status: string;\n  /**\n   * status listener\n   */\n  private statusListener  = new Subject();\n  /**\n   * default constructor\n   */\n  constructor() { }\n  /**\n   * Getter for workflowListener from Observable\n   * @returns The workflowListener from Observable\n   */\n  getWorkflowListener(): Observable {\n    return  this.workflowListener.asObservable();\n  }\n  /**\n   * Getter for locally stored workflow\n   * @returns The locally stored workflow\n   */\n  getWorkflow(): Workflow {\n    return this.workflow;\n  }\n  /**\n   * @returns The locally stored \"current\" job in workflowlsit\n   */\n  getWorkflowItem(): Base {\n    console.log(this.workflow.getCurrentJob(this.counter));\n    return this.workflow.getCurrentJob(this.counter);\n  }\n  /**\n   * Setter for local and observed workflow resp. workflowListener\n   *  * @param {Workflow} workflow\n   */\n  updateWorkflow(workflow: Workflow) {\n    this.workflow = workflow;\n    this.workflowListener.next(this.workflow);\n    console.log(this.workflow);\n  }\n  /**\n   * Setter for local and observed jobs\n   *  * @param {Base} item\n   */\n  updateWorkflowItem(item: Base) {\n    this.workflow.updateJobs(item, this.counter);\n    this.workflowListener.next(this.workflow);\n  }\n  /**\n   * Getter for counterListener from Observable\n   * @returns The counterListener from Observable\n   */\n  getCounterListener(): Observable {\n    return this.counterListener.asObservable();\n  }\n  /**\n   * Getter for locally stored counter\n   * @returns The locally stored counter\n   */\n  getCounter(): number {\n    return this.counter;\n  }\n  /**\n   * increases counterListener\n   */\n  increaseCount() {\n    this.counterListener.next(++ this.counter);\n  }\n  /**\n   * decreases counterListener\n   */\n  decreaseCount() {\n    this.counterListener.next(-- this.counter);\n  }\n  /**\n   * Setter for local and observed counter resp. counterListener\n   *  * @param {number} counter\n   */\n  updateCount(counter: number) {\n    this.counter = counter;\n    this.counterListener.next(this.counter);\n  }\n  /**\n   * Getter for jobsUpdated from Observable\n   * @returns The jobsUpdated from Observable\n   */\n  getJobsListener(): Observable {\n    return this.jobsUpdated.asObservable();\n  }\n  /**\n   * Getter for locally store jobs\n   * @returns The locally stored jobs\n   */\n  getJobs(): string[] {\n    return this.jobs;\n  }\n  /**\n   * Setter for local and observed jobs resp. jobsUpdated\n   * @param {string[]} jobs\n   */\n  updateJob(jobs: string[]) {\n    this.jobs = jobs;\n    this.jobsUpdated.next([...this.jobs]);\n  }\n  /**\n   * Getter for statusListener from Observable\n   * @returns The statusListener from Observable\n   */\n  getStatusListener(): Observable {\n    return this.statusListener.asObservable();\n  }\n  /**\n   * Getter for locally stored status\n   * @returns The locally stored status\n   */\n  getStatus(): string {\n    return this.status;\n  }\n  /**\n   * Setter for local and observed status\n   *  * @param {string} status\n   */\n  updateStatus(status: string) {\n    this.status = status;\n    this.statusListener.next(this.status);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Workflow.html":{"url":"classes/Workflow.html","title":"class - Workflow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Workflow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/workflow.model.ts\n        \n\n            \n                Description\n            \n            \n                This class is a model for a workflow.\nThis class contains all properties, methods to handle a worklow internally.\nE.g. adding selected jobs to the workflow\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _created_at\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _jobsObjects\n                            \n                            \n                                    Private\n                                _name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addJobs\n                            \n                            \n                                addJobsFormWorkflow\n                            \n                            \n                                getCurrentJob\n                            \n                            \n                                getJobName\n                            \n                            \n                                getJobs\n                            \n                            \n                                getJobsLength\n                            \n                            \n                                updateJobs\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    id\n                                \n                                \n                                    created_at\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/workflow.model.ts:33\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The name of the workflow\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/workflow.model.ts:29\n                            \n                        \n\n                \n                    \n                        creation date of workflow ind DB (backend)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/workflow.model.ts:21\n                            \n                        \n\n                \n                    \n                        id of workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _jobsObjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Base[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/workflow.model.ts:33\n                            \n                        \n\n                \n                    \n                        containing jobs of workflow. Array of jobs in this workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/workflow.model.ts:25\n                            \n                        \n\n                \n                    \n                        name of workflow\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addJobs\n                        \n                        \n                    \n                \n            \n            \n                \naddJobs(jobsName: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/workflow.model.ts:52\n                \n            \n\n\n            \n                \n                    adds all jobs in list to _jobsObjects including instancing the single jobs\nThis methods is used in case of creating the workflow first time.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jobsName\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An Array of the name of the selected jobs\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addJobsFormWorkflow\n                        \n                        \n                    \n                \n            \n            \n                \naddJobsFormWorkflow(job: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/workflow.model.ts:101\n                \n            \n\n\n            \n                \n                    Adds all jobs in list to _jobsObjects including instancing the single jobs\nThis methods is used when receiving alredy stored workflow from backend\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentJob\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentJob(count: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/workflow.model.ts:154\n                \n            \n\n\n            \n                \n                    Getter for specific job Object in _jobsObjects array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The index in _jobsObjects\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Base\n\n                    \n                    \n                        The job object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getJobName\n                        \n                        \n                    \n                \n            \n            \n                \ngetJobName(count: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/workflow.model.ts:163\n                \n            \n\n\n            \n                \n                    Getter for name of a specific job Object in _jobsObjects array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The index in _jobsObjects\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The job object's name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getJobs\n                        \n                        \n                    \n                \n            \n            \n                \ngetJobs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/workflow.model.ts:170\n                \n            \n\n\n            \n                \n                    Getter for _jobsObjects (all job objects) array\n\n\n                    \n                    \n                    \n                        Returns :         Base[]\n\n                    \n                    \n                        The _jobObjects\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getJobsLength\n                        \n                        \n                    \n                \n            \n            \n                \ngetJobsLength()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/workflow.model.ts:177\n                \n            \n\n\n            \n                \n                    Getter for the length of _jobsObjects array\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The length of _jobObjects\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateJobs\n                        \n                        \n                    \n                \n            \n            \n                \nupdateJobs(jobs: Base, count: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/workflow.model.ts:146\n                \n            \n\n\n            \n                \n                    Updates a jobs Object in the _jobsObjects array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jobs\n                                    \n                                                Base\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The updated job Object\n\n                                    \n                                \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The index in _jobsObjects\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/workflow.model.ts:184\n                                \n                            \n                    \n                        \n                                Getter for the _name of the workflow\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/workflow.model.ts:191\n                                \n                            \n                    \n                        \n                                Setter for the _name of the workflow\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    name of workflow\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/workflow.model.ts:198\n                                \n                            \n                    \n                        \n                                Getter for the _id of the workflow\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/workflow.model.ts:205\n                                \n                            \n                    \n                        \n                                Setter for the _id of the workflow\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    _id of workflow\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        created_at\n                    \n                \n\n                \n                    \n                        getcreated_at()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/workflow.model.ts:212\n                                \n                            \n                    \n                        \n                                Getter for the _created_at of the workflow\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setcreated_at(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/model/workflow.model.ts:219\n                                \n                            \n                    \n                        \n                                Setter for the _created_at of the workflow\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    creation date of workflow\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Base} from './base.model';\nimport {GripperGrip} from './gripper-grip.model';\nimport {GripperRelease} from './gripper-release.model';\nimport {BaseMove} from './base-move.model';\nimport {ArmTrajectory} from './arm-trajectory.model';\nimport {ArmJoint} from './arm-joint.model';\nimport {ArmCartesian} from './arm-cartesian.model';\n/**\n * NewMethod must be imported\n */\nimport {NewMethod} from './new-method.model';\n/**\n * This class is a model for a workflow.\n * This class contains all properties, methods to handle a worklow internally.\n * E.g. adding selected jobs to the workflow\n */\nexport class Workflow {\n  /**\n   * id of workflow\n   */\n    private _id: string;\n  /**\n   * name of workflow\n   */\n    private _name: string;\n  /**\n   * creation date of workflow ind DB (backend)\n   */\n    private _created_at: number;\n  /**\n   * containing jobs of workflow. Array of jobs in this workflow\n   */\n    private _jobsObjects: Base [];\n\n  /**\n   * constructor\n   * @param {string} name The name of the workflow\n   */\n    constructor(name: string) {\n      this._id = '0';\n      this._name = name;\n      this._created_at = Date.now();\n      this._jobsObjects = [];\n    }\n\n  /**\n   * adds all jobs in list to _jobsObjects including instancing the single jobs\n   *\n   * This methods is used in case of creating the workflow first time.\n   * @param {string[]} jobsName An Array of the name of the selected jobs\n   */\n    addJobs(jobsName: string[]) {\n      for (const jobName of jobsName) {\n        // Switch in eingener Methode auslagern.\n        switch (jobName) {\n          /**\n           * Here you have to add a new case for NewMethod\n           */\n          case 'NewMethodWorkflow': {\n            this._jobsObjects.push(new NewMethod(jobsName));\n            break;\n          }\n          case 'GripperGripWorkflow': {\n            this._jobsObjects.push(new GripperGrip(jobsName));\n            break;\n          }\n          case 'MoveArmOnTrajectoryWorkflow': {\n            this._jobsObjects.push(new ArmTrajectory());\n            break;\n          }\n          case 'MoveArmJointsWorkflow': {\n            this._jobsObjects.push(new ArmJoint());\n            break;\n          }\n          case 'MoveToPositionWorkflow': {\n            this._jobsObjects.push(new BaseMove(jobsName));\n            break;\n          }\n          case 'MoveArmCartesianWorkflow': {\n            this._jobsObjects.push(new ArmCartesian(jobsName));\n            break;\n          }\n          case 'GripperReleaseWorkflow': {\n            this._jobsObjects.push(new GripperRelease(jobsName));\n            break;\n          }\n          // default Regelung!!!!\n          default: {\n            this._jobsObjects.push(new BaseMove(jobsName));\n            break;\n          }\n        }\n      }\n    }\n  /**\n   * Adds all jobs in list to _jobsObjects including instancing the single jobs\n   *\n   * This methods is used when receiving alredy stored workflow from backend\n   * @param {string[]} jobsName An Array of the name of the selected jobs\n   */\n  addJobsFormWorkflow(job: any) {\n      switch (job._name) {\n        /**\n         * Here you have to add a new case for NewMethod\n         */\n        case 'NewMethod': {\n          this._jobsObjects.push(new NewMethod(job));\n          break;\n        }\n        case 'GripperGrip': {\n          console.log(job);\n          this._jobsObjects.push(new GripperGrip(job));\n          break;\n        }\n        case 'MoveArmOnTrajectoryWorkflow': {\n          this._jobsObjects.push(new ArmTrajectory());\n          break;\n        }\n        case 'MoveArmJointsWorkflow': {\n          this._jobsObjects.push(new ArmJoint());\n          break;\n        }\n        case 'MoveToPositionWorkflow': {\n          this._jobsObjects.push(new BaseMove(job));\n          break;\n        }\n        case 'ArmCartesian': {\n          this._jobsObjects.push(new ArmCartesian(job));\n          break;\n        }\n        case 'GripperRelease': {\n          this._jobsObjects.push(new GripperRelease(job));\n          break;\n        }\n        default: {\n          this._jobsObjects.push(new BaseMove(job));\n          break;\n        }\n    }\n  }\n  /**\n   * Updates a jobs Object in the _jobsObjects array\n   * @param {Base} jobs The updated job Object\n   * @param {number} count The index in _jobsObjects\n   */\n    updateJobs(jobs: Base, count: number) {\n      this._jobsObjects[count] = jobs;\n    }\n  /**\n   * Getter for specific job Object in _jobsObjects array\n   * @param {number} count The index in _jobsObjects\n   * @returns The job object\n   */\n    getCurrentJob(count: number): Base {\n      console.log(this._jobsObjects[count]);\n      return this._jobsObjects[count];\n    }\n  /**\n   * Getter for name of a specific job Object in _jobsObjects array\n   * @param {number} count The index in _jobsObjects\n   * @returns The job object's name\n   */\n    getJobName(count: number): string {\n      return this._jobsObjects[count].name;\n    }\n  /**\n   * Getter for _jobsObjects (all job objects) array\n   * @returns The _jobObjects\n   */\n    getJobs(): Base [] {\n      return this._jobsObjects;\n    }\n  /**\n   * Getter for the length of _jobsObjects array\n   * @returns The length of _jobObjects\n   */\n    getJobsLength(): number {\n      return this._jobsObjects.length;\n    }\n  /**\n   * Getter for the _name of the workflow\n   * @returns The _name of the workflow\n   */\n    get name(): string {\n      return this._name;\n    }\n  /**\n   * Setter for the _name of the workflow\n   * @param {string} value name of workflow\n   */\n    set name(value: string) {\n      this._name = value;\n    }\n  /**\n   * Getter for the _id of the workflow\n   * @returns The _id of the workflow\n   */\n    get id(): string {\n      return this._id;\n    }\n  /**\n   * Setter for the _id of the workflow\n   * @param {string} value _id of workflow\n   */\n    set id(value: string) {\n      this._id = value;\n    }\n  /**\n   * Getter for the _created_at of the workflow\n   * @returns The creation date of the workflow\n   */\n    get created_at(): number {\n      return this._created_at;\n    }\n  /**\n   * Setter for the _created_at of the workflow\n   * @param {string} value creation date of workflow\n   */\n    set created_at(value: number) {\n      this._created_at = value;\n    }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkflowListElement.html":{"url":"classes/WorkflowListElement.html","title":"class - WorkflowListElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkflowListElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/workflow-list-element.model.ts\n        \n\n            \n                Description\n            \n            \n                This class is needed especially for workflow-table component.\nIt represents one entry (WorkflowListElement) in the presented workflow table.\nThis class contains all properties, methods to handle a worklow internally.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _created_at\n                            \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                _name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/model/workflow-list-element.model.ts:18\n                            \n                        \n\n                \n                    \n                            default constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/workflow-list-element.model.ts:18\n                            \n                        \n\n                \n                    \n                        creation date of one worktable entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/workflow-list-element.model.ts:10\n                            \n                        \n\n                \n                    \n                        id of the worktable entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/workflow-list-element.model.ts:14\n                            \n                        \n\n                \n                    \n                        name of the worktable entry\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class WorkflowListElement {\n  /**\n   * id of the worktable entry\n   */\n  public _id: string;\n  /**\n   * name of the worktable entry\n   */\n  public _name: string;\n  /**\n   * creation date of one worktable entry\n   */\n  public _created_at: number;\n  /**\n   * default constructor\n   */\n  constructor() {\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkflowTableComponent.html":{"url":"components/WorkflowTableComponent.html","title":"component - WorkflowTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WorkflowTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/workflow-table/workflow-table.component.ts\n\n\n    \n        Description\n    \n    \n        This component is the first page the users see.\nIt presents all workflows, which are stored in backend, in a list.\nVia clicking icons all CRUD operations are possible for the workflows\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-workflow-table\n            \n\n            \n                styleUrls\n                ./workflow-table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./workflow-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                link\n                            \n                            \n                                status\n                            \n                            \n                                workflow\n                            \n                            \n                                workflowList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNew\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteClick\n                            \n                            \n                                onPlayClick\n                            \n                            \n                                onUpdateClick\n                            \n                            \n                                selectNextJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, wizardStepperService: WizardStepperService, httpRequest: HttpRequestService)\n                    \n                \n                        \n                            \n                                Defined in src/app/workflow-table/workflow-table.component.ts:48\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For redirecting\n\n                                                        \n                                                \n                                                \n                                                        wizardStepperService\n                                                  \n                                                        \n                                                                        WizardStepperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For Sharing Workflow Information\n\n                                                        \n                                                \n                                                \n                                                        httpRequest\n                                                  \n                                                        \n                                                                        HttpRequestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For communicating with backend\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNew\n                        \n                        \n                    \n                \n            \n            \n                \naddNew()\n                \n            \n\n\n            \n                \n                    Defined in src/app/workflow-table/workflow-table.component.ts:77\n                \n            \n\n\n            \n                \n                    redirects to available-jobs component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/workflow-table/workflow-table.component.ts:66\n                \n            \n\n\n            \n                \n                    ngOnInit is a lifecycle hook\n\nexecuted after constructor\n\ndeclaration of all necessary variables for this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDeleteClick\n                        \n                        \n                    \n                \n            \n            \n                \nonDeleteClick(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/workflow-table/workflow-table.component.ts:118\n                \n            \n\n\n            \n                \n                    deletes workflow from workflow-table and\nsends the wf-id to be deleted to backend\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID of selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPlayClick\n                        \n                        \n                    \n                \n            \n            \n                \nonPlayClick(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/workflow-table/workflow-table.component.ts:132\n                \n            \n\n\n            \n                \n                    requests workflow data for selected workflow from backend\nand stores the wf data in \"workflow\" and\nredirects to execution-run component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID of selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdateClick\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdateClick(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/workflow-table/workflow-table.component.ts:89\n                \n            \n\n\n            \n                \n                    requests workflow data for selected workflow from backend\nand stores the wf data in \"workflow\" and\nredirects to component of 1st job in workflow list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID of selected workflow\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNextJob\n                        \n                        \n                    \n                \n            \n            \n                \nselectNextJob(job: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/workflow-table/workflow-table.component.ts:159\n                \n            \n\n\n            \n                \n                    stores 1st job's routing-link under link\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.workflowList\n                        \n                    \n                        \n                            \n                                    Defined in src/app/workflow-table/workflow-table.component.ts:48\n                            \n                        \n\n                \n                    \n                        view variable - list of all display workflows in overview table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['id', 'name', 'created', 'action']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/workflow-table/workflow-table.component.ts:44\n                            \n                        \n\n                \n                    \n                        column names in view\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/workflow-table/workflow-table.component.ts:30\n                            \n                        \n\n                \n                    \n                        string used for routing/redirecting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/workflow-table/workflow-table.component.ts:40\n                            \n                        \n\n                \n                    \n                        locally stored status e.g. 'create'\nimportant to navigate through wizard via back and forward buttons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Workflow\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/workflow-table/workflow-table.component.ts:34\n                            \n                        \n\n                \n                    \n                        locally stored workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workflowList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WorkflowListElement[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/workflow-table/workflow-table.component.ts:24\n                            \n                        \n\n                \n                    \n                        list of all display workflows in overview table\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {WorkflowListElement} from '../model/workflow-list-element.model';\nimport {Subscription} from 'rxjs';\nimport {HttpRequestService} from '../execution/http-request.service';\nimport {Workflow} from '../model/workflow.model';\nimport {WizardStepperService} from '../wizard-stepper/wizard-stepper.service';\n\n/**\n * This component is the first page the users see.\n *\n * It presents all workflows, which are stored in backend, in a list.\n * Via clicking icons all CRUD operations are possible for the workflows\n */\n@Component({\n  selector: 'app-workflow-table',\n  templateUrl: './workflow-table.component.html',\n  styleUrls: ['./workflow-table.component.css']\n})\nexport class WorkflowTableComponent implements OnInit {\n  /**\n   * list of all display workflows in overview table\n   */\n  workflowList: WorkflowListElement[] = [];\n\n  // private workflowListSub: Subscription;\n  /**\n   * string used for routing/redirecting\n   */\n  link: string;\n  /**\n   * locally stored workflow\n   */\n  workflow: Workflow;\n  /**\n   * locally stored status e.g. 'create'\n   *\n   * important to navigate through wizard via back and forward buttons\n   */\n  status: string;\n  /**\n   * column names in view\n   */\n  displayedColumns: string[] = ['id', 'name', 'created', 'action'];\n  /**\n   * view variable - list of all display workflows in overview table\n   */\n  dataSource = this.workflowList;\n  /**\n   * constructor\n   * @param {Router} router For redirecting\n   * @param {WizardStepperService} wizardStepperService For Sharing Workflow Information\n   * @param {HttpRequestService} httpRequest For communicating with backend\n   */\n  constructor(protected router: Router,\n              private wizardStepperService: WizardStepperService,\n              private httpRequest: HttpRequestService,\n  ) {\n  }\n  /**\n   * ngOnInit is a lifecycle hook\n   * - executed after constructor\n   *\n   * declaration of all necessary variables for this component\n   */\n  ngOnInit() {\n    this.httpRequest.getAllWorkflows();\n    this.httpRequest.getWorkflowListUpdateListener()\n      .subscribe((workflowList: WorkflowListElement[]) => {\n        this.workflowList = workflowList;\n        this.dataSource = this.workflowList;\n      });\n  }\n  /**\n   * redirects to available-jobs component\n   */\n  addNew(): void {\n    this.status = 'create';\n    this.wizardStepperService.updateStatus(this.status);\n    console.log(this.wizardStepperService.getStatus());\n    this.router.navigate(['jobs']);\n  }\n  /**\n   * requests workflow data for selected workflow from backend\n   * and stores the wf data in \"workflow\" and\n   * redirects to component of 1st job in workflow list\n   * @param {number} id ID of selected workflow\n   */\n  onUpdateClick(id: number): void {\n    this.status = 'update';\n    this.httpRequest.getWorkflow(id).subscribe((data: any) => {\n      this.workflow = new Workflow(data._name);\n      this.workflow.id = data._id;\n      this.workflow.created_at = data._created_at;\n\n      for (const workflow of data._jobsObjects) {\n        console.log(workflow._name);\n        console.log(workflow);\n        this.workflow.addJobsFormWorkflow(workflow);\n      }\n      console.log(this.workflow);\n\n      this.wizardStepperService.updateWorkflow(this.workflow);\n      this.wizardStepperService.updateCount(0);\n      this.wizardStepperService.updateStatus(this.status);\n      console.log(data);\n      console.log(this.wizardStepperService.getCounter());\n      console.log(this.wizardStepperService.getStatus());\n      this.selectNextJob(this.workflow.getJobName(0));\n      this.router.navigate([this.link]);\n    });\n  }\n  /**\n   * deletes workflow from workflow-table and\n   * sends the wf-id to be deleted to backend\n   * @param {number} id ID of selected workflow\n   */\n  onDeleteClick(id: number): void {\n    this.httpRequest.deleteWorkflow(id).subscribe((data: any) => {\n      console.log(data);\n      setTimeout(() => {\n        this.httpRequest.getAllWorkflows();\n      }, 500);\n    });\n  }\n  /**\n   * requests workflow data for selected workflow from backend\n   * and stores the wf data in \"workflow\" and\n   * redirects to execution-run component\n   * @param {number} id ID of selected workflow\n   */\n  onPlayClick(id: number): void {\n    this.status = 'play';\n    this.httpRequest.getWorkflow(id).subscribe((data: any) => {\n      this.workflow = new Workflow(data._name);\n      this.workflow.id = data._id;\n      this.workflow.created_at = data._created_at;\n\n      for (const workflow of data._jobsObjects) {\n        console.log(workflow._name);\n        console.log(workflow);\n        this.workflow.addJobsFormWorkflow(workflow);\n      }\n      console.log(this.workflow);\n      this.wizardStepperService.updateWorkflow(this.workflow);\n      this.wizardStepperService.updateCount(0);\n      this.wizardStepperService.updateStatus(this.status);\n      console.log(data);\n      console.log(this.wizardStepperService.getCounter());\n      console.log(this.wizardStepperService.getStatus());\n      this.link = 'wizard/run';\n      this.router.navigate([this.link]);\n    });\n  }\n  /**\n   * stores 1st job's routing-link under link\n   * @param {string} name Name of 1st job in selected workflow\n   */\n  selectNextJob(job: string) {\n    this.link = 'wizard/';\n    switch (job) {\n      case 'GripperGrip': {\n        this.link += 'gripper_grip';\n        break;\n      }\n      case 'MoveArmOnTrajectoryWorkflow': {\n        this.link += 'arm_trajectory';\n        break;\n      }\n      case 'CustomWorkflow': {\n        this.link += 'arm_trajectory';\n        break;\n      }\n      case 'MoveArmJointsWorkflow': {\n        this.link += 'arm_joints';\n        break;\n      }\n      case 'BaseMove': {\n        this.link += 'base';\n        break;\n      }\n      case 'ArmCartesian': {\n        this.link += 'arm_cartesian';\n        break;\n      }\n      case 'GripperRelease': {\n        this.link += 'gripper_release';\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n    console.log(this.link);\n  }\n}\n\n    \n\n    \n        \n\n  \n\n  \n  \n     id \n     {{element._id}} \n  \n\n  \n  \n     name \n     {{element._name}} \n  \n\n  \n  \n     created \n     {{element._created_at | date}} \n  \n\n\n  \n  \n    \n      \n         add \n      \n    \n\n    \n      \n         play_circle_outline\n      \n      \n         border_color\n      \n      \n        delete_forever\n      \n\n    \n  \n\n  \n  \n\n\n\n    \n\n    \n                \n                    ./workflow-table.component.css\n                \n                table {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           id      {{element._id}}            name      {{element._name}}            created      {{element._created_at | date}}                          add                              play_circle_outline                     border_color                    delete_forever                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvailableJobsComponent', 'selector': 'app-available-jobs'},{'name': 'ExecutionRunComponent', 'selector': 'app-execution-run'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'NoPageFoundComponent', 'selector': 'app-no-page-found'},{'name': 'WizardArmCartesianComponent', 'selector': 'app-wizard-arm-cartesian'},{'name': 'WizardArmJoinsComponent', 'selector': 'app-wizard-arm-joins'},{'name': 'WizardArmTrajectoryComponent', 'selector': 'app-wizard-arm-trajectory-movement'},{'name': 'WizardBaseComponent', 'selector': 'app-wizard-base'},{'name': 'WizardGripperGripComponent', 'selector': 'app-wizard-gripper-grip'},{'name': 'WizardGripperReleaseComponent', 'selector': 'app-wizard-gripper-release'},{'name': 'WizardJobComponent', 'selector': 'app-wizard-job'},{'name': 'WizardNewMethodComponent', 'selector': 'app-wizard-new-method'},{'name': 'WizardParentComponent', 'selector': 'app-wizard-parent'},{'name': 'WorkflowTableComponent', 'selector': 'app-workflow-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WorkflowTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/execution/execution-run/execution-run.component.ts\n            \n            component\n            ExecutionRunComponent\n            \n                100 %\n                (31/31)\n            \n        \n        \n            \n                \n                src/app/execution/http-request.service.ts\n            \n            injectable\n            HttpRequestService\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/jobs/available-jobs/available-jobs.component.ts\n            \n            component\n            AvailableJobsComponent\n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                src/app/jobs/available-jobs/available-jobs.component.ts\n            \n            class\n            MyErrorStateMatcher\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/jobs/move.data.ts\n            \n            class\n            Move\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/model/arm-cartesian.model.ts\n            \n            class\n            ArmCartesian\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/model/arm-joint.model.ts\n            \n            class\n            ArmJoint\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/model/arm-trajectory.model.ts\n            \n            class\n            ArmTrajectory\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/model/base-move.model.ts\n            \n            class\n            BaseMove\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/model/base.model.ts\n            \n            class\n            Base\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/model/gripper-grip.model.ts\n            \n            class\n            GripperGrip\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/model/gripper-release.model.ts\n            \n            class\n            GripperRelease\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/model/new-method.model.ts\n            \n            class\n            NewMethod\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/model/workflow-list-element.model.ts\n            \n            class\n            WorkflowListElement\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/model/workflow.model.ts\n            \n            class\n            Workflow\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/no-page-found/no-page-found.component.ts\n            \n            component\n            NoPageFoundComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/sockets/websocket.service.ts\n            \n            class\n            SocketDataService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-arm-cartesian/wizard-arm-cartesian.component.ts\n            \n            component\n            WizardArmCartesianComponent\n            \n                96 %\n                (28/29)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-arm-joins/wizard-arm-joins.component.ts\n            \n            component\n            WizardArmJoinsComponent\n            \n                91 %\n                (21/23)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-arm-trajectory/wizard-arm-trajectory.component.ts\n            \n            component\n            WizardArmTrajectoryComponent\n            \n                91 %\n                (21/23)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-base/wizard-base.component.ts\n            \n            component\n            WizardBaseComponent\n            \n                96 %\n                (28/29)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-gripper-grip/wizard-gripper-grip.component.ts\n            \n            component\n            WizardGripperGripComponent\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-gripper-release/wizard-gripper-release.component.ts\n            \n            component\n            WizardGripperReleaseComponent\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-job/wizard-job.component.ts\n            \n            component\n            WizardJobComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts\n            \n            component\n            WizardNewMethodComponent\n            \n                96 %\n                (28/29)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-parent/wizard-parent-stepper.service.ts\n            \n            injectable\n            WizardParentStepperService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-parent/wizard-parent.component.ts\n            \n            component\n            WizardParentComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/wizard-stepper/wizard-stepper.service.ts\n            \n            injectable\n            WizardStepperService\n            \n                96 %\n                (25/26)\n            \n        \n        \n            \n                \n                src/app/workflow-table/workflow-table.component.ts\n            \n            component\n            WorkflowTableComponent\n            \n                100 %\n                (14/14)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.1.3\n        \n            @angular/cdk : ^8.2.3\n        \n            @angular/common : ^8.1.3\n        \n            @angular/compiler : ^8.1.3\n        \n            @angular/core : ^8.1.3\n        \n            @angular/flex-layout : ^8.0.0-beta.27\n        \n            @angular/forms : ^8.1.3\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ^8.1.3\n        \n            @angular/platform-browser-dynamic : ^8.1.3\n        \n            @angular/router : ^8.1.3\n        \n            hammerjs : ^2.0.8\n        \n            ngx-socket-io : ^3.0.1\n        \n            ngx-spinner : ^8.1.0\n        \n            rxjs : ~6.4.0\n        \n            socket.io-client : ^2.3.0\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRobot Teaching\nRobot Teaching is a web-based user interface for programming mobile manipulators like CHIMERA.The so-called \"Teach-In\" procedure is used to program the robot. \nThe web application is based on the \"MEAN\" Stack which stands for   \n\nM        MongoDB\nE        Express.js\nA        Angular\nN        Node.js   \n\nFor the documentation of the \"Front-End\" Compodoc was used.Compodoc is a documentation tool for Angular applications. Basically it generates a static documentation for the application. \nFor this application the documentation was extended. Under Additional Documentation you will find detailed instructions for adding new robot methods. \nIn the manner of a tutorial every single step is explained in detail. Screenshots and direct links to the affected code passages help the developer to understand how to extend the program. \nTo install Compodoc enter   \n\nnpm install -g @compodoc/compodoc  \n\nin terminal. A detailed description you find here.    \nIf you change the code and want to generate an updated documentation enter:\n\ncompodoc -p tsconfig.json -s -a screenshots --includes additional-doc  \n\nThis command also includes the part of the Additional Documentation in the updated documentation.  \nComponents Structure\nIn the following, the structure of the components will be illustrated.   \nWorkflows Table - Home\n\nLink to Header component.   \nLink to Workflow Table component.      \nJobs Selection – Drag and Drop\n \nLink to Available Jobs component.   \nConfigurator - Gripper Grip\n   \nLink to Wizard Parent parent component. \nLink to Wizard Gripper Grip child component.  \nConfigurator - Arm Cartesian\n    \nLink to Wizard Parent parent component.   \nLink to Wizard Arm Cartesian child component.    \nConfirmed Workflow - Ready for Executing\n    \nLink to Wizard Parent parent component.    \nLink to Execution Run child component.    \nExecuting Workflow - Progress Display\n \nLink to Execution Run component.   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAvailableJobsComponent\n\nAvailableJobsComponent\n\nAppModule -->\n\nAvailableJobsComponent->AppModule\n\n\n\n\n\nExecutionRunComponent\n\nExecutionRunComponent\n\nAppModule -->\n\nExecutionRunComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nNoPageFoundComponent\n\nNoPageFoundComponent\n\nAppModule -->\n\nNoPageFoundComponent->AppModule\n\n\n\n\n\nWizardArmCartesianComponent\n\nWizardArmCartesianComponent\n\nAppModule -->\n\nWizardArmCartesianComponent->AppModule\n\n\n\n\n\nWizardArmJoinsComponent\n\nWizardArmJoinsComponent\n\nAppModule -->\n\nWizardArmJoinsComponent->AppModule\n\n\n\n\n\nWizardArmTrajectoryComponent\n\nWizardArmTrajectoryComponent\n\nAppModule -->\n\nWizardArmTrajectoryComponent->AppModule\n\n\n\n\n\nWizardBaseComponent\n\nWizardBaseComponent\n\nAppModule -->\n\nWizardBaseComponent->AppModule\n\n\n\n\n\nWizardGripperGripComponent\n\nWizardGripperGripComponent\n\nAppModule -->\n\nWizardGripperGripComponent->AppModule\n\n\n\n\n\nWizardGripperReleaseComponent\n\nWizardGripperReleaseComponent\n\nAppModule -->\n\nWizardGripperReleaseComponent->AppModule\n\n\n\n\n\nWizardJobComponent\n\nWizardJobComponent\n\nAppModule -->\n\nWizardJobComponent->AppModule\n\n\n\n\n\nWizardNewMethodComponent\n\nWizardNewMethodComponent\n\nAppModule -->\n\nWizardNewMethodComponent->AppModule\n\n\n\n\n\nWizardParentComponent\n\nWizardParentComponent\n\nAppModule -->\n\nWizardParentComponent->AppModule\n\n\n\n\n\nWorkflowTableComponent\n\nWorkflowTableComponent\n\nAppModule -->\n\nWorkflowTableComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWizardStepperService\n\nWizardStepperService\n\nAppModule -->\n\nWizardStepperService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        13 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/introduction.html":{"url":"additional-documentation/introduction.html","title":"additional-page - Introduction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nIntroduction\nThe documentation in this section is designed as a tutorial and explains how to integrate a new method.The best way to explain how to integrate a new robot method in code is to simply integrate a new method and document each step. Therefore we have added a dummy robot method \"NewMethod\" in code. \n   \nThe dummy robot method is also included in the deliverd code, so developers can see the dependencies in the actual code and only need to change the name of the robot method to be added, its dependencies and properties.   \nThis section explains step by step which classes and methods need to be adapted and which need to be newly created.\nThe changes are shown using code snipets and there is always a link to the dependent class, component, service, model etc. \nMain Changes to be made to add new robot method\n\ncreation of new model\n\nadd model to workflow\n\ncreate new component\n\nadd routes\n\nupdate all routing methods\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/steps-adding-new-method.html":{"url":"additional-documentation/steps-adding-new-method.html","title":"additional-page - Steps adding new method","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nNecessary steps for adding a new robot method in Angular project\n\ncreation of new model\n\nadd model to workflow\n\ncreate new component\n\nadd routes\n\nupdate all routing methods\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html":{"url":"additional-documentation/steps-adding-new-method/1.-creation-of-new-model.html","title":"additional-page - 1. Creation of new Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCreation of a NewMethod model\n\nCreate a new class respectively model for the new robot method within directory \"src/app/model/\".      \n\n         \n\nAdjust \"src/app/model/new-method.model.ts\" Typysript file - e.g. copy paste from other model   \n\n     \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html":{"url":"additional-documentation/steps-adding-new-method/2.-add-model-to-workflow.html","title":"additional-page - 2. Add Model to Workflow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nAdd NewMethod to Workflow Model\nUpdate worflowPath to directory \"src/app/model/workflow.model.ts\".        \n\nImport NewMethod    \n\n    \n\nAdd NewMethod to addjobs(...)    \n\n     \n\nAdd NewMethod to addJobsFormWorkflow(...)    \n\n  \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/steps-adding-new-method/3.-create-new-component.html":{"url":"additional-documentation/steps-adding-new-method/3.-create-new-component.html","title":"additional-page - 3. Create New Component","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCreation of new component for new robot method\n\nCreate new component for the new robot method within directory \"src/app/wizard-stepper/\".     \n\n    \n\nAdjust \"src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.ts\" Typysript file - e.g. copy paste from other component     \n\n    \n\nAdjust \"src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.css\" CSS file - e.g. copy paste from other component    \n\n   \n\nAdjust \"src/app/wizard-stepper/wizard-new-method/wizard-new-method.component.html\" Html file - e.g. copy paste from other component    \n\n  \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/steps-adding-new-method/4.-add-route.html":{"url":"additional-documentation/steps-adding-new-method/4.-add-route.html","title":"additional-page - 4. Add Route","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nAdding new Route in Routing Module\nUpdate Routing ModulePath to directory \"src/app/app-routing/app-routing.module.ts\".  \n\nAdd a new path: \"new_method_path\" and link to component: \"WizardNewMethodComponent\".       \n\n      \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html":{"url":"additional-documentation/steps-adding-new-method/5.-update-all-routing-methods.html","title":"additional-page - 5. Update all Routing Methods","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nUpdate selectNextJob(...) methods in two Components\n\nOpen available jobs componentPath to directory \"src/app/jobs/available-jobs/available-jobs.component.ts\".   \n\nAdd 'new_method_path' in selectNextJob(...) in \"available-jobs.component.ts\"     \n\n\n   \n\nOpen wizard job componentPath to directory \"src/app/wizzard-step/wizzard-job/wizard-job.component.ts\".     \n\nAdd 'new_method_path' in selectNextJob(...) in \"wizard-job.component.ts\"     \n\n\n     \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
